#!/usr/bin/env node
"use strict";const e=require("path"),t=require("fs"),n=require("os"),s=require("ipaddr.js"),r=require("http"),i=require("https"),o=require("cluster"),a=require("mongodb"),l=require("vm"),c=require("parsimmon"),u=require("crypto"),f=require("espresso-iisojs"),p=require("@breejs/later"),d=require("dgram"),h=require("url"),m=require("child_process"),g=require("readline");function w(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function y(e){if(e&&e.__esModule)return e;const t=Object.create(null);if(e)for(const n in e)if("default"!==n){const s=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,s.get?s:{enumerable:!0,get:function(){return e[n]}})}return t.default=e,Object.freeze(t)}const _=y(e),E=y(t),O=y(n),S=y(r),A=y(i),v=w(o),T=y(l),N=w(c),I=y(u),b=y(p),C=y(d),$=w(g);let x,R,L,P,k,D,U=e.resolve(__dirname,"..");for(;!t.existsSync(`${U}/package.json`);){const t=e.resolve(U,"..");if(t===U){U=process.cwd();break}U=t}const M={EXT_DIR:{type:"path",default:e.resolve(U,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/device_manager"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"::"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"::"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"::"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"::"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},j={};function F(t,n,s=!1){if(null!=j[t])return!0;function r(t,n){switch(n){case"int":return Number(t);case"bool":return["true","1"].includes(String(t).trim().toLowerCase());case"string":return String(t);case"path":return t?e.resolve(t):"";default:return null}}"CONFIG_DIR"!==t&&"config-dir"!==t||(x=x||e.resolve(U,n)),"CWMP_SSL"!==t&&"cwmp-ssl"!==t||(R=R||String(n).toLowerCase().trim()),"NBI_SSL"!==t&&"nbi-ssl"!==t||(L=L||String(n).toLowerCase().trim()),"FS_SSL"!==t&&"fs-ssl"!==t||(P=P||String(n).toLowerCase().trim()),"UI_SSL"!==t&&"ui-ssl"!==t||(k=k||String(n).toLowerCase().trim()),"FS_HOSTNAME"!==t&&"fs-hostname"!==t||(D=D||String(n).trim()),"PRESETS_CACHE_DURATION"!==t&&"presets-cache-duration"!==t||F("MAX_CACHE_TTL",n),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==t&&"get-parameter-names-depth-threshold"!==t||F("GPN_NEXT_LEVEL",n),"TASK_PARAMETERS_BATCH_SIZE"!==t&&"task-parameters-batch-size"!==t||F("GPV_BATCH_SIZE",n),"FS_IP"!==t&&"fs-ip"!==t||F("FS_HOSTNAME",n);let i=null;for(const[e,o]of Object.entries(M)){let a=e;if(s&&(a=a.toLowerCase().replace(/_/g,"-")),t===a?(i=r(n,o.type),a=e):t.startsWith(`${a}-`)&&(i=r(n,o.type),a=`${e}-${t.slice(e.length+1)}`),null!=i)return j[a]=i,process.env[`GENIEACS_${a}`]=i,!0}return!1}const H=process.argv.slice(2);for(;H.length;){const e=H.shift();if("-"===e[0]){const t=H.shift();F(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&F(e.slice(9),t);const q=x?`${x}/config.json`:`${U}/config/config.json`;if(t.existsSync(q)){const e=JSON.parse(t.readFileSync(q).toString());for(const[t,n]of Object.entries(e))F(t,n)||(process.env[`GENIEACS_${t}`]=`${n}`)}if(x&&F("EXT_DIR",`${x}/ext`),["true","1"].includes(R)){const e=x||`${U}/config`;F("CWMP_SSL_CERT",`${e}/cwmp.crt`),F("CWMP_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(L)){const e=x||`${U}/config`;F("NBI_SSL_CERT",`${e}/cwmp.crt`),F("NBI_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(P)){const e=x||`${U}/config`;F("FS_SSL_CERT",`${e}/cwmp.crt`),F("FS_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(k)){const e=x||`${U}/config`;F("UI_SSL_CERT",`${e}/cwmp.crt`),F("UI_SSL_KEY",`${e}/cwmp.key`)}if(D){const e=j.FS_PORT||7567;F("FS_URL_PREFIX",(!!j.FS_SSL_CERT?"https":"http")+`://${D}:${e}/`)}for(const[e,t]of Object.entries(M))null!=t.default&&F(e,t.default);function W(e,t){if(!t)return j[e];let n=j[e=`${e}-${t}`];if(null!=n)return n;let s=e.lastIndexOf("-");return n=j[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),n=j[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),n=j[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),s>0&&(n=j[e.slice(0,s)],null!=n)?n:null)))}let B,V,J=!1;const G=new WeakMap;function z(e=!0){return J=e,new Promise(((e,t)=>{var n,s;setTimeout((()=>{t(new Error("Could not close server in a timely manner"))}),3e4).unref(),n=2e4,s=e,B?(setTimeout((()=>{if(!s)return;B.removeListener("request",V),B.setTimeout(1);const e=s;s=null,setTimeout(e,1e3)}),n).unref(),B.close((()=>{if(!s)return;const e=s;s=null,setTimeout(e,50)}))):s()}))}function K(e){var t;return G.get(null!==(t=e._parent)&&void 0!==t?t:e)}const Z=""+W("FORWARDED_HEADER"),X=new WeakMap,Y=[];for(const e of Z.split(",").map((e=>e.trim())))try{Y.push(s.parseCIDR(e))}catch(t){try{const t=s.parse(e);Y.push([t,8*t.toByteArray().length])}catch(e){}}function Q(e){let t=X.get(e);if(!t){const n=K(e.socket);t={localAddress:n.localAddress,localPort:n.localPort,remoteAddress:n.remoteAddress,remotePort:n.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const r=e.headers.forwarded;if(r){const e=s.parse(n.remoteAddress);if(Y.some((t=>e.kind()===t[0].kind()&&e.match(t)))){const e=function(e){e=e.toLowerCase();const t={};let n,s=0,r=-1;for(let i=0;i<e.length;++i){const o=e.charCodeAt(i);if(61===o)s>=0&&(n=e.slice(s,i).trim(),s=-1,r=i+1);else if(59===o)r>=0&&(t[n]=e.slice(r,i).trim()),r=-1,s=i+1;else{if(44===o)return r>=0&&(t[n]=e.slice(r,i).trim()),t;if(34===o&&r>=0){const o=i;if(!e.slice(r,o).trim())for(i+=1;i<e.length;++i){const a=e.charCodeAt(i);if(92===a&&++i,34===a){t[n]=JSON.parse(e.slice(o,i+1).trim()),r=-1,s=i+1;break}}}}}return r>=0&&(t[n]=e.slice(r).trim()),t}(r);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,n]=e.host.split(":",2);t.localPort=+n||t.localPort}if(e.for)if(e.for.startsWith("[")){const n=e.for.lastIndexOf("]");n>=0&&(t.remoteAddress=e.for.slice(1,n),t.remotePort=parseInt(e.for.slice(n+2))||t.remotePort)}else{const n=e.for.lastIndexOf(":");n>=0?(t.remoteAddress=e.for.slice(0,n),t.remotePort=parseInt(e.for.slice(n+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const n=e.by.lastIndexOf("]");n>=0&&(t.localAddress=e.by.slice(1,n),t.localPort=parseInt(e.by.slice(n+2))||t.localPort)}else{const n=e.by.lastIndexOf(":");n>=0?(t.localAddress=e.by.slice(0,n),t.localPort=parseInt(e.by.slice(n+1))||t.localPort):t.localAddress=e.by}}}X.set(e,t)}return t}const ee=W("LOG_FORMAT"),te=W("ACCESS_LOG_FORMAT")||ee,ne={};let se,re,ie=!1,oe=!1,ae=E.createWriteStream(null,{fd:process.stderr.fd}),le=E.fstatSync(ae.fd),ce=E.createWriteStream(null,{fd:process.stdout.fd}),ue=E.fstatSync(ce.fd);function fe(){let e=1;se&&(++e,E.stat(se,((t,n)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;n&&n.dev===le.dev&&n.ino===le.ino||(ae.end(),ae=E.createWriteStream(null,{fd:E.openSync(se,"a")}),le=E.fstatSync(ae.fd)),0==--e&&setTimeout(fe,6e4-Date.now()%6e4).unref()}))),re&&(++e,E.stat(re,((t,n)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;n&&n.dev===ue.dev&&n.ino===ue.ino||(ce.end(),ce=E.createWriteStream(null,{fd:E.openSync(re,"a")}),ue=E.fstatSync(ce.fd)),0==--e&&setTimeout(fe,6e4-Date.now()%6e4).unref()}))),0==--e&&setTimeout(fe,6e4-Date.now()%6e4).unref()}function pe(e){if(e.sessionContext){const t=e.sessionContext;e.deviceId=t.deviceId,e.remoteAddress=Q(t.httpRequest).remoteAddress,delete e.sessionContext}if(e.exception){const t=e.exception;e.exceptionName=t.name,e.exceptionMessage=t.message,e.exceptionStack=t.stack,delete e.exception}if(e.task&&(e.taskId=e.task._id,delete e.task),e.rpc){const t=e.rpc;t.acsRequest?(e.acsRequestId=t.id,e.acsRequestName=t.acsRequest.name,t.acsRequest.commandKey&&(e.acsRequestCommandKey=t.acsRequest.commandKey)):t.cpeRequest?(e.cpeRequestId=t.id,"Inform"===t.cpeRequest.name?(e.informEvent=t.cpeRequest.event.join(","),e.informRetryCount=t.cpeRequest.retryCount):(e.cpeRequestName=t.cpeRequest.name,t.cpeRequest.commandKey&&(e.cpeRequestCommandKey=t.cpeRequest.commandKey))):t.cpeFault&&(e.acsRequestId=t.id,e.cpeFaultCode=t.cpeFault.detail.faultCode,e.cpeFaultString=t.cpeFault.detail.faultString),delete e.rpc}if(e.fault){const t=e.fault;e.faultCode=t.code,e.faultMessage=t.message,delete e.fault}e.context&&(e.remoteAddress=Q(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,n]of Object.entries(e))null==n&&delete e[t];return e}function de(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(pe(e))}${O.EOL}`}return`${JSON.stringify(pe(e))}${O.EOL}`}function he(e,t){const n={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};pe(e);let s="";e.remoteAddress&&(s=e.deviceId&&n.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:`${e.remoteAddress}: `);const r=Object.keys(e);let i="";const o=[];for(const t of r)n[t]||o.push(`${t}=${JSON.stringify(e[t])}`);if(o.length&&(i=`; ${o.join(" ")}`),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${i}${O.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${i}${O.EOL}`}function me(e){e.timestamp=(new Date).toISOString(),"json"===ee?(e=Object.assign({},ne,e),ae.write(de(e,ie))):ae.write(he(e,ie))}function ge(e){e.severity="info",me(e)}function we(e){e.severity="warn",me(e)}function ye(e){e.severity="error",me(e)}function _e(e){e.severity="info",function(e){e.timestamp=(new Date).toISOString(),"json"===te?(Object.assign(e,ne),ce.write(de(e,oe))):ce.write(he(e,oe))}(e)}let Ee=0,Oe=[];function Se(){const e=v.default.fork();return e.on("error",(t=>{if("EPIPE"!==t.code)throw t;setTimeout((()=>{if(!e.isDead())throw t}),50)})),e}function Ae(e,t,n){const s={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(s.exitCode=t),null!=n&&(s.signal=n),ye(s);const r=Date.now();Oe.push(r);let i=0,o=0,a=0;if(Oe=Oe.filter((e=>{if(e>r-6e4)++i;else if(e>r-12e4)++o;else{if(!(e>r-18e4))return!1;++a}return!0})),i>5&&o>5&&a>5){process.exitCode=1,v.default.removeListener("exit",Ae);for(const e in v.default.workers)v.default.workers[e].kill();ye({message:"Too many crashes, exiting",pid:process.pid})}else Ee=Math.max(r,Ee+2e3),Ee!==r?setTimeout((()=>{process.exitCode||Se()}),Ee-r):Se()}function ve(){v.default.removeListener("exit",Ae);for(const e in v.default.workers)v.default.workers[e].kill()}const Te=v.default.worker;function Ne(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function Ie(e){return encodeURIComponent(e).replace(/[!~*'().]/g,(e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())).replace(/0x(?=[0-9A-Z]{2})/g,"0%78").replace(/%/g,"0x")}function be(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/g,((e,n)=>{const s=n.charAt(0),r=n.slice(1);return"u"===s?String.fromCharCode(parseInt(r,16)):t.hasOwnProperty(s)?t[s]:s}))}function Ce(e,t){if(!Array.isArray(e))return t(e);let n;for(let s=1;s<e.length;++s){const r=Ce(e[s],t);r!==e[s]&&(n=n||e.slice(),n[s]=r)}return t(n||e)}async function $e(e,t){if(!Array.isArray(e))return t(e);let n;for(let s=1;s<e.length;++s){const r=await $e(e[s],t);r!==e[s]&&(n=n||e.slice(),n[s]=r)}return t(n||e)}function xe(e,t){return N.default.seqMap(t,N.default.seq(e,t).many(),((e,t)=>t.reduce(((e,t)=>{const[n,s]=t;return Array.isArray(e)&&n===e[0]?e.concat([s]):[n,e,s]}),e)))}const Re=N.default.createLanguage({ComparisonOperator:function(){return N.default.alt(N.default.string(">="),N.default.string("<>"),N.default.string("<="),N.default.string("="),N.default.string(">"),N.default.string("<")).skip(N.default.optWhitespace)},LikeOperator:function(){return N.default.alt(N.default.regexp(/like/i).result("LIKE").desc("LIKE"),N.default.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace)},IsNullOperator:function(){return N.default.alt(N.default.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),N.default.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace)},NotOperator:function(){return N.default.regexp(/not/i).result("NOT").notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("NOT")},AndOperator:function(){return N.default.regexp(/and/i).result("AND").notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("AND")},OrOperator:function(){return N.default.regexp(/or/i).result("OR").notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("OR")},Parameter:function(e){return N.default.alt(N.default.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(N.default.string("{").skip(N.default.optWhitespace),N.default.string("}"))).atLeast(1).map((e=>["PARAM",e.length>1?["||"].concat(e):e[0]])).skip(N.default.optWhitespace).desc("parameter")},StringValueSql:function(){return N.default.regexp(/'([^']*)'/,1).atLeast(1).skip(N.default.optWhitespace).map((e=>e.join("'"))).desc("string")},StringValueJs:function(){return N.default.regexp(/"((?:\\.|.)*?)"/,1).skip(N.default.optWhitespace).map(be).desc("string")},NumberValue:function(){return N.default.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return N.default.alt(N.default.regexp(/true/i).result(!0).desc("TRUE"),N.default.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace)},NullValue:function(){return N.default.regexp(/null/i).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return N.default.seqMap(N.default.regexp(/([a-zA-Z0-9_]+)/,1).skip(N.default.optWhitespace).desc("function"),e.ExpressionList.wrap(N.default.string("(").skip(N.default.optWhitespace),N.default.string(")").skip(N.default.optWhitespace)),((e,t)=>["FUNC",e.toUpperCase()].concat(t)))},WhenPair:function(e){return N.default.seq(N.default.regexp(/when/i).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("WHEN").then(e.Expression),N.default.regexp(/then/i).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("THEN").then(e.Expression))},CaseStatement:function(e){return N.default.seqMap(N.default.regexp(/case/i).result("CASE").notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("CASE"),e.WhenPair.many(),N.default.regexp(/else/i).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/)).skip(N.default.optWhitespace).desc("ELSE").then(e.Expression).map((e=>[[!0,e]])).fallback(null).skip(N.default.regex(/end/i).notFollowedBy(N.default.regexp(/[a-zA-Z0-9_]/))).skip(N.default.optWhitespace),((...e)=>e.flat(2)))},Value:function(e){return N.default.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue,e.CaseStatement)},ValueExpression:function(e){return xe(N.default.string("||").skip(N.default.optWhitespace),xe(N.default.alt(N.default.string("+"),N.default.string("-")).skip(N.default.optWhitespace),xe(N.default.alt(N.default.string("*"),N.default.string("/"),N.default.string("%")).skip(N.default.optWhitespace),N.default.alt(e.Value,e.Parameter,e.Expression.wrap(N.default.string("(").skip(N.default.optWhitespace),N.default.string(")").skip(N.default.optWhitespace))))))},Comparison:function(e){return N.default.alt(N.default.seqMap(e.ValueExpression,e.IsNullOperator,((e,t)=>[t,e])),N.default.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,((e,t,n)=>[t,e,n])),N.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(N.default.regexp(/escape/i).result("ESCAPE").skip(N.default.whitespace).desc("ESCAPE")),e.ValueExpression,((e,t,n,s)=>[t,e,n,s])),N.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,((e,t,n)=>[t,e,n])))},ExpressionList:function(e){return e.Expression.sepBy(N.default.string(",").skip(N.default.optWhitespace))},Expression:function(e){return xe(e.OrOperator,xe(e.AndOperator,(t=e.NotOperator,n=e.Comparison.or(e.ValueExpression),N.default.seq(t,n).or(n)))).trim(N.default.optWhitespace);var t,n}});function Le(e){return e?Re.Expression.tryParse(e):null}function Pe(e,t){const n=e.split("");for(let e=0;e<n.length;++e){const s=n[e];if(s===t)n[e]=n[e+1]||"",n[e+1]="";else if("_"===s)n[e]="\\_";else if("%"===s)for(n[e]="\\%";"%"===n[e+1];)n[++e]=""}return n.filter((e=>e))}const ke={devices:null,presets:null,objects:null,provisions:null,virtualParameters:null,faults:null,tasks:null,files:null,operations:null,permissions:null,users:null,config:null};let De;const Ue=[];function Me(e){Ue.push(e)}async function je(){null!=De&&await(await De).close()}function Fe(e){return"[object Object]"===Object.prototype.toString.call(e)}function He(e){if("string"==typeof e){const t=[e],n=/^\/(.*?)\/(g?i?m?y?)$/.exec(e);n&&t.push({$regex:new RegExp(n[1],n[2])}),+e===parseFloat(e)&&t.push(+e);const s=new Date(e);e.length>=8&&s.getFullYear()>1983&&t.push(s);const r=function(e,t){if(-1===e.indexOf("*"))return!1;let n=e.replace(/[[\]\\^$.|?+()]/,"\\$&");return n="*"===n[0]?n.replace(/^\*+/g,""):"^"+n,"*"===n[n.length-1]?n=n.replace(/\*+$/g,""):n+="$",n=n.replace(/[*]/,".*"),new RegExp(n,t)}(e);return!1!==r&&t.push({$regex:r}),t}return e}Me((async e=>{ke.tasks=e.collection("tasks"),await ke.tasks.createIndex({device:1,timestamp:1}),ke.devices=e.collection("devices"),ke.presets=e.collection("presets"),ke.objects=e.collection("objects"),ke.files=e.collection("fs.files"),ke.provisions=e.collection("provisions"),ke.virtualParameters=e.collection("virtualParameters"),ke.faults=e.collection("faults"),ke.operations=e.collection("operations"),ke.permissions=e.collection("permissions"),ke.users=e.collection("users"),ke.config=e.collection("config")}));const qe=new Set(["$eq","$gt","$gte","$in","$lt","$lte","$ne","$nin"]);function We(e){if(Array.isArray(e)){let t=[];for(const n of e)t=t.concat(We(n));return[t]}if(!Fe(e)){const t=He(e);return Array.isArray(t)?t:[t]}const t=[],n=[],s=[],r=[];for(const[t,i]of Object.entries(e))s.push(t),qe.has(t)?r.push(We(i)):r.push([i]),n.push(0);let i=0;for(;i<n.length;){const e={};for(let t=0;t<s.length;++t)e[s[t]]=r[t][n[t]];for(t.push(e),i=0;i<n.length&&(n[i]+=1,!(n[i]<r[i].length));++i)n[i]=0}return t}function Be(e,t){const n=[],s=We(t);"_"!==e[e.lastIndexOf(".")+1]&&(e+="._value");for(const t of s){const s={};s[e]=t,n.push(s)}return n}function Ve(e){const t={};for(const[n,s]of Object.entries(e))if("$"===n[0])t[n]=s.map((e=>Ve(e)));else{const e=Be(n,s);if(e.length>1)if(t.$and=t.$and||[],!s||null==s.$ne&&null==s.$not)t.$and.push({$or:e});else{if(Object.keys(s).length>1)throw new Error("Cannot mix $ne or $not with other operators");for(const n of e)t.$and.push(n)}else Object.assign(t,e[0])}return t}function Je(e,t){for(const[n,s]of Object.entries(e))if("$"===n[0])for(const e of s)Je(e,t);else if(n in t)if(Fe(s))for(const[e,r]of Object.entries(s))switch(e){case"$in":case"$nin":for(let e=0;e<r.length;++e)r[e]=t[n](r[e]);break;case"$eq":case"$gt":case"$gte":case"$lt":case"$lte":case"$ne":s[e]=t[n](r);break;case"$exists":case"$type":break;default:throw new Error("Operator not supported")}else e[n]=t[n](e[n]);return e}const Ge=+W("MAX_CACHE_TTL");let ze;async function Ke(e){const t=await ze.findOne({_id:e});return null==t?void 0:t.value}async function Ze(e){await ze.deleteOne({_id:e})}async function Xe(e,t,n=0,s=Math.random().toString(36).slice(2)){try{const n=Date.now(),r=await ze.findOneAndUpdate({_id:e,value:s},{$set:{expire:new Date(n+t+3e4)},$currentDate:{timestamp:!0}},{upsert:!0,returnDocument:"after"});if(Math.abs(r.value.timestamp.getTime()-n)>3e4)throw new Error("Database clock skew too great")}catch(r){if(11e3!==r.code)throw r;if(!(n>0))return null;const i=50+50*Math.random();return await new Promise((e=>setTimeout(e,i))),Xe(e,t,n-i,s)}return s}Me((async e=>{ze=e.collection("cache"),await ze.createIndex({expire:1},{expireAfterSeconds:0})}));BigInt;const Ye=Array.isArray,Qe=new WeakMap,et={};function tt(e,t){let n=!0;for(;n;){n=!1;for(let s=2;s<e.length;++s){const r=t(e[s-1],e[s],s-2);r!==et&&(n=!0,(e=e.slice()).splice(s-1,2,r))}}return 2===e.length?e[1]:e}function nt(e,t="",n=""){const s={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let r=Pe(e,t);if(!r.length)return new RegExp("^$",n);r=r.map((e=>s[e]||e)),r[0]=".*"===r[0]?"":"^"+r[0];const i=r.length-1;return r[i]=[".*",""].includes(r[i])?"":r[i]+"$",new RegExp(r.join(""),n)}function st(e,t){return"boolean"==typeof e&&(e=+e),"boolean"==typeof t&&(t=+t),typeof e!=typeof t?"string"==typeof e?1:-1:e>t?1:e<t?-1:0}function rt(e){switch(typeof e){case"number":return e;case"boolean":return+e;case"string":return parseFloat(e)||0}}function it(e){switch(typeof e){case"string":return e;case"number":return e.toString();case"boolean":return(+e).toString()}}function ot(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){for(let t=1;t<e.length;t+=2){if(Array.isArray(e[t]))return e;if(e[t])return e[t+1]}return null}if("FUNC"===e[0]){if("COALESCE"===e[1]){const t=[];for(let n=2;n<e.length;++n){const s=e[n];if(null!=s&&(t.push(s),!Array.isArray(s)))break}return t.length?1===t.length?t[0]:["FUNC","COALESCE",...t]:null}if("UPPER"===e[1]){if(null==e[2])return null;if(!Ye(e[2]))return it(e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!Ye(e[2]))return it(e[2]).toLowerCase()}else if("ROUND"===e[1]){const t=e[2],n=e.length>3?e[3]:0;if(null==t||null==n)return null;if(!Ye(t)&&!Ye(n)){const e=10**n,s=t*e*(1+Number.EPSILON);return Math.round(s)/e}}}else if("PARAM"===e[0]){if(null==e[1])return null}else{if("AND"===e[0]){for(let t=1;t<e.length;++t)if(!Array.isArray(e[t])&&null!=e[t]&&!e[t])return!1;const t=[];for(let n=1;n<e.length;++n){const s=e[n];if(null==s)return null;Array.isArray(s)&&("AND"===s[0]?t.push(...s.slice(1)):t.push(s))}return!t.length||(1===t.length&&t.push(!0),["AND",...t])}if("OR"===e[0]){const t=[];for(let n=1;n<e.length;++n){const s=e[n];if(Array.isArray(s))"OR"===s[0]?t.push(...s.slice(1)):t.push(s);else if(s)return!0}return t.length?(1===t.length&&t.push(!1),["OR",...t]):!!e.some((e=>null==e))&&null}if("NOT"===e[0]){if(null==e[1])return null;if(!Ye(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return Ye(e[1])?e:null==e[1];if("IS NOT NULL"===e[0])return Ye(e[1])?e:null!=e[1];if("LIKE"===e[0]){if(Ye(e[1])||Ye(e[2])||Ye(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=Qe.get(e);return t||(t=nt(e[2],e[3]),Qe.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(Ye(e[1])||Ye(e[2])||Ye(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=Qe.get(e);return t||(t=nt(e[2],e[3]),Qe.set(e,t)),!t.test(e[1])}if("="===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:0===st(e[1],e[2]);if("<>"===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:0!==st(e[1],e[2]);if(">"===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:st(e[1],e[2])>0;if(">="===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:st(e[1],e[2])>=0;if("<"===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:st(e[1],e[2])<0;if("<="===e[0])return null==e[1]||null==e[2]?null:Ye(e[1])||Ye(e[2])?e:st(e[1],e[2])<=0;if("*"===e[0])return tt(e,((e,t)=>null==e||null==t?null:Ye(e)||Ye(t)?et:rt(e)*rt(t)));if("/"===e[0])return tt(e,((e,t,n)=>{if(null==e||null==t)return null;if(Ye(e)||Ye(t))return et;const s=rt(e),r=rt(t);return 0!==n?s*r:0===r?null:s/r}));if("+"===e[0])return tt(e,((e,t)=>null==e||null==t?null:Ye(e)||Ye(t)?et:rt(e)+rt(t)));if("-"===e[0])return tt(e,((e,t,n)=>null==e||null==t?null:Ye(e)||Ye(t)?et:0===n?rt(e)-rt(t):rt(e)+rt(t)));if("%"===e[0])return tt(e,((e,t,n)=>{if(null==e||null==t)return null;if(Ye(e)||Ye(t)||0!==n)return et;const s=rt(e),r=Math.trunc(rt(t));return 0===r?null:s%r}));if("||"===e[0])return tt(e,((e,t)=>null==e||null==t?null:Ye(e)||Ye(t)?et:it(e)+it(t)))}}return e}function at(e,t,n,s){return Ce(e,(e=>{if(s&&(e=s(e)),!Ye(e))return e;if("FUNC"===e[0]&&"NOW"===e[1]){if(n)return n}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!Ye(e[1])){let n;return n="function"==typeof t?t(e[1]):t[e[1]],null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return ot(e)}))}async function lt(e,t,n,s){return $e(e,(async e=>{if(s&&(e=await s(e)),!Ye(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]&&n)return n}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!Ye(e[1])){let n=t[e[1]];return null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return ot(e)}))}class ct{constructor(){this.variables=new Map,this.clauses=new Map}getVar(e){const t=e.toString();let n=this.variables.get(t);return null==n&&(n=this.variables.size,this.variables.set(t,n),this.clauses.set(n,e)),n}getClause(e){return this.clauses.get(e)}canRaise(e,t){return!0}sanitizeMinterms(e){return e}minimize(e,t=[]){e=this.sanitizeMinterms(e);const n=this.canRaise.bind(this);return f.espresso(e,[...this.getDcSet(e),...t],{canRaise:n})}}function*ut(e){if(!Array.isArray(e))return;const t=e[0];if("IS NULL"!==t&&"IS NOT NULL"!==t){if("FUNC"===t){if("NOW"===e[1])return;if("LOWER"===e[1]||"UPPER"===e[1])yield*ut(e[2]);else if("ROUND"===e[1]){for(const t of e.slice(2,4))yield*ut(t);return}}else if("PARAM"!==t){for(const t of e.slice(1))yield*ut(t);return}yield e}}class ft{expression(){if(void 0!==this._expression)return this._expression;const e=ht(),t=this.true(e),n=e.minimize(t);return this._expression=e.toExpression(n),this._expression}isBoolean(){return!0}isNullable(e){return this._isNullable||(this._isNullable=new Set([...this.getNullables()].map((e=>e.toString())))),this._isNullable.has(e.toString())}*getNullables(){const e=this.expression();for(const t of ut(e))t===e?yield new ft.IsNull(this):yield new ft.IsNull(new ft.Exp(t))}toString(){return JSON.stringify(this.expression())}}function pt(e,t){const n=new Map;for(const s of e){const e=t(s);let r=n.get(e);r||n.set(e,r=[]),r.push(s)}return n.entries()}!function(e){class t extends e{constructor(e){super(),this.operand=e}true(e){return this.operand.false(e)}false(e){return this.operand.true(e)}null(e){return this.operand.null(e)}}e.Not=t;class n extends e{constructor(e){super(),this.operands=e}true(e){const t=[];for(const n of this.operands){const s=n.true(e);if(1===s.length&&!s[0].length)return[[]];t.push(...s)}return t}false(e){const t=[],s=[...this.operands];for(const r of s){if(r instanceof n){s.push(...r.operands);continue}const i=r.false(e);if(!i.length)return[];t.push(i)}return t.length?1===t.length?t[0]:f.complement(t.map((e=>f.complement(e))).flat()):[[]]}null(e){const t=[],s=[...this.operands];for(const r of s){if(r instanceof n){s.push(...r.operands);continue}const i=r.true(e);if(1===i.length&&!i[0].length)return[];t.push(...i)}const r=[];for(const n of s){const s=n.null(e);if(1===s.length&&!s[0].length&&!t.length)return[[]];r.push(...s)}return t.length?f.complement([...f.complement(r),...t]):r}}e.Or=n;class s extends e{constructor(e){super(),this.operands=e}true(e){const t=[],n=[...this.operands];for(const r of n){if(r instanceof s){n.push(...r.operands);continue}const i=r.true(e);if(!i.length)return[];(1!==i.length||i[0].length)&&t.push(i)}return t.length?1===t.length?t[0]:f.complement(t.map((e=>f.complement(e))).flat()):[[]]}false(e){const t=[];for(const n of this.operands){const s=n.false(e);if(1===s.length&&!s[0].length)return[[]];t.push(...s)}return t}null(e){const t=[],n=[...this.operands];for(const r of n){if(r instanceof s){n.push(...r.operands);continue}const i=r.false(e);if(1===i.length&&!i[0].length)return[];t.push(...i)}const r=[];for(const s of n){const n=s.null(e);if(1===n.length&&!n[0].length&&!t.length)return[[]];r.push(...n)}return t.length?f.complement([...f.complement(r),...t]):r}}e.And=s;e.Case=class extends e{constructor(e){super(),this.clauses=e}true(e){const t=[],n=[];for(let s=0;s<this.clauses.length;s+=2){const r=this.clauses[s].true(e),i=this.clauses[s+1].true(e);t.push(...f.complement([...n,...f.complement(r),...f.complement(i)])),s<this.clauses.length-2&&n.push(...f.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t}false(e){const t=[],n=[];for(let s=0;s<this.clauses.length;s+=2){const r=this.clauses[s].true(e),i=this.clauses[s+1].false(e);t.push(...f.complement([...n,...f.complement(r),...f.complement(i)])),s<this.clauses.length-2&&n.push(...f.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t}null(e){const t=[],n=[];for(let s=0;s<this.clauses.length;s+=2){const r=this.clauses[s].true(e),i=this.clauses[s+1].null(e);t.push(...f.complement([...n,...f.complement(r),...f.complement(i)])),n.push(...f.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t.push(...f.complement([...n])),t}expression(){if(null!=this._expression)return this._expression;if(this.isBoolean())return this._expression=new e.Not(new e.Not(this)).expression(),this._expression;const t=ht(),n=[];for(let e=0;e<this.clauses.length;e+=2){let s=this.clauses[e].true(t);const r=this.clauses[e+1].expression();if(n.length&&JSON.stringify(r)===JSON.stringify(n[n.length-1].then)&&s.push(...n.pop().when),s=t.minimize(s,n.flatMap((e=>e.when))),s.length&&(n.push({when:s,then:r}),1===s.length&&!s[0].length))break}for(;null==n[n.length-1].then;)n.pop();return n.length?(this._expression=["CASE",...n.flatMap((e=>[t.toExpression(e.when),e.then]))],this._expression):null}isBoolean(){for(let e=1;e<this.clauses.length;e+=2)if(!this.clauses[e].isBoolean())return!1;return!0}};e.IsNull=class extends e{constructor(e){super(),this.operand=e,this._boolean=new t(new t(this))}true(e){return this.operand.null(e)}false(e){return f.complement(this.true(e))}null(){return[]}isBoolean(){return!0}*getNullables(){}expression(){const e=[...this.operand.getNullables()];return 1===e.length&&e[0].operand===this.operand?["IS NULL",this.operand.expression()]:super.expression()}};class r extends e{constructor(e){super(),this.exp=e}true(e){return Array.isArray(this.exp)?e.getMinterms(this,!0):this.exp?[[]]:[]}false(e){return Array.isArray(this.exp)?e.getMinterms(this,!1):this.exp||null==this.exp?[]:[[]]}null(e){return Array.isArray(this.exp)?e.getMinterms(this,null):null==this.exp?[[]]:[]}expression(){return this.exp}isBoolean(){return!0===this.exp||!1===this.exp||null==this.exp}}e.Exp=r;e.Compare=class extends e{constructor(e,t,n){super(),this.lhs=e,this.op=t,this.rhs=n}true(e){return e.getMinterms(this,!0)}false(e){return e.getMinterms(this,!1)}null(e){return this.lhs.null(e)}*getNullables(){yield*this.lhs.getNullables()}isBoolean(){return!0}expression(){return[this.op,this.lhs.expression(),this.rhs]}};e.Like=class extends e{constructor(e,t,n){super(),this.rhs=t,this.esc=n;const s=e.expression();let i=!0,o=!1;if(Array.isArray(s)&&"FUNC"===s[0]){const n=s[1];if("UPPER"===n||"LOWER"===n){("UPPER"===n?t.toUpperCase():t.toLowerCase())===t?i=!1:o=!0,e=new r(s[2])}}this.lhs=e,this.pattern=Pe(t,n),this.caseSensitive=i,this.contradiction=o}true(e){return e.getMinterms(this,!0)}false(e){return e.getMinterms(this,!1)}null(e){return this.lhs.null(e)}isBoolean(){return!0}isNullable(e){return this.lhs.isNullable(e)}getNullables(){return this.lhs.getNullables()}expression(){let e=this.lhs.expression();return this.contradiction?e=this.rhs===this.rhs.toLocaleUpperCase()?["FUNC","LOWER",e]:["FUNC","UPPER",e]:this.caseSensitive||(e=this.rhs===this.rhs.toLocaleUpperCase()?["FUNC","UPPER",e]:["FUNC","LOWER",e]),["LIKE",e,this.rhs,...this.esc?[this.esc]:[]]}},e.fromExpression=function(t){return Ce(t,(t=>{if(!Array.isArray(t))return new e.Exp(t);let n,s=t[0],i=!0;if("NOT LIKE"===s?s="LIKE":"IS NOT NULL"===s?s="IS NULL":"<>"===s?s="=":">="===s?s="<":"<="===s?s=">":i=!1,"IS NULL"===s)n=new e.IsNull(t[1]);else if("NOT"===s)n=new e.Not(t[1]);else if("OR"===s)n=new e.Or(t.slice(1));else if("AND"===s)n=new e.And(t.slice(1));else if("CASE"===s)n=new e.Case(t.slice(1));else if("LIKE"===s){const s=t[2]instanceof r?t[2].expression():null,i=t[3]instanceof r?t[3].expression():null;"string"==typeof s&&"string"==typeof i?n=new e.Like(t[1],s,i):"string"==typeof s&&null==i&&(n=new e.Like(t[1],s))}else if(">"===s||"<"===s||"="===s){const i=t[2]instanceof r?t[2].expression():null;["boolean","number","string"].includes(typeof i)&&(n=new e.Compare(t[1],s,i))}if(!n){const r=t.slice(1).map((e=>e.expression()));n=new e.Exp([s,...r])}return i&&(n=new e.Not(n)),n}))}}(ft||(ft={}));class dt extends ct{constructor(){super()}getMinterms(e,t){const n=this.getVar(e);return!0===t?[[n<<2^3]]:!1===t?[[n<<2^1]]:[[n<<2,n<<2^2]]}getDcSet(e){const t=[],n=new Set([...e.flat()].map((e=>e>>2))),s=[...n].map((e=>this.getClause(e))),r=s.filter((e=>e instanceof ft.Compare));for(const[,e]of pt(r,(e=>JSON.stringify(e.lhs)))){const s=e[0].lhs,r=[...new Set(e.map((e=>e.rhs)))].sort(((e,t)=>{const n=typeof e,s=typeof t;return n===s?e>t?1:-1:"string"===n?1:"string"===s?-1:+e-+t}));for(const[e,i]of r.entries()){const o=this.getVar(new ft.Compare(s,"=",i)),a=this.getVar(new ft.Compare(s,">",i)),l=this.getVar(new ft.Compare(s,"<",i));t.push([o<<2^3,a<<2^3]),t.push([l<<2^3,a<<2^3]),t.push([l<<2^3,o<<2^3]),t.push([l<<2^1,o<<2^1,a<<2^1]);const c=[l,o,a].filter((e=>!n.has(e)));1===c.length&&n.add(c[0]);for(let n=0;n<e;n++){const e=this.getVar(new ft.Compare(s,"=",r[n])),i=this.getVar(new ft.Compare(s,">",r[n])),c=this.getVar(new ft.Compare(s,"<",r[n]));t.push([i<<2^1,l<<2^1]),t.push([e<<2^3,l<<2^1]),t.push([c<<2^3,l<<2^1]),t.push([i<<2^1,a<<2^3]),t.push([i<<2^1,o<<2^3]),t.push([e<<2^3,a<<2^3]),t.push([e<<2^3,o<<2^3]),t.push([c<<2^3,a<<2^3]),t.push([c<<2^3,o<<2^3])}}}const i=s.filter((e=>e instanceof ft.Like));for(const[,e]of pt(i,(e=>JSON.stringify(e.lhs))))for(let n=0;n<e.length;++n){const s=e[n];if(s.contradiction)t.push([this.getVar(s)<<2^3]);else for(let r=n+1;r<e.length;++r){const n=e[r];if(n.contradiction)continue;let i=s.pattern,o=n.pattern;s.caseSensitive&&n.caseSensitive||(i=i.map((e=>e.toLowerCase())),o=o.map((e=>e.toLowerCase()))),gt(i,o)?t.push([this.getVar(s)<<2^3,this.getVar(n)<<2^3]):s.caseSensitive&&!n.caseSensitive||!mt(i,o)?n.caseSensitive&&!s.caseSensitive||!mt(o,i)||(t.push([this.getVar(s)<<2^3,this.getVar(n)<<2^2]),t.push([this.getVar(s)<<2^0,this.getVar(n)<<2^1])):(t.push([this.getVar(s)<<2^2,this.getVar(n)<<2^3]),t.push([this.getVar(s)<<2^1,this.getVar(n)<<2^0]))}}for(const e of n){const s=this.getClause(e),r=[...s.getNullables()].map((e=>this.getVar(e)));if(r.length){t.push([...r.map((e=>e<<2^2)),e<<2^0,e<<2^2]);for(const s of r)t.push([s<<2^3,e<<2^1]),t.push([s<<2^3,e<<2^3]),n.add(s)}if(s instanceof ft.IsNull){const n=s.operand.toString();'["PARAM","DeviceID.ID"]'!==n&&'["PARAM","_id"]'!==n||t.push([e<<2^3])}}return t.filter((e=>e.every((e=>n.has(e>>2)))))}canRaise(e,t){const n=this.getClause(e>>2);if(n instanceof ft.IsNull){for(const s of t){if(s===e||1&s)continue;if(this.getClause(s>>2).isNullable(n))return!1}return!0}return!(1&e&&t.has(3^e))}sanitizeMinterms(e){const t=[];e:for(const n of e){const e=new Map;for(const t of n)e.set(t>>2,(e.get(t>>2)||0)|1<<(3&t));const s=[],r=[];for(const[t,n]of e){if(10===n)continue e;const e=[...this.clauses.get(t).getNullables()].map((e=>this.getVar(e))),i=t<<2;5===n?1===e.length?s.push(e[0]<<2^3):r.push(e.map((e=>e<<2^3))):1===n?r.push([...e.map((e=>e<<2^3)),3^i]):4===n?r.push([...e.map((e=>e<<2^3)),1^i]):8&n?s.push(3^i):2&n&&s.push(1^i)}let i=[s];for(;r.length;){const e=[],t=r.pop();for(const n of t)e.push(...i.map((e=>[...e,n])));i=e}t.push(...i)}return t}toExpression(e){if(!e.length)return!1;const t=[];for(const n of e){if(!n.length)return!0;const e=[];for(const t of n){let n=this.getClause(t>>>2).expression();if(!(1&t)!=!(2&t)&&(n=["NOT",n]),Array.isArray(n)&&"NOT"===n[0]&&Array.isArray(n[1])){const e=n[1];"IS NULL"===e[0]?n=["IS NOT NULL",...e.slice(1)]:"LIKE"===e[0]?n=["NOT LIKE",...e.slice(1)]:"="===e[0]?n=["<>",...e.slice(1)]:"<>"===e[0]?n=["=",...e.slice(1)]:">"===e[0]?n=["<=",...e.slice(1)]:">="===e[0]?n=["<",...e.slice(1)]:"<"===e[0]?n=[">=",...e.slice(1)]:"<="===e[0]?n=[">",...e.slice(1)]:"NOT"===e[0]&&(n=e[1])}e.push(n)}e.length>1?t.push(["AND",...e]):t.push(e[0])}return t.length>1?["OR",...t]:t[0]}}function ht(){return new dt}function mt(e,t){let n=null;for(let s=0,r=0;;++s,++r){for(;s<e.length&&"\\%"===e[s];)n=[s++,r];if(r>=t.length)return s>=e.length;const i=s<e.length?e[s]:null;if(i!==t[r]&&"\\_"!==i){if(!n)return!1;[s,r]=n,++n[1]}}}function gt(e,t){const n=e.indexOf("\\%"),s=t.indexOf("\\%"),r=e.lastIndexOf("\\%"),i=t.lastIndexOf("\\%"),o=e.slice(0,-1!==n?n:e.length),a=t.slice(0,-1!==s?s:t.length),l=e.slice(-1!==r?r+1:0).reverse(),c=t.slice(-1!==i?i+1:0).reverse();for(let e=0;e<Math.min(o.length,a.length);++e)if(o[e]!==a[e]&&"\\_"!==o[e]&&"\\_"!==a[e])return!0;for(let e=0;e<Math.min(l.length,c.length);++e)if(l[e]!==c[e]&&"\\_"!==l[e]&&"\\_"!==c[e])return!0;return e.length===o.length?t.filter((e=>"\\%"!==e)).length>e.length:t.length===a.length&&e.filter((e=>"\\%"!==e)).length>t.length}function wt(e){const t=+e;return isNaN(t)?""+e:t}function yt(e){const t={};return function e(t,n,s,r){for(const[i,o]of Object.entries(t)){if(!n)if("_lastInform"===i)s["Events.Inform"]={value:[wt(o),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_registered"===i)s["Events.Registered"]={value:[wt(o),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_lastBoot"===i)s["Events.1_BOOT"]={value:[wt(o),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_lastBootstrap"===i)s["Events.0_BOOTSTRAP"]={value:[wt(o),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_id"===i)s["DeviceID.ID"]={value:[o,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_deviceId"===i)s["DeviceID.Manufacturer"]={value:[o._Manufacturer,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.OUI"]={value:[o._OUI,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.ProductClass"]={value:[o._ProductClass,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.SerialNumber"]={value:[o._SerialNumber,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_tags"===i){s.Tags={writable:!1,writableTimestamp:r,object:!0,objectTimestamp:r};for(const e of o)s[`Tags.${Ie(e)}`]={value:[!0,"xsd:boolean"],valueTimestamp:r,writable:!0,writableTimestamp:r,object:!1,objectTimestamp:r}}if(i.startsWith("_"))continue;let a=r;n?+t._timestamp>r&&(a=+t._timestamp):a=+(t._timestamp||1);const l={};null!=o._value?(l.value=[o._value instanceof Date?+o._value:o._value,o._type],l.valueTimestamp=+(o._timestamp||a),l.object=!1,l.objectTimestamp=a):null!=o._object&&(l.object=o._object,l.objectTimestamp=a),null!=o._writable&&(l.writable=o._writable,l.writableTimestamp=a),null!=o._notification&&(l.notification=o._notification,l.notificationTimestamp=+o._attributesTimestamp||1),null!=o._accessList&&(l.accessList=o._accessList,l.accessListTimestamp=+o._attributesTimestamp||1);const c=n?`${n}.${i}`:i;s[c]=l,(l.object||null==o.object)&&e(o,c,s,a)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}function _t(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),b.schedule(b.parse.cron(t.join(" "),!0))}const Et=new Map;let Ot=null,St=1;function At(e,t="",n={}){for(const s of Object.keys(e)){const r=e[s];"object"!=typeof r||Array.isArray(r)?n[`${t}${s}`]=r:At(r,`${t}${s}.`,n)}return n}async function vt(){const e=await async function(){return ke.presets.find().toArray()}();let t=await async function(){return ke.objects.find().toArray()}();t=t.map((e=>{var t;return(null===(t=(e=At(e))._keys)||void 0===t?void 0:t.length)||(e._keys=Object.keys(e).filter((e=>!e.startsWith("_")))),e})),e.sort(((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight));const n=[];for(const r of e){let e=null;if(r.schedule){const t=r.schedule.trim().split(/\s+/);e={md5:I.createHash("md5").update(r.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=_t(t.join(" "))}catch(t){we({message:"Invalid preset schedule",preset:r._id,schedule:r.schedule}),e.schedule=!1}}const i=r.events||{};let o=!0;if(r.precondition){try{o=Le(r.precondition)}catch(e){s=JSON.parse(r.precondition),o=!Object.keys(s).length||function e(t){const n=[];for(const[s,r]of Object.entries(t))if("$"===s[0])if("$and"===s){const t=["AND"];for(const n of Object.values(r))t.push(e(n));n.push(t)}else{if("$or"!==s)throw new Error(`Operator ${s} not supported`);{const t=["OR"];for(const n of Object.values(r))t.push(e(n));n.push(t)}}else if("_tags"===s)if("object"==typeof r){if(Array.isArray(r))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(r))if("$ne"===t){if("string"!=typeof r.$ne)throw new Error("Only string values are allowed for _tags");e.push(["IS NULL",["PARAM",`Tags.${Ie(n)}`]])}else{if("$eq"!==t)throw new Error("Invalid tag query");if("string"!=typeof r.$eq)throw new Error("Only string values are allowed for _tags");e.push(["IS NOT NULL",["PARAM",`Tags.${Ie(n)}`]])}1===e.length?n.push(e[0]):e.length>1&&n.push(["AND",...e])}else n.push(["IS NOT NULL",["PARAM",`Tags.${Ie(r)}`]]);else if(s.startsWith("Tags.")){let e;if("boolean"==typeof r)e=r;else if(r.hasOwnProperty("$eq"))e=!!r.$eq;else if(r.hasOwnProperty("$ne"))e=!r.$ne;else{if(!r.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!r.$exists}n.push([e?"IS NOT NULL":"IS NULL",["PARAM",s]])}else if("object"==typeof r){if(Array.isArray(r))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(r)){if("$eq"===t)e.push(["=",["PARAM",s],n]);else if("$ne"===t)e.push(["OR",["<>",["PARAM",s],n],["IS NULL",["PARAM",s]]]);else if("$lt"===t)e.push(["<",["PARAM",s],n]);else if("$lte"===t)e.push(["<=",["PARAM",s],n]);else if("$gt"===t)e.push([">",["PARAM",s],n]);else{if("$gte"!==t)throw new Error(`Operator ${t} not supported`);e.push([">=",["PARAM",s],n])}if(!["string","number","boolean"].includes(typeof n))throw new Error(`Invalid value for ${t} operator`)}if(1===e.length)n.push(e[0]);else if(e.length>1){const t=["AND"];n.push(t.concat(e))}}else n.push(["=",["PARAM",s],r]);return 1===n.length?n[0]:0===n.length||["AND",...n]}(s)}o=at(o)}const a=r.provisions||[];for(const e of r.configurations)switch(e.type){case"age":a.push(["refresh",e.name,+e.age]);break;case"value":a.push(["value",e.name,e.value]);break;case"add_tag":a.push(["tag",e.tag,!0]);break;case"delete_tag":a.push(["tag",e.tag,!1]);break;case"provision":a.push([e.name].concat(e.args||[]));break;case"add_object":for(const n of t)if(n._id===e.object){const t=n._keys.map((e=>`${e}:${JSON.stringify(n[e])}`)).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,1]);for(const e in n)e.startsWith("_")||-1!==n._keys.indexOf(e)||a.push(["value",`${s}.${e}`,n[e]])}break;case"delete_object":for(const n of t)if(n._id===e.object){const t=n._keys.map((e=>`${e}:${JSON.stringify(n[e])}`)).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,0])}break;default:throw new Error(`Unknown configuration type ${e.type}`)}n.push({name:r._id,channel:r.channel||"default",schedule:e,events:i,precondition:o,provisions:a})}var s;return n}async function Tt(){const e=await async function(){return ke.provisions.find().toArray()}(),t={};for(const n of e)t[n._id]={},t[n._id].md5=I.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new T.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function Nt(){const e=await async function(){return ke.virtualParameters.find().toArray()}(),t={};for(const n of e)t[n._id]={},t[n._id].md5=I.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new T.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function It(){const e=await async function(){return ke.permissions.find().toArray()}(),t={};for(const n of e)t[n.role]||(t[n.role]={}),t[n.role][n.access]||(t[n.role][n.access]={}),t[n.role][n.access][n.resource]={access:n.access,filter:Le(n.filter||"true")},n.validate&&(t[n.role][n.access][n.resource].validate=Le(n.validate));return t}async function bt(){const e=await ke.files.find().toArray(),t={};for(const n of e){const e=n.filename||n._id.toString();t[e]={},t[e].length=n.length}return t}async function Ct(){const e=await async function(){return ke.users.find().toArray()}(),t={};for(const n of e)t[n._id]={password:n.password,salt:n.salt,roles:n.roles.split(",").map((e=>e.trim()))};return t}async function $t(){const e=await async function(){return(await ke.config.find().toArray()).map((e=>({id:e._id,value:Le(e.value)})))}();e.sort(((e,t)=>e.id>t.id?1:e.id<t.id?-1:0));const t={filters:{},device:{},index:{},overview:{},pageSize:null},n={};for(const s of e){const e=at(s.value);if(n[s.id]=e,s.id.startsWith("ui.")){const n=s.id.split(".");if(!(n[1]in t))continue;n.shift();let r=t;for(;n.length>1;){const e=n.shift();null!=r[e]&&"object"==typeof r[e]||(r[e]={}),r=r[e]}r[n[0]]=e}}return[n,t]}async function xt(){if(!St)return await new Promise((e=>setTimeout(e,20))),xt();const e=Date.now();if(e<St)return;St=0;const t=await Ke("presets_hash");if(Ot&&t===Ot)return void(St=e+(5e3-e%5e3));const n=await Xe("presets_hash_lock",5e3),s=await Promise.all([vt(),Tt(),Nt(),bt(),It(),Ct(),$t()]),r={presets:s[0],provisions:s[1],virtualParameters:s[2],files:s[3],permissions:s[4],users:s[5],config:s[6][0],ui:s[6][1]};if(Ot){const e=Ot,t=Et.get(e);setTimeout((()=>{Et.get(e)===t&&Et.delete(e)}),12e4).unref()}Ot=function(e){const t=I.createHash("md5");for(const n of e.presets)t.update(JSON.stringify(n.name)),t.update(JSON.stringify(n.channel)),t.update(JSON.stringify(n.schedule)),t.update(JSON.stringify(n.events)),t.update(JSON.stringify(n.precondition)),t.update(JSON.stringify(n.provisions));let n;n=Object.keys(e.provisions).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(e.provisions[s].md5);n=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(e.virtualParameters[s].md5);n=Object.keys(e.config).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.config[s]));n=Object.keys(e.files).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.files[s]));n=Object.keys(e.users).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.users[s]));const s=Object.keys(e.permissions).sort();t.update(JSON.stringify(s));for(const r of s){const s=Object.keys(e.permissions[r]).sort();t.update(JSON.stringify(s));for(const i of s){n=Object.keys(e.permissions[r][i]).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.permissions[r][i][s]))}}return t.digest("hex")}(r),Et.set(Ot,r),n&&(Ot!==t&&await async function(e,t,n=Ge){const s=new Date,r=new Date(s.getTime()+3e4+1e3*n);await ze.replaceOne({_id:e},{value:t,expire:r,timestamp:s},{upsert:!0})}("presets_hash",Ot,300),await async function(e,t){if(1!==(await ze.deleteOne({_id:e,value:t})).deletedCount)throw new Error("Lock expired")}("presets_hash_lock",n)),St=e+(5e3-e%5e3)}function Rt(e,t,n,s,r){const i=Et.get(e);if(!i)throw new Error("Cache snapshot does not exist");const o={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in o){let e;return(null==n?void 0:n.id)?e=n.id:r&&(e=r(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),W(o[t],e)}return null}const a=at(i.config[t],n,s,r);return Array.isArray(a)?null:a}function Lt(e){const t=(e=e.trim()).split(" ",1)[0],n={method:t};return Object.assign(n,function(e){const t={},n=e.split(",");let s;for(;null!=(s=n.shift());){const e=s.split("=",1)[0];if(e.length===s.length){if(!s.trim())continue;throw new Error("Unable to parse auth header")}let r=s.slice(e.length+1);if(/^\s*"/.test(r)){for(;!/[^\\]"\s*$/.test(r);){const e=n.shift();if(null==e)throw new Error("Unable to parse auth header");r+=","+e}try{r=JSON.parse(r)}catch(e){throw new Error("Unable to parse auth header")}}else r=r.trim();t[e.trim()]=r}return t}(e.slice(t.length+1))),n}function Pt(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function kt(e,t,n,s,r,i){const o=u.randomBytes(8).toString("hex"),a="00000001";let l;i.qop&&(l=-1!==i.qop.indexOf(",")?"auth":i.qop);const c=function(e,t,n,s,r,i,o,a,l,c){const f=u.createHash("md5");f.update(e).update(":").update(t).update(":").update(n);const p=f.digest("hex"),d=u.createHash("md5");if(d.update(r).update(":").update(i),"auth-int"===o){const e=u.createHash("md5").update(a||"").digest("hex");d.update(":").update(e)}const h=d.digest("hex"),m=u.createHash("md5");return m.update(p).update(":").update(s),o&&m.update(":").update(c).update(":").update(l).update(":").update(o),m.update(":").update(h),m.digest("hex")}(e,i.realm,t,i.nonce,s,n,l,r,o,a);let f=`Digest username="${e}"`;return f+=`,realm="${i.realm}"`,f+=`,nonce="${i.nonce}"`,f+=`,uri="${n}"`,i.algorithm&&(f+=`,algorithm=${i.algorithm}`),l&&(f+=`,qop=${l},nc=${a},cnonce="${o}"`),f+=`,response="${c}"`,i.opaque&&(f+=`,opaque="${i.opaque}"`),f}const Dt=+W("EXT_TIMEOUT"),Ut={},Mt=new Map;function jt(e){return new Promise((t=>{const n=Date.now()+5e3;e.kill();const s=setInterval((()=>{e.connected?Date.now()>n&&(e.kill("SIGKILL"),clearInterval(s),t()):(clearInterval(s),t())}),100)}))}async function Ft(){await Promise.all(Object.entries(Ut).map((([e,t])=>(delete Ut[e],jt(t)))))}const Ht=new Set(["true","True","TRUE","false","False","FALSE","null","Null","NULL"]);function qt(e){return!/[^\t\n\x20-\x7e\x85\u{a0}-\u{d7ff}\u{e000}-\u{fffd}\u{10000}-\u{10ffff}]/u.test(e)}function Wt(e){return e&&qt(e)?/^[\s-?:,[\]{}#&$!|>'"%@`]|: | #|[\n,[\]{}]|\s$/.test(e)?JSON.stringify(e):e:JSON.stringify(e)}function Bt(e,t,n="",s=""){if(null==e)return void t.push(`${n}null`);if("number"==typeof e||"boolean"==typeof e)return void t.push(`${n}${JSON.stringify(e)}`);if(e instanceof Date)return void t.push(`${n}${e.toJSON()}`);if("string"==typeof e)return void function(e,t,n,s){if(/^\s*$/.test(e)||Ht.has(e)||!qt(e))return void t.push(n+JSON.stringify(e));s||(s="  ");const r=e.split("\n");if(r.length>1){let i="",o="-";if((r.find((e=>e))||"").startsWith(" ")&&(i=`${"  ".length}`),r[r.length-1]||(r.pop(),o=r[r.length-1]?"":"+"),/^\s+$/.test(r[r.length-1]))return void t.push(n+JSON.stringify(e));let a=!1;const l=r.map((e=>{const t=function(e){if(e.length<=80)return[e];if(e.startsWith(" "))return[e];const t=[];let n=0,s=0;for(let r=1;r<e.length-1;++r){if(" "!==e[r])continue;if(" "===e[r+1]){for(r+=2;" "===e[r];)++r;continue}if(r<=n+80){s=r;continue}const i=s>n?s:r;t.push(e.slice(n,i)),n=i+1,s=r}return s>n&&e.length>n+80&&(t.push(e.slice(n,s)),n=s+1),t.push(e.slice(n)),t}(e);return t.length>1&&(a=!0),t}));if(!a)return void t.push(`${n}|${i}${o}`,...r.map((e=>e?s+e:e)));t.push(`${n}>${i}${o}`),t.push(...l[0].map((e=>s+e)));for(let e=1;e<l.length;++e)l[e-1][0]&&!l[e-1][0].startsWith(" ")&&t.push(""),t.push(...l[e].map((e=>s+e)))}else/^[\s-?:,[\]{}#&$!|>'"%@`]|: | #|\s$/.test(e)||parseFloat(e)===+e?t.push(n+JSON.stringify(e)):t.push(n+e)}(e,t,n,s);if(Array.isArray(e)){if(!e.length)return void t.push(n+"[]");if(!n||n.endsWith("- ")){Bt(e[0],t,n+"- ",s+"  "),n=s+"- ",s+="  ";for(let r=1;r<e.length;++r)Bt(e[r],t,n,s)}else{t.push(n),n=s+"- ",s+="  ";for(let r=0;r<e.length;++r)Bt(e[r],t,n,s)}return}const r=Object.entries(e).filter((e=>void 0!==e[1]));if(r.length)if(!n||n.endsWith("- ")){Bt(r[0][1],t,n+`${Wt(r[0][0])}: `,s+"  "),n=s,s+="  ";for(let e=1;e<r.length;++e)Bt(r[e][1],t,n+`${Wt(r[e][0])}: `,s)}else{t.push(n),n=s,s+="  ";for(let e=0;e<r.length;++e)Bt(r[e][1],t,n+`${Wt(r[e][0])}: `,s)}else t.push(n+"{}")}function Vt(e){if(void 0===e)return;const t=[];return Bt(e,t),t.join("\n")+"\n"}const Jt=""+W("DEBUG_FILE"),Gt=""+W("DEBUG_FORMAT"),zt=new WeakMap;function Kt(e){let t=zt.get(e);return t||(t=new Date,zt.set(e,t)),t}function Zt(e,n,s,r){if(!Jt)return;const i={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:n,remotePort:s,body:r};if("yaml"===Gt)t.appendFileSync(Jt,"---\n"+Vt(i));else{if("json"!==Gt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(i)+"\n")}}async function Xt(e,t){let n,s;const r=await lt(e,{},0,(async e=>{if(!n&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:n}=await(r=e.slice(2),new Promise((e=>{const t=r[0],n=I.randomBytes(8).toString("hex");if(Mt.set(n,e),!Ut[t]){const s=m.spawn(U+"/bin/genieacs-ext",[t],{stdio:["ignore","pipe","pipe","ipc"]});Ut[t]=s,s.on("error",(r=>{Ut[t]===s&&(Mt.delete(n)&&e({fault:{code:r.name,message:r.message},value:null}),jt(Ut[t]),delete Ut[t])})),s.on("disconnect",(()=>{Ut[t]===s&&delete Ut[t]})),s.on("message",(e=>{const t=Mt.get(e[0]);t&&(Mt.delete(e[0]),setTimeout((()=>{t({fault:e[1],value:e[2]})})))})),$.default.createInterface(s.stdout).on("line",(e=>{ge({message:`Ext ${t}(${s.pid}): ${e}`})})),$.default.createInterface(s.stderr).on("line",(e=>{we({message:`Ext ${t}(${s.pid}): ${e}`})}))}return setTimeout((()=>{Mt.delete(n)&&e({fault:{code:"timeout",message:"Extension timed out"},value:null})}),Dt),!!Ut[t].connected&&Ut[t].send([n,r.slice(1)])})));return t?null:n}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(n=e[2]||"",s=e[3]||""),t}var r;return e}));return[n,s,r]}function Yt(e,n,s,r){return new Promise(((i,o)=>{const a=S.get(e,n,(n=>{n.resume(),i({statusCode:n.statusCode,headers:n.headers}),s&&(function(e,n,s,r,i){if(!Jt)return;const o=new Date,a=e.socket,l={event:"outgoing HTTP request",timestamp:o,remoteAddress:a.remoteAddress,deviceId:n,connection:Kt(a),remotePort:r.port,method:s,url:r.pathname+r.search,headers:e.getHeaders(),body:i};if("yaml"===Gt)t.appendFileSync(Jt,"---\n"+Vt(l));else{if("json"!==Gt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(l)+"\n")}}(a,r,"GET",e,null),function(e,n,s){if(!Jt)return;const r={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.socket.remoteAddress,deviceId:n,connection:Kt(e.socket),statusCode:e.statusCode,headers:e.headers,body:s};if("yaml"===Gt)t.appendFileSync(Jt,"---\n"+Vt(r));else{if("json"!==Gt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(r)+"\n")}}(n,r,null))})).on("error",(n=>{a.destroy(),o(n),s&&function(e,n,s,r,i){if(!Jt)return;const o={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:r.hostname,deviceId:n,connection:null,remotePort:r.port,method:s,url:r.pathname+r.search,headers:e.getHeaders(),error:i.message};if("yaml"===Gt)t.appendFileSync(Jt,"---\n"+Vt(o));else{if("json"!==Gt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Jt,JSON.stringify(o)+"\n")}}(a,r,"GET",e,n)})).on("timeout",(()=>{a.destroy()}))}))}async function Qt(e,t){if(!t){const n=await ke.devices.findOne({_id:e});if(!n)throw new Error("No such device");t=yt(n)}let n,s,r,i;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(n=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],r=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(n=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],r=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const o=new URL(n).hostname,a=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]&&"string"==typeof e[1]){let n=e[1];if("id"===n)n="DeviceID.ID";else if("serialNumber"===n)n="DeviceID.SerialNumber";else if("productClass"===n)n="DeviceID.ProductClass";else if("oui"===n)n="DeviceID.OUI";else{if("remoteAddress"===n)return o;if("username"===n)return r;if("password"===n)return i}const s=t[n];if(null==s?void 0:s.value)return s.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return o;if("USERNAME"===e[1])return r;if("PASSWORD"===e[1])return i}return e},l=await async function(){return Date.now()>St&&await xt(),Ot}(),c=Date.now(),u=+Rt(l,"cwmp.udpConnectionRequestPort",{},c,a),f=+Rt(l,"cwmp.connectionRequestTimeout",{},c,a),p=!!Rt(l,"cwmp.connectionRequestAllowBasicAuth",{},c,a);let d=function(e,t){const n=Et.get(e);if(!n)throw new Error("Cache snapshot does not exist");return n.config[t]}(l,"cwmp.connectionRequestAuth");void 0===d&&(d=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),d=at(d,{},c,a);const m=!!Rt(l,"cwmp.debug",{},c,a);let g=Promise.resolve(!1);if(s)try{const t=new URL("udp://"+s);g=async function(e,t,n,s=0,r,i){const o=Date.now(),a=C.createSocket({type:"udp4",reuseAddr:!0});let l,c;for(s&&a.bind({port:s,exclusive:!0}),[l,c,n]=await Xt(n,null),null==l&&(l=""),null==c&&(c="");null!=l&&null!=c;){const s=Math.trunc(o/1e3),u=Math.trunc(4294967295*Math.random()),f=I.randomBytes(8).toString("hex"),p=I.createHmac("sha1",c).update(`${s}${u}${l}${f}`).digest("hex"),d=`GET http://${e}:${t}?ts=${s}&id=${u}&un=${l}&cn=${f}&sig=${p} HTTP/1.1\r\nHost: ${e}:${t}\r\n\r\n`,h=Buffer.from(d);for(let n=0;n<3;++n)await new Promise(((n,s)=>{a.send(h,0,h.length,t,e,(o=>{o?s(o):n(),r&&Zt(e,i,t,d)}))}));[l,c,n]=await Xt(n,null)}a.close()}(t.hostname,parseInt(t.port||"80"),d,u,m,e).then((()=>!0),(()=>!1))}catch(e){}const w=await async function(e,t,n,s,r,i){const o=new h.URL(e);if("http:"!==o.protocol)return"Invalid connection request URL or protocol";const a={agent:new S.Agent({maxSockets:1,keepAlive:!0,timeout:s})};let l,c,u;for(;!l||null!=c&&null!=u;){let e,s=a;if(l)if("Basic"===l.method){if(!n)return"Basic HTTP authentication not allowed";s=Object.assign({headers:{Authorization:Pt(c||"",u||"")}},a)}else{if("Digest"!==l.method)return"Unrecognized auth method";s=Object.assign({headers:{Authorization:kt(c,u,o.pathname+o.search,"GET",null,l)}},a)}try{e=await Yt(o,s,r,i)}catch(t){if(l)try{e=await Yt(o,s,r,i)}catch(e){return`Connection request error: ${e.message}`}return"ECONNRESET"===t.code||"ECONNREFUSED"===t.code?"Device is offline":`Connection request error: ${t.message}`}if(200===e.statusCode||204===e.statusCode)return"";if(503===e.statusCode)return"Device is offline";if(401!==e.statusCode||!e.headers["www-authenticate"])return`Connection request error: Unexpected status code ${e.statusCode}`;try{l=Lt(e.headers["www-authenticate"])}catch(e){return"Connection request error: Error parsing www-authenticate header"}[c,u,t]=await Xt(t,!1)}return"Connection request error: Incorrect connection request credentials"}(n,d,p,f,m,e);return await g?"":w}async function en(e,t,n){const s=Date.now();if((await ke.devices.findOne({_id:e},{projection:{_lastInform:1}}))._lastInform.getTime()>t)return!0;return!!await Ke(`cwmp_session_${e}`)||!(n<500)&&(await new Promise((e=>setTimeout(e,500))),en(e,t,n-=Date.now()-s))}async function tn(e,t){const n=Date.now();return!await Ke(`cwmp_session_${e}`)||!(t<500)&&(await new Promise((e=>setTimeout(e,500))),tn(e,t-=Date.now()-n))}function nn(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(e.expiry instanceof Date||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`);break;case"refreshObject":if("string"!=typeof e.objectName)throw new Error("Missing 'objectName' property");break;case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property");break;case"provisions":if(!Array.isArray(e.provisions)||!e.provisions.every((e=>e.every((e=>null==e||["boolean","number","string"].includes(typeof e))))))throw new Error("Invalid 'provisions' property");break;case"reboot":case"factoryReset":break;default:throw new Error("Invalid task name")}return e}const sn="1.2.9+20240918074432";function rn(e,t){if(!function(e){return!!/^[a-zA-Z0-9\-.:[\]-]+$/.test(e)||/^[a-zA-Z0-9\-.:[\]-]+$/.test(h.domainToASCII(e))}(e))return t(new Error("Invalid host"));let s;switch(e=e.replace("[","").replace("]",""),n.platform()){case"linux":s=`ping -w 1 -i 0.2 -c 3 ${e}`;break;case"freebsd":s=`ping -t 1 -c 3 ${e}`;break;default:return t(new Error("Platform not supported"))}m.exec(s,((e,s)=>{if(e)return t(e);const r=function(e,t){let n,s,r;switch(e){case"linux":n=/(\d+) packets transmitted, (\d+) .*received, ([\d.]+)% .*loss[^]*= ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,s=/(\d+) packets transmitted, (\d+) .*received, ([\d.]+)% .*loss/;break;case"freebsd":n=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/}const i=t.match(n);if(i)r={packetsTransmitted:+i[1],packetsReceived:+i[2],packetLoss:+i[3],min:+i[4],avg:+i[5],max:+i[6],mdev:+i[7]};else{const e=t.match(s);e&&(r={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}return r}(n.platform(),s);return t(e,r,s)}))}const on=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tasks\/?$/,an=/^\/tasks\/([a-zA-Z0-9\-_%]+)(\/[a-zA-Z_]*)?$/,ln=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tags\/([a-zA-Z0-9\-_%]+)\/?$/,cn=/^\/presets\/([a-zA-Z0-9\-_%]+)\/?$/,un=/^\/objects\/([a-zA-Z0-9\-_%]+)\/?$/,fn=/^\/files\/([a-zA-Z0-9%!*'();:@&=+$,?#[\]\-_.~]+)\/?$/,pn=/^\/ping\/([a-zA-Z0-9\-_.:]+)\/?$/,dn=/^\/([a-zA-Z0-9_]+)\/?$/,hn=/^\/devices\/([a-zA-Z0-9\-_%]+)\/?$/,mn=/^\/provisions\/([a-zA-Z0-9\-_%]+)\/?$/,gn=/^\/virtual_parameters\/([a-zA-Z0-9\-_%]+)\/?$/,wn=/^\/faults\/([a-zA-Z0-9\-_%:]+)\/?$/;let yn;async function _n(e,t){t.setHeader("GenieACS-Version",sn);const n=Q(e),s=new URL(e.url,(n.encrypted?"https://":"http://")+n.host),r=await async function(e){const t=[];let n=!1;e.on("end",(()=>{n=!0}));for await(const n of e)t.push(n);if(!n)throw new Error("Connection closed");return Buffer.concat(t)}(e).catch((()=>null));if(null!=r)return _e(Object.assign({},Object.fromEntries(s.searchParams),{remoteAddress:n.remoteAddress,message:`${e.method} ${s.pathname}`})),async function(e,t,n,s){if(cn.test(n.pathname)){const r=decodeURIComponent(cn.exec(n.pathname)[1]);if("PUT"===e.method){let e;try{e=JSON.parse(s.toString())}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}e._id=r,await ke.presets.replaceOne({_id:r},e,{upsert:!0}),await Ze("presets_hash"),t.writeHead(200),t.end()}else"DELETE"===e.method?(await ke.presets.deleteOne({_id:r}),await Ze("presets_hash"),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(un.test(n.pathname)){const r=decodeURIComponent(un.exec(n.pathname)[1]);if("PUT"===e.method){let e;try{e=JSON.parse(s.toString())}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}e._id=r,await ke.objects.replaceOne({_id:r},e,{upsert:!0}),await Ze("presets_hash"),t.writeHead(200),t.end()}else"DELETE"===e.method?(await ke.objects.deleteOne({_id:r}),await Ze("presets_hash"),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(mn.test(n.pathname)){const r=decodeURIComponent(mn.exec(n.pathname)[1]);if("PUT"===e.method){const e={_id:r,script:s.toString()};try{new T.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}await ke.provisions.replaceOne({_id:r},e,{upsert:!0}),await Ze("presets_hash"),t.writeHead(200),t.end()}else"DELETE"===e.method?(await ke.provisions.deleteOne({_id:r}),await Ze("presets_hash"),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(gn.test(n.pathname)){const r=decodeURIComponent(gn.exec(n.pathname)[1]);if("PUT"===e.method){const e={_id:r,script:s.toString()};try{new T.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}await ke.virtualParameters.replaceOne({_id:r},e,{upsert:!0}),await Ze("presets_hash"),t.writeHead(200),t.end()}else"DELETE"===e.method?(await ke.virtualParameters.deleteOne({_id:r}),await Ze("presets_hash"),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(ln.test(n.pathname)){const s=ln.exec(n.pathname),r=decodeURIComponent(s[1]),i=decodeURIComponent(s[2]);"POST"===e.method?(await ke.devices.updateOne({_id:r},{$addToSet:{_tags:i}}),t.writeHead(200),t.end()):"DELETE"===e.method?(await ke.devices.updateOne({_id:r},{$pull:{_tags:i}}),t.writeHead(200),t.end()):(t.writeHead(405,{Allow:"POST, DELETE"}),t.end("405 Method Not Allowed"))}else if(wn.test(n.pathname))if("DELETE"===e.method){const e=decodeURIComponent(wn.exec(n.pathname)[1]),s=e.split(":",1)[0],r=e.slice(s.length+1);if(await ke.faults.deleteOne({_id:e}),r.startsWith("task_")){const e=new a.ObjectId(r.slice(5));return await ke.tasks.deleteOne({_id:e}),await Ze(`${s}_tasks_faults_operations`),t.writeHead(200),void t.end()}await Ze(`${s}_tasks_faults_operations`),t.writeHead(200),t.end()}else t.writeHead(405,{Allow:"DELETE"}),t.end("405 Method Not Allowed");else if(on.test(n.pathname))if("POST"===e.method){const r=decodeURIComponent(on.exec(n.pathname)[1]);if(s.length){let i;try{i=JSON.parse(s.toString())}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}i.device=r;const o=await ke.devices.findOne({_id:r});if(!o)return t.writeHead(404),void t.end("No such device");const a=yt(o);await async function(e){if(e&&!Array.isArray(e))e=[e];else if(!(null==e?void 0:e.length))return e||[];for(const t of e)nn(t),t.uniqueKey&&await ke.tasks.deleteOne({device:t.device,uniqueKey:t.uniqueKey});await ke.tasks.insertMany(e);for(const t of e)t._id=t._id.toString();return e}(i);const l=Date.now(),c=e.socket.timeout;c&&e.socket.setTimeout(0);const u=await tn(r,3e4);if(await Ze(`${r}_tasks_faults_operations`),n.searchParams.has("connection_request"))return c&&e.socket.setTimeout(c),t.writeHead(202,{"Content-Type":"application/json"}),void t.end(JSON.stringify(i));if(!u)return c&&e.socket.setTimeout(c),t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),void t.end(JSON.stringify(i));const f=await Qt(r,a);if(f)return c&&e.socket.setTimeout(c),t.writeHead(202,f,{"Content-Type":"application/json"}),void t.end(JSON.stringify(i));const p=n.searchParams.has("timeout")&&parseInt(n.searchParams.get("timeout"))||W("DEVICE_ONLINE_THRESHOLD",r);if(!await en(r,l,p))return c&&e.socket.setTimeout(c),t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),void t.end(JSON.stringify(i));if(!await tn(r,12e4))return c&&e.socket.setTimeout(c),t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),void t.end(JSON.stringify(i));const d=ke.tasks.findOne({_id:i._id},{projection:{_id:1}}),h=ke.faults.findOne({_id:`${r}:task_${i._id}`},{projection:{_id:1}}),[m,g]=await Promise.all([d,h]);c&&e.socket.setTimeout(c),g?(t.writeHead(202,"Task faulted",{"Content-Type":"application/json"}),t.end(JSON.stringify(m||i))):m?(t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),t.end(JSON.stringify(m))):(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(i)))}else if(n.searchParams.has("connection_request")){if(!await ke.devices.findOne({_id:r}))return t.writeHead(404),void t.end("No such device");const e=await Qt(r);if(e)return t.writeHead(504,e),void t.end(e);t.writeHead(200),t.end()}else t.writeHead(400),t.end()}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else if(an.test(n.pathname)){const s=an.exec(n.pathname),r=decodeURIComponent(s[1]),i=s[2];if(i&&"/"!==i)if("/retry"===i)if("POST"===e.method){const e=(await ke.tasks.findOne({_id:new a.ObjectId(r)},{projection:{device:1}})).device;await ke.faults.deleteOne({_id:`${e}:task_${r}`}),await Ze(`${e}_tasks_faults_operations`),t.writeHead(200),t.end()}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else t.writeHead(404),t.end();else if("DELETE"===e.method){const e=await ke.tasks.findOne({_id:new a.ObjectId(r)},{projection:{device:1}});if(!e)return t.writeHead(404),void t.end("Task not found");const n=e.device;await ke.tasks.deleteOne({_id:new a.ObjectId(r)}),await ke.faults.deleteOne({_id:`${n}:task_${r}`}),await Ze(`${n}_tasks_faults_operations`),t.writeHead(200),t.end()}else t.writeHead(405,{Allow:"PUT DELETE"}),t.end("405 Method Not Allowed")}else if(fn.test(n.pathname)){const r=decodeURIComponent(fn.exec(n.pathname)[1]);if("PUT"===e.method){const n={fileType:e.headers.filetype,oui:e.headers.oui,productClass:e.headers.productclass,version:e.headers.version};try{await yn.delete(r)}catch(e){}return new Promise(((e,i)=>{const o=yn.openUploadStreamWithId(r,r,{metadata:n});o.on("error",i),o.end(s,(()=>{t.writeHead(201),t.end(),e()}))}))}if("DELETE"===e.method){try{await yn.delete(r)}catch(e){if(e.message.startsWith("FileNotFound"))return t.writeHead(404),void t.end("404 Not Found");throw e}t.writeHead(200),t.end()}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed")}else{if(pn.test(n.pathname)){const e=decodeURIComponent(pn.exec(n.pathname)[1]);return new Promise((n=>{rn(e,((e,s,r)=>{if(e)return s?(t.writeHead(404,{"Cache-Control":"no-cache"}),void t.end(`${e.name}: ${e.message}`)):(t.writeHead(500,{Connection:"close"}),void t.end(`${e.name}: ${e.message}`));t.writeHead(200,{"Content-Type":"text/plain","Cache-Control":"no-cache"}),t.end(r),n()}))}))}if(hn.test(n.pathname)){if("DELETE"!==e.method)return t.writeHead(405,{Allow:"DELETE"}),void t.end("405 Method Not Allowed");const s=decodeURIComponent(hn.exec(n.pathname)[1]);await async function(e){await Promise.all([ke.tasks.deleteMany({device:e}),ke.devices.deleteOne({_id:e}),ke.faults.deleteMany({_id:{$regex:`^${Ne(e)}\\:`}}),ke.operations.deleteMany({_id:{$regex:`^${Ne(e)}\\:`}}),Ze(`${e}_tasks_faults_operations`)])}(s),t.writeHead(200),t.end()}else if(dn.test(n.pathname)){let s=dn.exec(n.pathname)[1],r=s.indexOf("_");for(;r++>=0;){const e=r<s.length?s[r].toUpperCase():"";s=s.slice(0,r-1)+e+s.slice(r+1),r=s.indexOf("_",r)}if("GET"!==e.method&&"HEAD"!==e.method)return t.writeHead(405,{Allow:"GET, HEAD"}),void t.end("405 Method Not Allowed");const i=ke[s];if(!i)return t.writeHead(404),void t.end("404 Not Found");let o={};if(n.searchParams.has("query"))try{o=JSON.parse(n.searchParams.get("query"))}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}switch(s){case"devices":o=Ve(o);break;case"tasks":o=Je(o,{_id:e=>new a.ObjectId(e),timestamp:e=>new Date(e),retries:Number});break;case"faults":o=Je(o,{timestamp:e=>new Date(e),retries:Number})}let l=null;if(n.searchParams.has("projection")){l={};for(const e of n.searchParams.get("projection").split(","))l[e.trim()]=1;l=function(e){if(e[""])return{"":e[""]};const t=Object.keys(e).sort();if(t.length<=1)return e;for(let n=1;n<t.length;++n){const s=t[n-1],r=t[n];r.startsWith(s)&&("."!==r.charAt(s.length)&&"."!==r.charAt(s.length-1)||(delete e[r],t.splice(n--,1)))}return e}(l)}const c=i.find(o,{projection:l});if(n.searchParams.has("sort")){let e;try{e=JSON.parse(n.searchParams.get("sort"))}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}const r={};for(const[t,n]of Object.entries(e))"_"!==t[t.lastIndexOf(".")+1]&&"devices"===s?r[`${t}._value`]=n:r[t]=n;c.sort(r)}const u=await i.countDocuments(o);if(t.writeHead(200,{"Content-Type":"application/json",total:u}),"HEAD"===e.method)return void t.end();n.searchParams.has("skip")&&c.skip(parseInt(n.searchParams.get("skip"))),n.searchParams.has("limit")&&c.limit(parseInt(n.searchParams.get("limit"))),t.write("[\n"),r=0;for await(const e of c)r++&&t.write(",\n"),t.write(JSON.stringify(e));t.end("\n]")}else t.writeHead(404),t.end("404 Not Found")}}(e,t,s,r)}Me((async e=>{yn=new a.GridFSBucket(e)})),function(e,t){ne.hostname=O.hostname(),ne.pid=process.pid,ne.name=`genieacs-${e}`,ne.version=t,se=W(`${e.toUpperCase()}_LOG_FILE`),re=W(`${e.toUpperCase()}_ACCESS_LOG_FILE`),se&&(ae=E.createWriteStream(null,{fd:E.openSync(se,"a")}),le=E.fstatSync(ae.fd)),re&&(ce=E.createWriteStream(null,{fd:E.openSync(re,"a")}),ue=E.fstatSync(ce.fd));const n=process.env.JOURNAL_STREAM;if(n){const[e,t]=n.split(":").map(parseInt);ie=le.dev===e&&le.ino===t,oe=ue.dev===e&&ue.ino===t}(se||re)&&setTimeout(fe,6e4-Date.now()%6e4).unref()}("nbi",sn);const En=W("NBI_INTERFACE"),On=W("NBI_PORT");function Sn(){setTimeout(An,5e3).unref(),Promise.all([je(),Ft(),Te.disconnect()]).catch(An)}function An(){Ft().finally((()=>{process.exit(1)}))}if(Te){const e=W("NBI_SSL_KEY"),t=W("NBI_SSL_CERT"),n={port:On,host:En,ssl:e&&t?{key:e,cert:t}:null,timeout:3e4};process.on("unhandledRejection",(e=>{throw e})),process.on("uncaughtException",(e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(ye({message:"Uncaught exception",exception:e,pid:process.pid}),z().then(Sn).catch(An))}));const s=async function(){De=a.MongoClient.connect(""+W("MONGODB_CONNECTION_URL"));const e=(await De).db();await Promise.all(Ue.map((t=>t(e))))}().then((()=>{!function(e,t){if(V=(e,n)=>{J&&n.setHeader("Connection","close"),t(e,n).catch((e=>{try{n.socket.unref(),n.headersSent&&(n.writeHead(500,{Connection:"close"}),n.end(`${e.name}: ${e.message}`))}catch(e){}throw e}))},e.ssl){const t={key:e.ssl.key.split(":").map((e=>E.readFileSync(_.resolve(U,e.trim())))),cert:e.ssl.cert.split(":").map((e=>E.readFileSync(_.resolve(U,e.trim()))))};B=A.createServer(t,V),e.onConnection&&B.on("secureConnection",e.onConnection)}else B=S.createServer(V),e.onConnection&&B.on("connection",e.onConnection);B.on("connection",(e=>{G.set(e,{localAddress:e.localAddress,localPort:e.localPort,remoteAddress:e.remoteAddress,remotePort:e.remotePort,remoteFamily:e.remoteFamily})})),e.onClientError&&B.on("clientError",((t,n)=>{"ECONNRESET"!==t.code&&n.writable&&n.end("HTTP/1.1 400 Bad Request\r\nConnection: close\r\n\r\n"),e.onClientError(t,n)})),B.timeout=e.timeout||0,null!=e.keepAliveTimeout&&(B.keepAliveTimeout=e.keepAliveTimeout),B.listen({port:e.port,host:e.host})}(n,_n)})).catch((e=>{setTimeout((()=>{throw e}))}));process.on("SIGINT",(()=>{s.finally((()=>{z().then(Sn).catch(An)}))})),process.on("SIGTERM",(()=>{s.finally((()=>{z().then(Sn).catch(An)}))}))}else{const e=W("NBI_WORKER_PROCESSES");ge({message:"genieacs-nbi starting",pid:process.pid,version:sn}),function(e,t,s){v.default.on("listening",((e,n)=>{4!==n.addressType&&6!==n.addressType||n.address!==s||n.port!==t||ge({message:"Worker listening",pid:e.process.pid,address:n.address,port:n.port})})),v.default.on("exit",Ae),e||(e=Math.max(2,n.cpus().length));for(let t=0;t<e;++t)Se()}(e,On,En),process.on("SIGINT",(()=>{ge({message:"Received signal SIGINT, exiting",pid:process.pid}),ve()})),process.on("SIGTERM",(()=>{ge({message:"Received signal SIGTERM, exiting",pid:process.pid}),ve()}))}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuaWVhY3MtbmJpIiwic291cmNlcyI6WyIuLi8uLi9saWIvY29uZmlnLnRzIiwiLi4vLi4vbGliL3NlcnZlci50cyIsIi4uLy4uL2xpYi9mb3J3YXJkZWQudHMiLCIuLi8uLi9saWIvbG9nZ2VyLnRzIiwiLi4vLi4vbGliL2NsdXN0ZXIudHMiLCIuLi8uLi9saWIvY29tbW9uLnRzIiwiLi4vLi4vbGliL2NvbW1vbi9leHByZXNzaW9uL3BhcnNlci50cyIsIi4uLy4uL2xpYi9kYi50cyIsIi4uLy4uL2xpYi9xdWVyeS50cyIsIi4uLy4uL2xpYi9jYWNoZS50cyIsIi4uLy4uL2xpYi9jb21tb24vZXhwcmVzc2lvbi9iaWdpbnQudHMiLCIuLi8uLi9saWIvY29tbW9uL2V4cHJlc3Npb24vdXRpbC50cyIsIi4uLy4uL2xpYi9jb21tb24vZXhwcmVzc2lvbi9zeW50aC50cyIsIi4uLy4uL2xpYi9tb25nb2RiLWZ1bmN0aW9ucy50cyIsIi4uLy4uL2xpYi9zY2hlZHVsaW5nLnRzIiwiLi4vLi4vbGliL2xvY2FsLWNhY2hlLnRzIiwiLi4vLi4vbGliL2F1dGgudHMiLCIuLi8uLi9saWIvZXh0ZW5zaW9ucy50cyIsIi4uLy4uL2xpYi9jb21tb24veWFtbC50cyIsIi4uLy4uL2xpYi9kZWJ1Zy50cyIsIi4uLy4uL2xpYi9jb25uZWN0aW9uLXJlcXVlc3QudHMiLCIuLi8uLi9saWIvYXBpLWZ1bmN0aW9ucy50cyIsIi4uLy4uL2xpYi9waW5nLnRzIiwiLi4vLi4vbGliL25iaS50cyIsIi4uLy4uL2Jpbi9nZW5pZWFjcy1uYmkudHMiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbImNvbmZpZ0RpciIsImN3bXBTc2wiLCJuYmlTc2wiLCJmc1NzbCIsInVpU3NsIiwiZnNIb3N0bmFtZSIsIlJPT1RfRElSIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImV4aXN0c1N5bmMiLCJkIiwicHJvY2VzcyIsImN3ZCIsIm9wdGlvbnMiLCJFWFRfRElSIiwidHlwZSIsImRlZmF1bHQiLCJNT05HT0RCX0NPTk5FQ1RJT05fVVJMIiwiQ1dNUF9XT1JLRVJfUFJPQ0VTU0VTIiwiQ1dNUF9QT1JUIiwiQ1dNUF9JTlRFUkZBQ0UiLCJDV01QX1NTTF9DRVJUIiwiQ1dNUF9TU0xfS0VZIiwiQ1dNUF9MT0dfRklMRSIsIkNXTVBfQUNDRVNTX0xPR19GSUxFIiwiTkJJX1dPUktFUl9QUk9DRVNTRVMiLCJOQklfUE9SVCIsIk5CSV9JTlRFUkZBQ0UiLCJOQklfU1NMX0NFUlQiLCJOQklfU1NMX0tFWSIsIk5CSV9MT0dfRklMRSIsIk5CSV9BQ0NFU1NfTE9HX0ZJTEUiLCJGU19XT1JLRVJfUFJPQ0VTU0VTIiwiRlNfUE9SVCIsIkZTX0lOVEVSRkFDRSIsIkZTX1NTTF9DRVJUIiwiRlNfU1NMX0tFWSIsIkZTX1VSTF9QUkVGSVgiLCJGU19MT0dfRklMRSIsIkZTX0FDQ0VTU19MT0dfRklMRSIsIlVJX1dPUktFUl9QUk9DRVNTRVMiLCJVSV9QT1JUIiwiVUlfSU5URVJGQUNFIiwiVUlfU1NMX0NFUlQiLCJVSV9TU0xfS0VZIiwiVUlfTE9HX0ZJTEUiLCJVSV9BQ0NFU1NfTE9HX0ZJTEUiLCJVSV9KV1RfU0VDUkVUIiwiVURQX0NPTk5FQ1RJT05fUkVRVUVTVF9QT1JUIiwiRk9SV0FSREVEX0hFQURFUiIsIkRPV05MT0FEX1RJTUVPVVQiLCJFWFRfVElNRU9VVCIsIk1BWF9DQUNIRV9UVEwiLCJERUJVR19GSUxFIiwiREVCVUdfRk9STUFUIiwiREVCVUciLCJSRVRSWV9ERUxBWSIsIlNFU1NJT05fVElNRU9VVCIsIkNPTk5FQ1RJT05fUkVRVUVTVF9USU1FT1VUIiwiR1BOX05FWFRfTEVWRUwiLCJHUFZfQkFUQ0hfU0laRSIsIk1BWF9ERVBUSCIsIkNPT0tJRVNfUEFUSCIsIkxPR19GT1JNQVQiLCJBQ0NFU1NfTE9HX0ZPUk1BVCIsIk1BWF9DT05DVVJSRU5UX1JFUVVFU1RTIiwiREFURVRJTUVfTUlMTElTRUNPTkRTIiwiQk9PTEVBTl9MSVRFUkFMIiwiQ09OTkVDVElPTl9SRVFVRVNUX0FMTE9XX0JBU0lDX0FVVEgiLCJNQVhfQ09NTUlUX0lURVJBVElPTlMiLCJERVZJQ0VfT05MSU5FX1RIUkVTSE9MRCIsImFsbENvbmZpZyIsInNldENvbmZpZyIsIm5hbWUiLCJ2YWx1ZSIsImNvbW1hbmRMaW5lQXJndW1lbnQiLCJjYXN0IiwidmFsIiwiTnVtYmVyIiwiaW5jbHVkZXMiLCJTdHJpbmciLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJfdmFsdWUiLCJvcHRpb25OYW1lIiwib3B0aW9uRGV0YWlscyIsIk9iamVjdCIsImVudHJpZXMiLCJuIiwicmVwbGFjZSIsInN0YXJ0c1dpdGgiLCJzbGljZSIsImxlbmd0aCIsImVudiIsImFyZ3YiLCJhcmciLCJzaGlmdCIsInYiLCJrIiwiY29uZmlnRmlsZW5hbWUiLCJjb25maWdGaWxlIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwidG9TdHJpbmciLCJnZXQiLCJkZXZpY2VJZCIsImkiLCJsYXN0SW5kZXhPZiIsInNlcnZlciIsImxpc3RlbmVyIiwic3RvcHBpbmciLCJzb2NrZXRFbmRwb2ludHMiLCJXZWFrTWFwIiwic3RvcCIsInRlcm1pbmF0ZUNvbm5lY3Rpb25zIiwiUHJvbWlzZSIsInJlamVjdCIsInRpbWVvdXQiLCJjYWxsYmFjayIsInNldFRpbWVvdXQiLCJFcnJvciIsInVucmVmIiwicmVtb3ZlTGlzdGVuZXIiLCJjYiIsImNsb3NlIiwiZ2V0U29ja2V0RW5kcG9pbnRzIiwic29ja2V0IiwiX2EiLCJjb25maWcuZ2V0IiwiY2FjaGUiLCJjaWRycyIsInN0ciIsInNwbGl0IiwibWFwIiwicyIsInB1c2giLCJwYXJzZUNJRFIiLCJlcnIiLCJpcCIsInRvQnl0ZUFycmF5IiwiZ2V0UmVxdWVzdE9yaWdpbiIsInJlcXVlc3QiLCJvcmlnaW4iLCJsb2NhbEFkZHJlc3MiLCJsb2NhbFBvcnQiLCJyZW1vdGVBZGRyZXNzIiwicmVtb3RlUG9ydCIsImhvc3QiLCJoZWFkZXJzIiwiZW5jcnlwdGVkIiwiaGVhZGVyIiwic29tZSIsImNpZHIiLCJraW5kIiwibWF0Y2giLCJwYXJzZWQiLCJyZXMiLCJrZXkiLCJrZXlJZHgiLCJ2YWx1ZUlkeCIsImNoYXIiLCJjaGFyQ29kZUF0IiwicXVvdGVJZHgiLCJjIiwicGFyc2VGb3J3YXJkZWRIZWFkZXIiLCJwb3J0IiwicGFyc2VJbnQiLCJzZXQiLCJkZWZhdWx0TWV0YSIsIkxPR19GSUxFIiwiQUNDRVNTX0xPR19GSUxFIiwiTE9HX1NZU1RFTUQiLCJBQ0NFU1NfTE9HX1NZU1RFTUQiLCJsb2dTdHJlYW0iLCJmcyIsImNyZWF0ZVdyaXRlU3RyZWFtIiwiZmQiLCJzdGRlcnIiLCJsb2dTdGF0IiwiZnN0YXRTeW5jIiwiYWNjZXNzTG9nU3RyZWFtIiwic3Rkb3V0IiwiYWNjZXNzTG9nU3RhdCIsInJlb3BlbiIsImNvdW50ZXIiLCJzdGF0IiwibWVzc2FnZSIsImRldiIsImlubyIsImVuZCIsIm9wZW5TeW5jIiwiRGF0ZSIsIm5vdyIsImZsYXR0ZW4iLCJkZXRhaWxzIiwic2Vzc2lvbkNvbnRleHQiLCJodHRwUmVxdWVzdCIsImV4Y2VwdGlvbiIsImV4Y2VwdGlvbk5hbWUiLCJleGNlcHRpb25NZXNzYWdlIiwiZXhjZXB0aW9uU3RhY2siLCJzdGFjayIsInRhc2siLCJ0YXNrSWQiLCJycGMiLCJhY3NSZXF1ZXN0IiwiYWNzUmVxdWVzdElkIiwiaWQiLCJhY3NSZXF1ZXN0TmFtZSIsImFjc1JlcXVlc3RDb21tYW5kS2V5IiwiY3BlUmVxdWVzdCIsImNwZVJlcXVlc3RJZCIsImluZm9ybUV2ZW50IiwiZXZlbnQiLCJqb2luIiwiaW5mb3JtUmV0cnlDb3VudCIsInJldHJ5Q291bnQiLCJjcGVSZXF1ZXN0TmFtZSIsImNwZVJlcXVlc3RDb21tYW5kS2V5IiwiY3BlRmF1bHQiLCJjcGVGYXVsdENvZGUiLCJkZXRhaWwiLCJmYXVsdENvZGUiLCJjcGVGYXVsdFN0cmluZyIsImZhdWx0U3RyaW5nIiwiZmF1bHQiLCJjb2RlIiwiZmF1bHRNZXNzYWdlIiwiY29udGV4dCIsInVzZXIiLCJ1c2VybmFtZSIsImZvcm1hdEpzb24iLCJzeXN0ZW1kIiwic2V2ZXJpdHkiLCJzdHJpbmdpZnkiLCJvcyIsIkVPTCIsImZvcm1hdFNpbXBsZSIsInNraXAiLCJ0aW1lc3RhbXAiLCJyZW1vdGUiLCJrZXlzIiwibWV0YSIsImt2IiwidG9VcHBlckNhc2UiLCJsb2ciLCJ0b0lTT1N0cmluZyIsImFzc2lnbiIsIndyaXRlIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImFjY2Vzc0luZm8iLCJhY2Nlc3NMb2ciLCJyZXNwYXduVGltZXN0YW1wIiwiY3Jhc2hlcyIsImZvcmsiLCJ3IiwiY2x1c3RlciIsIm9uIiwiaXNEZWFkIiwicmVzdGFydFdvcmtlciIsIndvcmtlciIsInNpZ25hbCIsIm1zZyIsInBpZCIsImV4aXRDb2RlIiwibG9nZ2VyLmVycm9yIiwibWluMSIsIm1pbjIiLCJtaW4zIiwiZmlsdGVyIiwid29ya2VycyIsImtpbGwiLCJNYXRoIiwibWF4IiwiZXNjYXBlUmVnRXhwIiwiZW5jb2RlVGFnIiwidGFnIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiaW50ZXJwcmV0RXNjYXBlcyIsImVzY2FwZXMiLCJiIiwiZiIsInIiLCJ0IiwiXyIsImVzY2FwZSIsImNoYXJBdCIsImhleCIsImZyb21DaGFyQ29kZSIsImhhc093blByb3BlcnR5IiwiZXhwIiwiQXJyYXkiLCJpc0FycmF5IiwiY2xvbmUiLCJzdWIiLCJhc3luYyIsIm1hcEFzeW5jIiwiYmluYXJ5TGVmdCIsIm9wZXJhdG9yc1BhcnNlciIsIm5leHRQYXJzZXIiLCJwYXJzaW1tb24iLCJzZXFNYXAiLCJzZXEiLCJtYW55IiwiZmlyc3QiLCJyZXN0IiwicmVkdWNlIiwiYWNjIiwiY2giLCJvcCIsImFub3RoZXIiLCJjb25jYXQiLCJsYW5nIiwiY3JlYXRlTGFuZ3VhZ2UiLCJDb21wYXJpc29uT3BlcmF0b3IiLCJhbHQiLCJzdHJpbmciLCJvcHRXaGl0ZXNwYWNlIiwiTGlrZU9wZXJhdG9yIiwicmVnZXhwIiwicmVzdWx0IiwiZGVzYyIsIm5vdEZvbGxvd2VkQnkiLCJJc051bGxPcGVyYXRvciIsIk5vdE9wZXJhdG9yIiwiQW5kT3BlcmF0b3IiLCJPck9wZXJhdG9yIiwiUGFyYW1ldGVyIiwiRXhwcmVzc2lvbiIsIndyYXAiLCJhdExlYXN0IiwieCIsIlN0cmluZ1ZhbHVlU3FsIiwiU3RyaW5nVmFsdWVKcyIsIk51bWJlclZhbHVlIiwiQm9vbGVhblZhbHVlIiwiTnVsbFZhbHVlIiwiRnVuY1ZhbHVlIiwiRXhwcmVzc2lvbkxpc3QiLCJhcmdzIiwiV2hlblBhaXIiLCJ0aGVuIiwiQ2FzZVN0YXRlbWVudCIsImUiLCJmYWxsYmFjayIsInJlZ2V4IiwiYXJyIiwiZmxhdCIsIlZhbHVlIiwiVmFsdWVFeHByZXNzaW9uIiwiQ29tcGFyaXNvbiIsInAiLCJvIiwid2hpdGVzcGFjZSIsImEiLCJzZXBCeSIsIm9yIiwidHJ5UGFyc2UiLCJwYXJzZUxpa2VQYXR0ZXJuIiwicGF0IiwiZXNjIiwiY2hhcnMiLCJjb2xsZWN0aW9ucyIsImRldmljZXMiLCJwcmVzZXRzIiwib2JqZWN0cyIsInByb3Zpc2lvbnMiLCJ2aXJ0dWFsUGFyYW1ldGVycyIsImZhdWx0cyIsInRhc2tzIiwiZmlsZXMiLCJvcGVyYXRpb25zIiwicGVybWlzc2lvbnMiLCJ1c2VycyIsImNvbmZpZyIsImNsaWVudFByb21pc2UiLCJvbkNvbm5lY3RDYWxsYmFja3MiLCJvbkNvbm5lY3QiLCJkaXNjb25uZWN0IiwiaXNPYmplY3QiLCJvYmoiLCJwcm90b3R5cGUiLCJjYWxsIiwibm9ybWFsaXplIiwiaW5wdXQiLCJ2YWxzIiwibSIsImV4ZWMiLCIkcmVnZXgiLCJSZWdFeHAiLCJwYXJzZUZsb2F0IiwiZ2V0RnVsbFllYXIiLCJmbGFncyIsImluZGV4T2YiLCJvdXRwdXQiLCJzdHJpbmdUb1JlZ2V4cCIsImRiIiwiY29sbGVjdGlvbiIsImNyZWF0ZUluZGV4IiwiZGV2aWNlIiwiRVhQQU5EX09QUyIsIlNldCIsImV4cGFuZFZhbHVlIiwiaiIsIm9ianMiLCJpbmRpY2VzIiwidmFsdWVzIiwiaGFzIiwicGVybXV0ZSIsInBhcmFtIiwiY29uZGl0aW9ucyIsImV4cGFuZCIsInF1ZXJ5IiwibmV3UXVlcnkiLCIkb3IiLCJzYW5pdGl6ZVF1ZXJ5VHlwZXMiLCJ0eXBlcyIsInZ2Iiwia2siLCJjYWNoZUNvbGxlY3Rpb24iLCJmaW5kT25lIiwiX2lkIiwiZGVsIiwiZGVsZXRlT25lIiwiYWNxdWlyZUxvY2siLCJsb2NrTmFtZSIsInR0bCIsInRva2VuIiwicmFuZG9tIiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJleHBpcmUiLCIkY3VycmVudERhdGUiLCJ1cHNlcnQiLCJyZXR1cm5Eb2N1bWVudCIsImFicyIsImdldFRpbWUiLCJleHBpcmVBZnRlclNlY29uZHMiLCJCaWdJbnQiLCJyZWdFeHBDYWNoZSIsIlJFRFVDRV9TS0lQIiwibG9vcCIsInNwbGljZSIsImxpa2VQYXR0ZXJuVG9SZWdFeHAiLCJjb252Q2hhcnMiLCIkIiwibCIsImNvbXBhcmUiLCJ0b051bWJlciIsImV2YWx1YXRlQ2FsbGJhY2siLCJFUFNJTE9OIiwicm91bmQiLCJlZSIsInRlc3QiLCJuMSIsIm4yIiwidHJ1bmMiLCJldmFsdWF0ZSIsImV2YWx1YXRlQXN5bmMiLCJTeW50aENvbnRleHRCYXNlIiwiY29uc3RydWN0b3IiLCJ0aGlzIiwidmFyaWFibGVzIiwiTWFwIiwiY2xhdXNlcyIsImdldFZhciIsImlkeCIsInNpemUiLCJnZXRDbGF1c2UiLCJjYW5SYWlzZSIsInNhbml0aXplTWludGVybXMiLCJtaW50ZXJtcyIsIm1pbmltaXplIiwiZGNTZXQiLCJiaW5kIiwiZXNwcmVzc28iLCJnZXREY1NldCIsImZpbmRJc051bGxEZXBzIiwiQ2xhdXNlIiwiZXhwcmVzc2lvbiIsInVuZGVmaW5lZCIsIl9leHByZXNzaW9uIiwiY3JlYXRlU3ludGhDb250ZXh0IiwidHJ1ZSIsIm1pbmltaXplZCIsInRvRXhwcmVzc2lvbiIsImlzQm9vbGVhbiIsImlzTnVsbGFibGUiLCJfaXNOdWxsYWJsZSIsImdldE51bGxhYmxlcyIsIklzTnVsbCIsIkV4cCIsImdyb3VwQnkiLCJncm91cHMiLCJpdGVtIiwiTm90Iiwib3BlcmFuZCIsInN1cGVyIiwiZmFsc2UiLCJudWxsIiwiT3IiLCJvcGVyYW5kcyIsImNvbXBsZW1lbnQiLCJ0cnVlTWludGVybXMiLCJudWxsTWludGVybXMiLCJBbmQiLCJmYWxzZU1pbnRlcm1zIiwiQ2FzZSIsImN1bXVsYXRpdmUiLCJjYXNlcyIsInBvcCIsIndoZW4iLCJmbGF0TWFwIiwiX2Jvb2xlYW4iLCJudWxsYWJsZXMiLCJnZXRNaW50ZXJtcyIsIkNvbXBhcmUiLCJsaHMiLCJyaHMiLCJMaWtlIiwiY2FzZVNlbnNpdGl2ZSIsImNvbnRyYWRpY3Rpb24iLCJmdW5jIiwicGF0dGVybiIsInRvTG9jYWxlVXBwZXJDYXNlIiwiZnJvbUV4cHJlc3Npb24iLCJjbGF1c2UiLCJuZWdhdGUiLCJTeW50aENvbnRleHQiLCJ3aGl0ZWxpc3QiLCJhbGxDbGF1c2VzIiwiY29tcGFyaXNvbnMiLCJ2YWx1ZXNTb3J0ZWQiLCJzb3J0IiwidGEiLCJ0YiIsImVxIiwiZ3QiLCJsdCIsIm5lZ0VxdWl2T3AiLCJhZGQiLCJlcTIiLCJndDIiLCJsdDIiLCJsaWtlcyIsImkxIiwibDEiLCJpMiIsImwyIiwicDEiLCJwMiIsImxpa2VEaXNqb2ludCIsImxpa2VJbXBsaWVzIiwiZXZlcnkiLCJtZXJnZWQiLCJtaW50ZXJtIiwicGVybXMiLCJpc051bGxWYXJzIiwibXMiLCJuZXdNcyIsInBlcm0iLCJtbSIsInNvcCIsImNvbmpzIiwiZXhwciIsInBhdDEiLCJwYXQyIiwiYmFja3RyYWNrIiwibGVmdDFJZHgiLCJsZWZ0MklkeCIsInJpZ2h0MUlkeCIsInJpZ2h0MklkeCIsImxlZnQxIiwibGVmdDIiLCJyaWdodDEiLCJyZXZlcnNlIiwicmlnaHQyIiwibWluIiwicGFyc2VEYXRlIiwiaXNOYU4iLCJmbGF0dGVuRGV2aWNlIiwibmV3RGV2aWNlIiwicmVjdXJzaXZlIiwicm9vdCIsInRyZWUiLCJ2YWx1ZVRpbWVzdGFtcCIsIndyaXRhYmxlIiwid3JpdGFibGVUaW1lc3RhbXAiLCJvYmplY3QiLCJvYmplY3RUaW1lc3RhbXAiLCJjaGlsZHJlblRpbWVzdGFtcCIsImF0dHJzIiwibm90aWZpY2F0aW9uIiwibm90aWZpY2F0aW9uVGltZXN0YW1wIiwiYWNjZXNzTGlzdCIsImFjY2Vzc0xpc3RUaW1lc3RhbXAiLCJwYXJzZUNyb24iLCJjcm9uRXhwIiwicGFydHMiLCJ1bnNoaWZ0IiwibGF0ZXIiLCJzY2hlZHVsZSIsImNyb24iLCJzbmFwc2hvdHMiLCJjdXJyZW50U25hcHNob3QiLCJuZXh0UmVmcmVzaCIsImZsYXR0ZW5PYmplY3QiLCJzcmMiLCJwcmVmaXgiLCJkc3QiLCJmZXRjaFByZXNldHMiLCJmaW5kIiwidG9BcnJheSIsImRiLmdldFByZXNldHMiLCJkYi5nZXRPYmplY3RzIiwicHJlc2V0IiwibWQ1IiwiY3J5cHRvIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsImR1cmF0aW9uIiwic2NoZWR1bGluZy5wYXJzZUNyb24iLCJsb2dnZXIud2FybiIsImV2ZW50cyIsInByZWNvbmRpdGlvbiIsIl9xdWVyeSIsImV4cHJlc3Npb25zIiwiYW5kIiwiZXhpc3RzIiwiZXhwcyIsImV4cHJlc3Npb24uZXZhbHVhdGUiLCJfcHJvdmlzaW9ucyIsImFnZSIsImFsaWFzIiwiY2hhbm5lbCIsImZldGNoUHJvdmlzaW9ucyIsImRiLmdldFByb3Zpc2lvbnMiLCJzY3JpcHQiLCJ2bSIsIlNjcmlwdCIsImZpbGVuYW1lIiwibGluZU9mZnNldCIsImZldGNoVmlydHVhbFBhcmFtZXRlcnMiLCJkYi5nZXRWaXJ0dWFsUGFyYW1ldGVycyIsImZldGNoUGVybWlzc2lvbnMiLCJkYi5nZXRQZXJtaXNzaW9ucyIsInJvbGUiLCJhY2Nlc3MiLCJyZXNvdXJjZSIsInZhbGlkYXRlIiwiZmV0Y2hGaWxlcyIsImZldGNoVXNlcnMiLCJfdXNlcnMiLCJkYi5nZXRVc2VycyIsInBhc3N3b3JkIiwic2FsdCIsInJvbGVzIiwiZmV0Y2hDb25maWciLCJjb25mIiwiZGIuZ2V0Q29uZmlnIiwidWkiLCJmaWx0ZXJzIiwiaW5kZXgiLCJvdmVydmlldyIsInBhZ2VTaXplIiwiX2NvbmZpZyIsInJlZiIsInJlZnJlc2giLCJkYkhhc2giLCJjYWNoZS5nZXQiLCJsb2NrVG9rZW4iLCJjYWNoZS5hY3F1aXJlTG9jayIsImFsbCIsInNuYXBzaG90IiwiaCIsImRlbGV0ZSIsImxldmVscyIsImNvbXB1dGVIYXNoIiwicmVwbGFjZU9uZSIsImNhY2hlLnNldCIsImRlbGV0ZWRDb3VudCIsImNhY2hlLnJlbGVhc2VMb2NrIiwiZ2V0Q29uZmlnIiwic25hcHNob3RLZXkiLCJvbGRPcHRzIiwicGFyc2VXd3dBdXRoZW50aWNhdGVIZWFkZXIiLCJhdXRoSGVhZGVyIiwibWV0aG9kIiwicGFydCIsInBhcnNlSGVhZGVyRmVpbGRzIiwiYmFzaWMiLCJCdWZmZXIiLCJmcm9tIiwic29sdmVEaWdlc3QiLCJ1cmkiLCJodHRwTWV0aG9kIiwiYm9keSIsImNub25jZSIsInJhbmRvbUJ5dGVzIiwibmMiLCJxb3AiLCJoYXNoIiwicmVhbG0iLCJub25jZSIsImhhMSIsImhhMWQiLCJoYTIiLCJib2R5SGFzaCIsImhhMmQiLCJhdXRoU3RyaW5nIiwiYWxnb3JpdGhtIiwib3BhcXVlIiwiVElNRU9VVCIsInByb2Nlc3NlcyIsImpvYnMiLCJ0aW1lVG9LaWxsIiwic2V0SW50ZXJ2YWwiLCJjb25uZWN0ZWQiLCJjbGVhckludGVydmFsIiwia2lsbEFsbCIsIlNUUklOR19SRVNFUlZFRCIsImlzUHJpbnRhYmxlIiwic3RyaW5naWZ5S2V5Iiwic3RyaW5naWZ5QW55IiwicHJlZml4MSIsInByZWZpeDIiLCJ0b0pTT04iLCJsaW5lcyIsImlkdCIsImNobXAiLCJpc0ZvbGRlZCIsImZvbGRlZCIsImxzIiwiY2FuZCIsImZvbGRTdHJpbmciLCJzdHJpbmdpZnlTdHJpbmciLCJlbmRzV2l0aCIsImNvbm5lY3Rpb25UaW1lc3RhbXBzIiwiZ2V0Q29ubmVjdGlvblRpbWVzdGFtcCIsImNvbm5lY3Rpb24iLCJvdXRnb2luZ1VkcE1lc3NhZ2UiLCJhcHBlbmRGaWxlU3luYyIsImV4dHJhY3RBdXRoIiwiZGZsdCIsIl9leHAiLCJzY3JpcHROYW1lIiwic3Bhd24iLCJzdGRpbyIsInJlYWRsaW5lIiwiY3JlYXRlSW50ZXJmYWNlIiwibGluZSIsImxvZ2dlci5pbmZvIiwic2VuZCIsImh0dHBHZXQiLCJ1cmwiLCJfZGVidWciLCJyZXEiLCJodHRwIiwicmVzdW1lIiwic3RhdHVzQ29kZSIsImNvbiIsInBhdGhuYW1lIiwic2VhcmNoIiwiZ2V0SGVhZGVycyIsImRlYnVnLm91dGdvaW5nSHR0cFJlcXVlc3QiLCJodHRwUmVzcG9uc2UiLCJkZWJ1Zy5pbmNvbWluZ0h0dHBSZXNwb25zZSIsImRlc3Ryb3kiLCJob3N0bmFtZSIsImRlYnVnLm91dGdvaW5nSHR0cFJlcXVlc3RFcnJvciIsImNvbm5lY3Rpb25SZXF1ZXN0IiwiY29ubmVjdGlvblJlcXVlc3RVcmwiLCJ1ZHBDb25uZWN0aW9uUmVxdWVzdEFkZHJlc3MiLCJVUkwiLCJldmFsQ2FsbGJhY2siLCJnZXRDdXJyZW50U25hcHNob3QiLCJhdXRoRXhwIiwiZ2V0Q29uZmlnRXhwcmVzc2lvbiIsImRlYnVnIiwidWRwUHJvbSIsInUiLCJzb3VyY2VQb3J0IiwiY2xpZW50IiwiZGdyYW0iLCJjcmVhdGVTb2NrZXQiLCJyZXVzZUFkZHIiLCJleGNsdXNpdmUiLCJ0cyIsImNuIiwic2lnIiwiY3JlYXRlSG1hYyIsImRlYnVnLm91dGdvaW5nVWRwTWVzc2FnZSIsInVkcENvbm5lY3Rpb25SZXF1ZXN0Iiwic3RhdHVzIiwiYWRkcmVzcyIsImFsbG93QmFzaWNBdXRoIiwicHJvdG9jb2wiLCJhZ2VudCIsIkFnZW50IiwibWF4U29ja2V0cyIsImtlZXBBbGl2ZSIsIm9wdHMiLCJBdXRob3JpemF0aW9uIiwiYXV0aC5iYXNpYyIsImF1dGguc29sdmVEaWdlc3QiLCJhdXRoLnBhcnNlV3d3QXV0aGVudGljYXRlSGVhZGVyIiwiaHR0cENvbm5lY3Rpb25SZXF1ZXN0IiwiYXdhaXRTZXNzaW9uU3RhcnQiLCJsYXN0SW5mb3JtIiwicHJvamVjdGlvbiIsIl9sYXN0SW5mb3JtIiwiYXdhaXRTZXNzaW9uRW5kIiwic2FuaXRpemVUYXNrIiwiZXhwaXJ5IiwidmFsaWRQYXJhbVZhbHVlIiwicGFyYW1ldGVyTmFtZXMiLCJwYXJhbWV0ZXJWYWx1ZXMiLCJvYmplY3ROYW1lIiwiZmlsZSIsImZpbGVUeXBlIiwiZmlsZU5hbWUiLCJ0YXJnZXRGaWxlTmFtZSIsInBpbmciLCJkb21haW5Ub0FTQ0lJIiwiaXNWYWxpZEhvc3QiLCJjbWQiLCJwbGF0Zm9ybSIsIm9zUGxhdGZvcm0iLCJwYXJzZVJlZ0V4cDEiLCJwYXJzZVJlZ0V4cDIiLCJtMSIsInBhY2tldHNUcmFuc21pdHRlZCIsInBhY2tldHNSZWNlaXZlZCIsInBhY2tldExvc3MiLCJhdmciLCJtZGV2IiwibTIiLCJwYXJzZVBpbmciLCJERVZJQ0VfVEFTS1NfUkVHRVgiLCJUQVNLU19SRUdFWCIsIlRBR1NfUkVHRVgiLCJQUkVTRVRTX1JFR0VYIiwiT0JKRUNUU19SRUdFWCIsIkZJTEVTX1JFR0VYIiwiUElOR19SRUdFWCIsIlFVRVJZX1JFR0VYIiwiREVMRVRFX0RFVklDRV9SRUdFWCIsIlBST1ZJU0lPTlNfUkVHRVgiLCJWSVJUVUFMX1BBUkFNRVRFUlNfUkVHRVgiLCJGQVVMVFNfUkVHRVgiLCJmaWxlc0J1Y2tldCIsInJlc3BvbnNlIiwic2V0SGVhZGVyIiwiVkVSU0lPTiIsImNodW5rcyIsInJlYWRhYmxlRW5kZWQiLCJjaHVuayIsImdldEJvZHkiLCJjYXRjaCIsImxvZ2dlci5hY2Nlc3NJbmZvIiwiZnJvbUVudHJpZXMiLCJzZWFyY2hQYXJhbXMiLCJwcmVzZXROYW1lIiwiZGVjb2RlVVJJQ29tcG9uZW50Iiwid3JpdGVIZWFkIiwiY2FjaGUuZGVsIiwiQWxsb3ciLCJwcm92aXNpb25OYW1lIiwidmlydHVhbFBhcmFtZXRlck5hbWUiLCJ1cGRhdGVPbmUiLCIkYWRkVG9TZXQiLCJfdGFncyIsIiRwdWxsIiwiZmF1bHRJZCIsIm9iaklkIiwiT2JqZWN0SWQiLCJ1bmlxdWVLZXkiLCJpbnNlcnRNYW55IiwiYXBpRnVuY3Rpb25zLmluc2VydFRhc2tzIiwic29ja2V0VGltZW91dCIsIm5vdEluU2Vzc2lvbiIsImFwaUZ1bmN0aW9ucy5hd2FpdFNlc3Npb25FbmQiLCJhcGlGdW5jdGlvbnMuY29ubmVjdGlvblJlcXVlc3QiLCJvbmxpbmVUaHJlc2hvbGQiLCJhcGlGdW5jdGlvbnMuYXdhaXRTZXNzaW9uU3RhcnQiLCJwcm9tMSIsInByb20yIiwiYWN0aW9uIiwibWV0YWRhdGEiLCJmaWxldHlwZSIsIm91aSIsInByb2R1Y3RDbGFzcyIsInByb2R1Y3RjbGFzcyIsInZlcnNpb24iLCJ1cGxvYWRTdHJlYW0iLCJvcGVuVXBsb2FkU3RyZWFtV2l0aElkIiwiQ29ubmVjdGlvbiIsImRlbGV0ZU1hbnkiLCJjb21tb24uZXNjYXBlUmVnRXhwIiwiYXBpRnVuY3Rpb25zLmRlbGV0ZURldmljZSIsImNvbGxlY3Rpb25OYW1lIiwidXAiLCJxIiwicXVlcnkuZXhwYW5kIiwicXVlcnkuc2FuaXRpemVRdWVyeVR5cGVzIiwicmV0cmllcyIsIm9wdGltaXplUHJvamVjdGlvbiIsImN1ciIsInRvdGFsIiwiY291bnREb2N1bWVudHMiLCJsaW1pdCIsImhhbmRsZXIiLCJHcmlkRlNCdWNrZXQiLCJzZXJ2aWNlIiwiSk9VUk5BTF9TVFJFQU0iLCJpbm9kZSIsImxvZ2dlci5pbml0IiwiU0VSVklDRV9BRERSRVNTIiwiU0VSVklDRV9QT1JUIiwiZXhpdFdvcmtlckdyYWNlZnVsbHkiLCJleGl0V29ya2VyVW5ncmFjZWZ1bGx5IiwiZGIuZGlzY29ubmVjdCIsImV4dGVuc2lvbnMua2lsbEFsbCIsImNsdXN0ZXIud29ya2VyIiwiZmluYWxseSIsImV4aXQiLCJjZXJ0Iiwic3NsIiwic2VydmVyLnN0b3AiLCJpbml0UHJvbWlzZSIsIk1vbmdvQ2xpZW50IiwiY29ubmVjdCIsImRiXG4gICAgICAgIC5jb25uZWN0IiwiX2xpc3RlbmVyIiwiaGVhZGVyc1NlbnQiLCJwYXRoIiwiaHR0cHMiLCJjcmVhdGVTZXJ2ZXIiLCJvbkNvbm5lY3Rpb24iLCJyZW1vdGVGYW1pbHkiLCJvbkNsaWVudEVycm9yIiwia2VlcEFsaXZlVGltZW91dCIsImxpc3RlbiIsInNlcnZlci5zdGFydCIsIldPUktFUl9DT1VOVCIsIndvcmtlckNvdW50Iiwic2VydmljZVBvcnQiLCJzZXJ2aWNlQWRkcmVzcyIsImFkZHJlc3NUeXBlIiwiY3B1cyIsImNsdXN0ZXIuc3RhcnQiLCJjbHVzdGVyLnN0b3AiXSwibWFwcGluZ3MiOiI7bXlCQXVCTyxJQVdIQSxFQUFXQyxFQUFTQyxFQUFRQyxFQUFPQyxFQUFPQyxFQVhuQ0MsRUFBV0MsRUFBT0EsUUFBQ0MsVUFBVyxNQUN6QyxNQUFRQyxFQUFVQSxXQUFDLEdBQUdILG1CQUEwQixDQUM5QyxNQUFNSSxFQUFJSCxFQUFBQSxRQUFRRCxFQUFVLE1BQzVCLEdBQUlJLElBQU1KLEVBQVUsQ0FDbEJBLEVBQVdLLFFBQVFDLE1BQ25CLEtBQ0QsQ0FDRE4sRUFBV0ksQ0FDWixDQUtELE1BQU1HLEVBQVUsQ0FDZEMsUUFBUyxDQUFFQyxLQUFNLE9BQVFDLFFBQVNULFVBQVFELEVBQVUsZUFDcERXLHVCQUF3QixDQUN0QkYsS0FBTSxTQUNOQyxRQUFTLHNDQUdYRSxzQkFBdUIsQ0FBRUgsS0FBTSxNQUFPQyxRQUFTLEdBQy9DRyxVQUFXLENBQUVKLEtBQU0sTUFBT0MsUUFBUyxNQUNuQ0ksZUFBZ0IsQ0FBRUwsS0FBTSxTQUFVQyxRQUFTLE1BQzNDSyxjQUFlLENBQUVOLEtBQU0sU0FBVUMsUUFBUyxJQUMxQ00sYUFBYyxDQUFFUCxLQUFNLFNBQVVDLFFBQVMsSUFDekNPLGNBQWUsQ0FBRVIsS0FBTSxPQUFRQyxRQUFTLElBQ3hDUSxxQkFBc0IsQ0FBRVQsS0FBTSxPQUFRQyxRQUFTLElBRS9DUyxxQkFBc0IsQ0FBRVYsS0FBTSxNQUFPQyxRQUFTLEdBQzlDVSxTQUFVLENBQUVYLEtBQU0sTUFBT0MsUUFBUyxNQUNsQ1csY0FBZSxDQUFFWixLQUFNLFNBQVVDLFFBQVMsTUFDMUNZLGFBQWMsQ0FBRWIs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
