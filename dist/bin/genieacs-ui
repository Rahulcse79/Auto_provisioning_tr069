#!/usr/bin/env node
"use strict";const e=require("path"),t=require("fs"),r=require("os"),s=require("ipaddr.js"),n=require("http"),i=require("https"),a=require("cluster"),o=require("zlib"),l=require("koa"),u=require("koa-router"),c=require("jsonwebtoken"),f=require("koa-static"),p=require("koa-compress"),d=require("koa-bodyparser"),h=require("koa-jwt"),m=require("stream"),g=require("mongodb"),v=require("vm"),y=require("parsimmon"),w=require("bson"),_=require("espresso-iisojs"),A=require("crypto"),S=require("@breejs/later"),b=require("dgram"),E=require("url"),O=require("child_process"),N=require("readline"),I=require("@koa/cors");function C(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function T(e){if(e&&e.__esModule)return e;const t=Object.create(null);if(e)for(const r in e)if("default"!==r){const s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})}return t.default=e,Object.freeze(t)}const D=T(e),$=T(t),x=T(r),R=T(n),P=T(i),L=C(a),k=C(l),M=C(u),q=T(c),j=C(f),U=C(p),W=C(d),F=C(h),V=T(v),G=C(y),B=T(A),J=T(S),H=T(b),z=C(N),K=C(I);let Z,X,Q,Y,ee,te,re=e.resolve(__dirname,"..");for(;!t.existsSync(`${re}/package.json`);){const t=e.resolve(re,"..");if(t===re){re=process.cwd();break}re=t}const se={EXT_DIR:{type:"path",default:e.resolve(re,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/device_manager"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"::"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"::"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"::"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"::"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},ne={};function ie(t,r,s=!1){if(null!=ne[t])return!0;function n(t,r){switch(r){case"int":return Number(t);case"bool":return["true","1"].includes(String(t).trim().toLowerCase());case"string":return String(t);case"path":return t?e.resolve(t):"";default:return null}}"CONFIG_DIR"!==t&&"config-dir"!==t||(Z=Z||e.resolve(re,r)),"CWMP_SSL"!==t&&"cwmp-ssl"!==t||(X=X||String(r).toLowerCase().trim()),"NBI_SSL"!==t&&"nbi-ssl"!==t||(Q=Q||String(r).toLowerCase().trim()),"FS_SSL"!==t&&"fs-ssl"!==t||(Y=Y||String(r).toLowerCase().trim()),"UI_SSL"!==t&&"ui-ssl"!==t||(ee=ee||String(r).toLowerCase().trim()),"FS_HOSTNAME"!==t&&"fs-hostname"!==t||(te=te||String(r).trim()),"PRESETS_CACHE_DURATION"!==t&&"presets-cache-duration"!==t||ie("MAX_CACHE_TTL",r),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==t&&"get-parameter-names-depth-threshold"!==t||ie("GPN_NEXT_LEVEL",r),"TASK_PARAMETERS_BATCH_SIZE"!==t&&"task-parameters-batch-size"!==t||ie("GPV_BATCH_SIZE",r),"FS_IP"!==t&&"fs-ip"!==t||ie("FS_HOSTNAME",r);let i=null;for(const[e,a]of Object.entries(se)){let o=e;if(s&&(o=o.toLowerCase().replace(/_/g,"-")),t===o?(i=n(r,a.type),o=e):t.startsWith(`${o}-`)&&(i=n(r,a.type),o=`${e}-${t.slice(e.length+1)}`),null!=i)return ne[o]=i,process.env[`GENIEACS_${o}`]=i,!0}return!1}const ae=process.argv.slice(2);for(;ae.length;){const e=ae.shift();if("-"===e[0]){const t=ae.shift();ie(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&ie(e.slice(9),t);const oe=Z?`${Z}/config.json`:`${re}/config/config.json`;if(t.existsSync(oe)){const e=JSON.parse(t.readFileSync(oe).toString());for(const[t,r]of Object.entries(e))ie(t,r)||(process.env[`GENIEACS_${t}`]=`${r}`)}if(Z&&ie("EXT_DIR",`${Z}/ext`),["true","1"].includes(X)){const e=Z||`${re}/config`;ie("CWMP_SSL_CERT",`${e}/cwmp.crt`),ie("CWMP_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(Q)){const e=Z||`${re}/config`;ie("NBI_SSL_CERT",`${e}/cwmp.crt`),ie("NBI_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(Y)){const e=Z||`${re}/config`;ie("FS_SSL_CERT",`${e}/cwmp.crt`),ie("FS_SSL_KEY",`${e}/cwmp.key`)}if(["true","1"].includes(ee)){const e=Z||`${re}/config`;ie("UI_SSL_CERT",`${e}/cwmp.crt`),ie("UI_SSL_KEY",`${e}/cwmp.key`)}if(te){const e=ne.FS_PORT||7567;ie("FS_URL_PREFIX",(!!ne.FS_SSL_CERT?"https":"http")+`://${te}:${e}/`)}for(const[e,t]of Object.entries(se))null!=t.default&&ie(e,t.default);function le(e,t){if(!t)return ne[e];let r=ne[e=`${e}-${t}`];if(null!=r)return r;let s=e.lastIndexOf("-");return r=ne[e.slice(0,s)],null!=r?r:(s=e.lastIndexOf("-",s-1),r=ne[e.slice(0,s)],null!=r?r:(s=e.lastIndexOf("-",s-1),r=ne[e.slice(0,s)],null!=r?r:(s=e.lastIndexOf("-",s-1),s>0&&(r=ne[e.slice(0,s)],null!=r)?r:null)))}let ue,ce,fe=!1;const pe=new WeakMap;function de(e=!0){return fe=e,new Promise(((e,t)=>{var r,s;setTimeout((()=>{t(new Error("Could not close server in a timely manner"))}),3e4).unref(),r=2e4,s=e,ue?(setTimeout((()=>{if(!s)return;ue.removeListener("request",ce),ue.setTimeout(1);const e=s;s=null,setTimeout(e,1e3)}),r).unref(),ue.close((()=>{if(!s)return;const e=s;s=null,setTimeout(e,50)}))):s()}))}function he(e){var t;return pe.get(null!==(t=e._parent)&&void 0!==t?t:e)}const me=""+le("FORWARDED_HEADER"),ge=new WeakMap,ve=[];for(const e of me.split(",").map((e=>e.trim())))try{ve.push(s.parseCIDR(e))}catch(t){try{const t=s.parse(e);ve.push([t,8*t.toByteArray().length])}catch(e){}}function ye(e){let t=ge.get(e);if(!t){const r=he(e.socket);t={localAddress:r.localAddress,localPort:r.localPort,remoteAddress:r.remoteAddress,remotePort:r.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const n=e.headers.forwarded;if(n){const e=s.parse(r.remoteAddress);if(ve.some((t=>e.kind()===t[0].kind()&&e.match(t)))){const e=function(e){e=e.toLowerCase();const t={};let r,s=0,n=-1;for(let i=0;i<e.length;++i){const a=e.charCodeAt(i);if(61===a)s>=0&&(r=e.slice(s,i).trim(),s=-1,n=i+1);else if(59===a)n>=0&&(t[r]=e.slice(n,i).trim()),n=-1,s=i+1;else{if(44===a)return n>=0&&(t[r]=e.slice(n,i).trim()),t;if(34===a&&n>=0){const a=i;if(!e.slice(n,a).trim())for(i+=1;i<e.length;++i){const o=e.charCodeAt(i);if(92===o&&++i,34===o){t[r]=JSON.parse(e.slice(a,i+1).trim()),n=-1,s=i+1;break}}}}}return n>=0&&(t[r]=e.slice(n).trim()),t}(n);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,r]=e.host.split(":",2);t.localPort=+r||t.localPort}if(e.for)if(e.for.startsWith("[")){const r=e.for.lastIndexOf("]");r>=0&&(t.remoteAddress=e.for.slice(1,r),t.remotePort=parseInt(e.for.slice(r+2))||t.remotePort)}else{const r=e.for.lastIndexOf(":");r>=0?(t.remoteAddress=e.for.slice(0,r),t.remotePort=parseInt(e.for.slice(r+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const r=e.by.lastIndexOf("]");r>=0&&(t.localAddress=e.by.slice(1,r),t.localPort=parseInt(e.by.slice(r+2))||t.localPort)}else{const r=e.by.lastIndexOf(":");r>=0?(t.localAddress=e.by.slice(0,r),t.localPort=parseInt(e.by.slice(r+1))||t.localPort):t.localAddress=e.by}}}ge.set(e,t)}return t}const we=le("LOG_FORMAT"),_e=le("ACCESS_LOG_FORMAT")||we,Ae={};let Se,be,Ee=!1,Oe=!1,Ne=$.createWriteStream(null,{fd:process.stderr.fd}),Ie=$.fstatSync(Ne.fd),Ce=$.createWriteStream(null,{fd:process.stdout.fd}),Te=$.fstatSync(Ce.fd);function De(){let e=1;Se&&(++e,$.stat(Se,((t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===Ie.dev&&r.ino===Ie.ino||(Ne.end(),Ne=$.createWriteStream(null,{fd:$.openSync(Se,"a")}),Ie=$.fstatSync(Ne.fd)),0==--e&&setTimeout(De,6e4-Date.now()%6e4).unref()}))),be&&(++e,$.stat(be,((t,r)=>{if(t&&!t.message.startsWith("ENOENT:"))throw t;r&&r.dev===Te.dev&&r.ino===Te.ino||(Ce.end(),Ce=$.createWriteStream(null,{fd:$.openSync(be,"a")}),Te=$.fstatSync(Ce.fd)),0==--e&&setTimeout(De,6e4-Date.now()%6e4).unref()}))),0==--e&&setTimeout(De,6e4-Date.now()%6e4).unref()}function $e(e){if(e.sessionContext){const t=e.sessionContext;e.deviceId=t.deviceId,e.remoteAddress=ye(t.httpRequest).remoteAddress,delete e.sessionContext}if(e.exception){const t=e.exception;e.exceptionName=t.name,e.exceptionMessage=t.message,e.exceptionStack=t.stack,delete e.exception}if(e.task&&(e.taskId=e.task._id,delete e.task),e.rpc){const t=e.rpc;t.acsRequest?(e.acsRequestId=t.id,e.acsRequestName=t.acsRequest.name,t.acsRequest.commandKey&&(e.acsRequestCommandKey=t.acsRequest.commandKey)):t.cpeRequest?(e.cpeRequestId=t.id,"Inform"===t.cpeRequest.name?(e.informEvent=t.cpeRequest.event.join(","),e.informRetryCount=t.cpeRequest.retryCount):(e.cpeRequestName=t.cpeRequest.name,t.cpeRequest.commandKey&&(e.cpeRequestCommandKey=t.cpeRequest.commandKey))):t.cpeFault&&(e.acsRequestId=t.id,e.cpeFaultCode=t.cpeFault.detail.faultCode,e.cpeFaultString=t.cpeFault.detail.faultString),delete e.rpc}if(e.fault){const t=e.fault;e.faultCode=t.code,e.faultMessage=t.message,delete e.fault}e.context&&(e.remoteAddress=ye(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,r]of Object.entries(e))null==r&&delete e[t];return e}function xe(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify($e(e))}${x.EOL}`}return`${JSON.stringify($e(e))}${x.EOL}`}function Re(e,t){const r={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};$e(e);let s="";e.remoteAddress&&(s=e.deviceId&&r.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:`${e.remoteAddress}: `);const n=Object.keys(e);let i="";const a=[];for(const t of n)r[t]||a.push(`${t}=${JSON.stringify(e[t])}`);if(a.length&&(i=`; ${a.join(" ")}`),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${i}${x.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${i}${x.EOL}`}function Pe(e){e.timestamp=(new Date).toISOString(),"json"===we?(e=Object.assign({},Ae,e),Ne.write(xe(e,Ee))):Ne.write(Re(e,Ee))}function Le(e){e.severity="info",Pe(e)}function ke(e){e.severity="warn",Pe(e)}function Me(e){e.severity="error",Pe(e)}function qe(e){e.timestamp=(new Date).toISOString(),"json"===_e?(Object.assign(e,Ae),Ce.write(xe(e,Oe))):Ce.write(Re(e,Oe))}function je(e){e.severity="info",qe(e)}function Ue(e){e.severity="warn",qe(e)}let We=0,Fe=[];function Ve(){const e=L.default.fork();return e.on("error",(t=>{if("EPIPE"!==t.code)throw t;setTimeout((()=>{if(!e.isDead())throw t}),50)})),e}function Ge(e,t,r){const s={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(s.exitCode=t),null!=r&&(s.signal=r),Me(s);const n=Date.now();Fe.push(n);let i=0,a=0,o=0;if(Fe=Fe.filter((e=>{if(e>n-6e4)++i;else if(e>n-12e4)++a;else{if(!(e>n-18e4))return!1;++o}return!0})),i>5&&a>5&&o>5){process.exitCode=1,L.default.removeListener("exit",Ge);for(const e in L.default.workers)L.default.workers[e].kill();Me({message:"Too many crashes, exiting",pid:process.pid})}else We=Math.max(n,We+2e3),We!==n?setTimeout((()=>{process.exitCode||Ve()}),We-n):Ve()}function Be(){L.default.removeListener("exit",Ge);for(const e in L.default.workers)L.default.workers[e].kill()}const Je=L.default.worker;function He(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function ze(e){return encodeURIComponent(e).replace(/[!~*'().]/g,(e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())).replace(/0x(?=[0-9A-Z]{2})/g,"0%78").replace(/%/g,"0x")}function Ke(e){return decodeURIComponent(e.replace(/0x(?=[0-9A-Z]{2})/g,"%"))}function Ze(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/g,((e,r)=>{const s=r.charAt(0),n=r.slice(1);return"u"===s?String.fromCharCode(parseInt(n,16)):t.hasOwnProperty(s)?t[s]:s}))}function Xe(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=Xe(e[s],t);n!==e[s]&&(r=r||e.slice(),r[s]=n)}return t(r||e)}async function Qe(e,t){if(!Array.isArray(e))return t(e);let r;for(let s=1;s<e.length;++s){const n=await Qe(e[s],t);n!==e[s]&&(r=r||e.slice(),r[s]=n)}return t(r||e)}function Ye(e,t){return G.default.seqMap(t,G.default.seq(e,t).many(),((e,t)=>t.reduce(((e,t)=>{const[r,s]=t;return Array.isArray(e)&&r===e[0]?e.concat([s]):[r,e,s]}),e)))}const et=G.default.createLanguage({ComparisonOperator:function(){return G.default.alt(G.default.string(">="),G.default.string("<>"),G.default.string("<="),G.default.string("="),G.default.string(">"),G.default.string("<")).skip(G.default.optWhitespace)},LikeOperator:function(){return G.default.alt(G.default.regexp(/like/i).result("LIKE").desc("LIKE"),G.default.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace)},IsNullOperator:function(){return G.default.alt(G.default.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),G.default.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace)},NotOperator:function(){return G.default.regexp(/not/i).result("NOT").notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("NOT")},AndOperator:function(){return G.default.regexp(/and/i).result("AND").notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("AND")},OrOperator:function(){return G.default.regexp(/or/i).result("OR").notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("OR")},Parameter:function(e){return G.default.alt(G.default.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(G.default.string("{").skip(G.default.optWhitespace),G.default.string("}"))).atLeast(1).map((e=>["PARAM",e.length>1?["||"].concat(e):e[0]])).skip(G.default.optWhitespace).desc("parameter")},StringValueSql:function(){return G.default.regexp(/'([^']*)'/,1).atLeast(1).skip(G.default.optWhitespace).map((e=>e.join("'"))).desc("string")},StringValueJs:function(){return G.default.regexp(/"((?:\\.|.)*?)"/,1).skip(G.default.optWhitespace).map(Ze).desc("string")},NumberValue:function(){return G.default.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return G.default.alt(G.default.regexp(/true/i).result(!0).desc("TRUE"),G.default.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace)},NullValue:function(){return G.default.regexp(/null/i).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return G.default.seqMap(G.default.regexp(/([a-zA-Z0-9_]+)/,1).skip(G.default.optWhitespace).desc("function"),e.ExpressionList.wrap(G.default.string("(").skip(G.default.optWhitespace),G.default.string(")").skip(G.default.optWhitespace)),((e,t)=>["FUNC",e.toUpperCase()].concat(t)))},WhenPair:function(e){return G.default.seq(G.default.regexp(/when/i).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("WHEN").then(e.Expression),G.default.regexp(/then/i).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("THEN").then(e.Expression))},CaseStatement:function(e){return G.default.seqMap(G.default.regexp(/case/i).result("CASE").notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("CASE"),e.WhenPair.many(),G.default.regexp(/else/i).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/)).skip(G.default.optWhitespace).desc("ELSE").then(e.Expression).map((e=>[[!0,e]])).fallback(null).skip(G.default.regex(/end/i).notFollowedBy(G.default.regexp(/[a-zA-Z0-9_]/))).skip(G.default.optWhitespace),((...e)=>e.flat(2)))},Value:function(e){return G.default.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue,e.CaseStatement)},ValueExpression:function(e){return Ye(G.default.string("||").skip(G.default.optWhitespace),Ye(G.default.alt(G.default.string("+"),G.default.string("-")).skip(G.default.optWhitespace),Ye(G.default.alt(G.default.string("*"),G.default.string("/"),G.default.string("%")).skip(G.default.optWhitespace),G.default.alt(e.Value,e.Parameter,e.Expression.wrap(G.default.string("(").skip(G.default.optWhitespace),G.default.string(")").skip(G.default.optWhitespace))))))},Comparison:function(e){return G.default.alt(G.default.seqMap(e.ValueExpression,e.IsNullOperator,((e,t)=>[t,e])),G.default.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,((e,t,r)=>[t,e,r])),G.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(G.default.regexp(/escape/i).result("ESCAPE").skip(G.default.whitespace).desc("ESCAPE")),e.ValueExpression,((e,t,r,s)=>[t,e,r,s])),G.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,((e,t,r)=>[t,e,r])))},ExpressionList:function(e){return e.Expression.sepBy(G.default.string(",").skip(G.default.optWhitespace))},Expression:function(e){return Ye(e.OrOperator,Ye(e.AndOperator,(t=e.NotOperator,r=e.Comparison.or(e.ValueExpression),G.default.seq(t,r).or(r)))).trim(G.default.optWhitespace);var t,r}});function tt(e){return e?et.Expression.tryParse(e):null}function rt(e,t=0){if(!Array.isArray(e))return JSON.stringify(e);const r={OR:10,AND:11,NOT:12,"=":20,"<>":20,">":20,">=":20,"<":20,"<=":20,LIKE:20,"NOT LIKE":20,"IS NULL":20,"IS NOT NULL":20,"||":30,"+":31,"-":31,"*":32,"/":32,"%":32},s=e[0].toUpperCase();function n(e){return r[s]<=t?`(${e})`:e}if("FUNC"===s)return n(`${e[1]}(${e.slice(2).map((e=>rt(e))).join(", ")})`);if("PARAM"===s)return"string"==typeof e[1]?n(e[1]):Array.isArray(e[1])&&"||"===e[1][0]?n(e[1].slice(1).map((e=>"string"==typeof e?e:`{${rt(e)}}`)).join("")):n(`{${rt(e[1])}}`);if("IS NULL"===s||"IS NOT NULL"===s)return n(`${rt(e[1],r[s])} ${s}`);if("LIKE"===s||"NOT LIKE"===s)return e[3]?n(`${rt(e[1],r[s])} ${s} ${rt(e[2],r[s])} ESCAPE ${rt(e[3],r[s])}`):n(`${rt(e[1],r[s])} ${s} ${rt(e[2],r[s])}`);if("CASE"===s){const t=["CASE"];for(let r=1;r<e.length-1;r+=2){if(!Array.isArray(e[r])&&e[r]){null!=e[r+1]&&t.push("ELSE",rt(e[r+1]));break}t.push("WHEN",rt(e[r]),"THEN",rt(e[r+1]))}return t.push("END"),t.join(" ")}if(s in r){const t=e.slice(1).map(((t,s)=>rt(t,r[e[0]]+Math.min(s-1,0))));return n("NOT"===s?`${s} ${t[0]}`:t.join(` ${s} `))}throw new Error(`Unrecognized operator ${e[0]}`)}function st(e,t){const r=e.split("");for(let e=0;e<r.length;++e){const s=r[e];if(s===t)r[e]=r[e+1]||"",r[e+1]="";else if("_"===s)r[e]="\\_";else if("%"===s)for(r[e]="\\%";"%"===r[e+1];)r[++e]=""}return r.filter((e=>e))}const nt={devices:null,presets:null,objects:null,provisions:null,virtualParameters:null,faults:null,tasks:null,files:null,operations:null,permissions:null,users:null,config:null};let it;const at=[];function ot(e){at.push(e)}async function lt(){null!=it&&await(await it).close()}function ut(e,t){return e+t}function ct(e,t){return e*t}function ft(e,t){return e/t}function pt(e,t){return e%t}function dt(e){return Number(e)}function ht(e,t){return e!==t}function mt(e,t){return e<t}ot((async e=>{nt.tasks=e.collection("tasks"),await nt.tasks.createIndex({device:1,timestamp:1}),nt.devices=e.collection("devices"),nt.presets=e.collection("presets"),nt.objects=e.collection("objects"),nt.files=e.collection("fs.files"),nt.provisions=e.collection("provisions"),nt.virtualParameters=e.collection("virtualParameters"),nt.faults=e.collection("faults"),nt.operations=e.collection("operations"),nt.permissions=e.collection("permissions"),nt.users=e.collection("users"),nt.config=e.collection("config")}));const gt=BigInt,vt=Array.isArray,yt=new WeakMap,wt={};function _t(e,t){let r=!0;for(;r;){r=!1;for(let s=2;s<e.length;++s){const n=t(e[s-1],e[s],s-2);n!==wt&&(r=!0,(e=e.slice()).splice(s-1,2,n))}}return 2===e.length?e[1]:e}function At(e,t="",r=""){const s={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let n=st(e,t);if(!n.length)return new RegExp("^$",r);n=n.map((e=>s[e]||e)),n[0]=".*"===n[0]?"":"^"+n[0];const i=n.length-1;return n[i]=[".*",""].includes(n[i])?"":n[i]+"$",new RegExp(n.join(""),r)}function St(e,t){return"boolean"==typeof e&&(e=+e),"boolean"==typeof t&&(t=+t),typeof e!=typeof t?"string"==typeof e?1:-1:e>t?1:e<t?-1:0}function bt(e){switch(typeof e){case"number":return e;case"boolean":return+e;case"string":return parseFloat(e)||0}}function Et(e){switch(typeof e){case"string":return e;case"number":return e.toString();case"boolean":return(+e).toString()}}function Ot(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){for(let t=1;t<e.length;t+=2){if(Array.isArray(e[t]))return e;if(e[t])return e[t+1]}return null}if("FUNC"===e[0]){if("COALESCE"===e[1]){const t=[];for(let r=2;r<e.length;++r){const s=e[r];if(null!=s&&(t.push(s),!Array.isArray(s)))break}return t.length?1===t.length?t[0]:["FUNC","COALESCE",...t]:null}if("UPPER"===e[1]){if(null==e[2])return null;if(!vt(e[2]))return Et(e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!vt(e[2]))return Et(e[2]).toLowerCase()}else if("ROUND"===e[1]){const t=e[2],r=e.length>3?e[3]:0;if(null==t||null==r)return null;if(!vt(t)&&!vt(r)){const e=10**r,s=t*e*(1+Number.EPSILON);return Math.round(s)/e}}}else if("PARAM"===e[0]){if(null==e[1])return null}else{if("AND"===e[0]){for(let t=1;t<e.length;++t)if(!Array.isArray(e[t])&&null!=e[t]&&!e[t])return!1;const t=[];for(let r=1;r<e.length;++r){const s=e[r];if(null==s)return null;Array.isArray(s)&&("AND"===s[0]?t.push(...s.slice(1)):t.push(s))}return!t.length||(1===t.length&&t.push(!0),["AND",...t])}if("OR"===e[0]){const t=[];for(let r=1;r<e.length;++r){const s=e[r];if(Array.isArray(s))"OR"===s[0]?t.push(...s.slice(1)):t.push(s);else if(s)return!0}return t.length?(1===t.length&&t.push(!1),["OR",...t]):!!e.some((e=>null==e))&&null}if("NOT"===e[0]){if(null==e[1])return null;if(!vt(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return vt(e[1])?e:null==e[1];if("IS NOT NULL"===e[0])return vt(e[1])?e:null!=e[1];if("LIKE"===e[0]){if(vt(e[1])||vt(e[2])||vt(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=yt.get(e);return t||(t=At(e[2],e[3]),yt.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(vt(e[1])||vt(e[2])||vt(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=yt.get(e);return t||(t=At(e[2],e[3]),yt.set(e,t)),!t.test(e[1])}if("="===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:0===St(e[1],e[2]);if("<>"===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:0!==St(e[1],e[2]);if(">"===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:St(e[1],e[2])>0;if(">="===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:St(e[1],e[2])>=0;if("<"===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:St(e[1],e[2])<0;if("<="===e[0])return null==e[1]||null==e[2]?null:vt(e[1])||vt(e[2])?e:St(e[1],e[2])<=0;if("*"===e[0])return _t(e,((e,t)=>null==e||null==t?null:vt(e)||vt(t)?wt:bt(e)*bt(t)));if("/"===e[0])return _t(e,((e,t,r)=>{if(null==e||null==t)return null;if(vt(e)||vt(t))return wt;const s=bt(e),n=bt(t);return 0!==r?s*n:0===n?null:s/n}));if("+"===e[0])return _t(e,((e,t)=>null==e||null==t?null:vt(e)||vt(t)?wt:bt(e)+bt(t)));if("-"===e[0])return _t(e,((e,t,r)=>null==e||null==t?null:vt(e)||vt(t)?wt:0===r?bt(e)-bt(t):bt(e)+bt(t)));if("%"===e[0])return _t(e,((e,t,r)=>{if(null==e||null==t)return null;if(vt(e)||vt(t)||0!==r)return wt;const s=bt(e),n=Math.trunc(bt(t));return 0===n?null:s%n}));if("||"===e[0])return _t(e,((e,t)=>null==e||null==t?null:vt(e)||vt(t)?wt:Et(e)+Et(t)))}}return e}function Nt(e,t,r,s){return Xe(e,(e=>{if(s&&(e=s(e)),!vt(e))return e;if("FUNC"===e[0]&&"NOW"===e[1]){if(r)return r}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!vt(e[1])){let r;return r="function"==typeof t?t(e[1]):t[e[1]],null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return Ot(e)}))}async function It(e,t,r,s){return Qe(e,(async e=>{if(s&&(e=await s(e)),!vt(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]&&r)return r}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!vt(e[1])){let r=t[e[1]];return null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return Ot(e)}))}function Ct(e,t){if(null!=e&&!e)return!1;if(null!=t&&!t)return!1;if(!Array.isArray(e)&&!Array.isArray(t))return null!=e&&null!=t||null;if(!Array.isArray(t)&&"AND"===e[0])return e;if(!Array.isArray(e)&&"AND"===t[0])return t;const r=["AND"];return Array.isArray(e)&&"AND"===e[0]?r.push(...e.slice(1)):r.push(e),Array.isArray(t)&&"AND"===t[0]?r.push(...t.slice(1)):r.push(t),r}function Tt(e,t){if(!Array.isArray(e)&&e)return!0;if(!Array.isArray(t)&&t)return!0;if(!Array.isArray(e)&&!Array.isArray(t))return(null==e||null==t)&&null;if(!Array.isArray(t)&&"OR"===e[0])return e;if(!Array.isArray(e)&&"OR"===t[0])return t;const r=["OR"];return Array.isArray(e)&&"OR"===e[0]?r.push(...e.slice(1)):r.push(e),Array.isArray(t)&&"OR"===t[0]?r.push(...t.slice(1)):r.push(t),r}function Dt(e){const t=new Set;return Xe(e,(e=>(vt(e)&&"PARAM"===e[0]&&t.add(e[1]),e))),Array.from(t)}const $t=gt(0),xt=gt(1),Rt=gt(2),Pt=gt(-1);class Lt{constructor(e){this.map=new Map,e?(this.map.set(e,1),this.sortedKeys=[e]):this.sortedKeys=[]}reciprocal(){const e=new Lt;e.sortedKeys=this.sortedKeys,e.map=new Map;for(const[t,r]of this.map)e.map.set(t,0-r);return e}static multiply(e,t){const r=new Lt;r.sortedKeys=e.sortedKeys.slice(),r.map=new Map(e.map);for(const[e,s]of t.map){const t=r.map.get(e);if(t){const n=s+t;n?r.map.set(e,n):(r.map.delete(e),r.sortedKeys=r.sortedKeys.filter((t=>t!==e)))}else r.map.set(e,s),r.sortedKeys.push(e)}return r.sortedKeys.sort(((e,t)=>e.length!==t.length?t.length-e.length:e>t?1:e<t?-1:0)),r}static compare(e,t){if(e.sortedKeys.length!==t.sortedKeys.length)return t.sortedKeys.length-e.sortedKeys.length;for(let r=0;r<e.sortedKeys.length;++r){const s=e.sortedKeys[r],n=e.map.get(s),i=t.sortedKeys[r],a=t.map.get(i);if(n!==a)return a-n;if(s.length>i.length)return-1;if(s.length<i.length)return 1;if(s>i)return 1;if(s<i)return-1}return 0}}function kt(e,t){for(;ht(t,$t);){const r=t;t=pt(e,t),e=r}return e}class Mt{constructor(e){this.terms=e}static simplifyTerms(e){const t=e.slice().sort(((e,t)=>Lt.compare(e.indeterminates,t.indeterminates)));for(let e=1;e<t.length;++e){const r=t[e-1],s=t[e];if(0===Lt.compare(r.indeterminates,s.indeterminates)){const n=ut(ct(r.coefficientNumerator,s.coefficientDenominator),ct(s.coefficientNumerator,r.coefficientDenominator)),i=ct(r.coefficientDenominator,s.coefficientDenominator),a=kt(n,i);t[e]={indeterminates:s.indeterminates,coefficientNumerator:ft(n,a),coefficientDenominator:ft(i,a)},t[e-1]={indeterminates:r.indeterminates,coefficientNumerator:$t,coefficientDenominator:r.coefficientDenominator}}}return t.filter((e=>ht(e.coefficientNumerator,$t)))}static fromIndeterminate(e){const t=new Lt(JSON.stringify(e));return new Mt([{indeterminates:t,coefficientNumerator:xt,coefficientDenominator:xt}])}static fromConstant(e){const[t,r]=Math.abs(e).toString(2).split(".",2);let s=gt("0b"+t);e<0&&(s=ct(s,Pt));let n=xt;var i,a;r&&(i=Rt,a=gt(r.length),n=i**a,s=ut(ct(s,n),gt("0b"+r)));const o=[{indeterminates:new Lt,coefficientNumerator:s,coefficientDenominator:n}];return new Mt(o)}negation(){const e=this.terms.map((e=>({indeterminates:e.indeterminates,coefficientNumerator:ct(e.coefficientNumerator,Pt),coefficientDenominator:e.coefficientDenominator})));return new Mt(e)}reciprocal(){const e=this.terms.map((e=>({indeterminates:e.indeterminates.reciprocal(),coefficientNumerator:e.coefficientDenominator,coefficientDenominator:e.coefficientNumerator})));return new Mt(e)}constant(){const e=this.terms.filter((e=>!e.indeterminates.sortedKeys.length));return new Mt(e)}add(e){return new Mt(Mt.simplifyTerms(this.terms.concat(e.terms)))}subtract(e){return this.add(e.negation())}multiply(e){const t=[];for(const r of this.terms)for(const s of e.terms){const e=ct(r.coefficientNumerator,s.coefficientNumerator),n=ct(r.coefficientDenominator,s.coefficientDenominator),i=kt(e,n);t.push({indeterminates:Lt.multiply(r.indeterminates,s.indeterminates),coefficientNumerator:ft(e,i),coefficientDenominator:ft(n,i)})}return new Mt(Mt.simplifyTerms(t))}divide(e){return this.multiply(e.reciprocal())}toString(){const e=[];for(const t of this.terms){const r=dt(t.coefficientNumerator)/dt(t.coefficientDenominator),s=[];if(t.indeterminates.sortedKeys.length){for(const e of t.indeterminates.sortedKeys){const r=t.indeterminates.map.get(e);for(let t=Math.abs(r);t>0;--t)r>0?s.push(e):s.push(`["/",1,${e}]`)}1!==r&&s.push(r.toString()),s.length>1?e.push(`["*",${s.join(",")}]`):e.push(s[0])}else e.push(r.toString())}return e.length?1===e.length?e[0]:`["+",${e.join(",")}]`:"0"}}const qt=Mt.fromConstant(0),jt=Mt.fromConstant(1),Ut={"=":"=","<>":"<>",">":"<",">=":"<=","<":">","<=":">="};function Wt(e){if(!Array.isArray(e))return e;const t=e[0];if("FUNC"===t&&"COALESCE"===e[1]){const t=["CASE"];for(let r=2;r<e.length;++r)t.push(Wt(["IS NOT NULL",e[r]]),e[r]);return Wt(t)}if("CASE"===t){const t=[];for(let r=1;r<e.length;r+=2){let s=e[r];if(s instanceof Mt&&(s=JSON.parse(s.toString())),!Array.isArray(s)&&!s)continue;const n=e[r+1];if(Array.isArray(n)&&"CASE"===n[0]){for(let e=1;e<n.length;e+=2)t.push([Ct(s,n[e]),n[e+1]]);if(t.push([s,null]),!Array.isArray(s)&&s)break}else t.push([s,n])}for(;null==t[t.length-1][1];)t.pop();return["CASE",...t.flat()]}const r=new Map;for(const[t,s]of e.entries()){if(!Array.isArray(s))continue;if("CASE"!==s[0])continue;const e=[];for(let t=1;t<s.length;t+=2)e.push([s[t],s[t+1]]);e.push([!0,null]),r.set(t,e)}if(r.size){let t=[[!0,e]];for(const[e,s]of r){const r=[];for(const[n,i]of s)if(r.push(...t.map((t=>{const r=t[1].slice();return r[e]=i,[Ct(n,t[0]),r]}))),!Array.isArray(n)&&n)break;t=r}for(const e of t)e[1]=Wt(e[1]);if(!0===t[0][0])return t[0][1];for(;null==t[t.length-1][1];)t.pop();return["CASE",...t.flat()]}function s(e){return null==e?null:e instanceof Mt?e:"number"==typeof e?Mt.fromConstant(e):"string"==typeof e?Mt.fromConstant(parseFloat(e)||0):"boolean"==typeof e?Mt.fromConstant(+e):Mt.fromIndeterminate(e)}if("+"===t){const t=[];for(let r=1;r<e.length;++r){const n=s(e[r]);if(null==n)return null;t.push(n)}return t.reduce(((e,t)=>e.add(t)),qt)}if("*"===t){const t=[];for(let r=1;r<e.length;++r){const n=s(e[r]);if(null==n)return null;t.push(n)}return t.reduce(((e,t)=>e.multiply(t)),jt)}if("-"===t){const t=[];for(let r=1;r<e.length;++r){const n=s(e[r]);if(null==n)return null;t.push(n)}return t.reduce(((e,t)=>e.subtract(t)))}if("/"===t){const t=[];for(let r=1;r<e.length;++r){const n=s(e[r]);if(null==n)return null;t.push(n)}return t.reduce(((e,t)=>e.divide(t)))}if(["=","<>",">",">=","<","<="].includes(t)){if(null==e[1]||null==e[2])return null;let r,s;if(e[1]instanceof Mt?r=e[1]:"number"==typeof e[1]&&(r=Mt.fromConstant(e[1])),e[2]instanceof Mt?s=e[2]:"number"==typeof e[2]&&(s=Mt.fromConstant(e[2])),r||s)if(r||(r=Mt.fromIndeterminate(e[1])),s||(s=Mt.fromIndeterminate(e[2])),r=r.subtract(s),s=r.constant().negation(),r=r.add(s),r.terms.length){let n=1;const i=r.terms[0].coefficientNumerator,a=r.terms[0].coefficientDenominator;(mt(i,$t)||mt(a,$t))&&(n*=-1);const o=new Mt([{indeterminates:new Lt,coefficientNumerator:a,coefficientDenominator:i}]);r=r.multiply(o),s=s.multiply(o);const l=r.terms[0].indeterminates.sortedKeys;let u=r.terms[0].indeterminates.map.get(l[0])<0?-1:0;for(const e of r.terms)for(const t of e.indeterminates.map.values())u+=t;u<0&&(n*=-1,r=r.reciprocal(),s=s.reciprocal()),e=n<0?[Ut[t],r,s]:[t,r,s]}else{if(e=[t,JSON.parse(r.toString()),JSON.parse(s.toString())],"="===t)return e[1]===e[2];if("<>"===t)return e[1]!==e[2];if(">"===t)return e[1]>e[2];if(">="===t)return e[1]>=e[2];if("<"===t)return e[1]<e[2];if("<="===t)return e[1]<=e[2]}}return e=Ot(e=e.map((e=>e instanceof Mt?JSON.parse(e.toString()):e)))}function Ft(e){return(e=Xe(e,Wt))instanceof Mt?e=JSON.parse(e.toString()):Array.isArray(e)&&"CASE"===e[0]&&(e=e.map((e=>e instanceof Mt?JSON.parse(e.toString()):e))),e}class Vt{constructor(){this.variables=new Map,this.clauses=new Map}getVar(e){const t=e.toString();let r=this.variables.get(t);return null==r&&(r=this.variables.size,this.variables.set(t,r),this.clauses.set(r,e)),r}getClause(e){return this.clauses.get(e)}canRaise(e,t){return!0}sanitizeMinterms(e){return e}minimize(e,t=[]){e=this.sanitizeMinterms(e);const r=this.canRaise.bind(this);return _.espresso(e,[...this.getDcSet(e),...t],{canRaise:r})}}function*Gt(e){if(!Array.isArray(e))return;const t=e[0];if("IS NULL"!==t&&"IS NOT NULL"!==t){if("FUNC"===t){if("NOW"===e[1])return;if("LOWER"===e[1]||"UPPER"===e[1])yield*Gt(e[2]);else if("ROUND"===e[1]){for(const t of e.slice(2,4))yield*Gt(t);return}}else if("PARAM"!==t){for(const t of e.slice(1))yield*Gt(t);return}yield e}}class Bt{expression(){if(void 0!==this._expression)return this._expression;const e=zt(),t=this.true(e),r=e.minimize(t);return this._expression=e.toExpression(r),this._expression}isBoolean(){return!0}isNullable(e){return this._isNullable||(this._isNullable=new Set([...this.getNullables()].map((e=>e.toString())))),this._isNullable.has(e.toString())}*getNullables(){const e=this.expression();for(const t of Gt(e))t===e?yield new Bt.IsNull(this):yield new Bt.IsNull(new Bt.Exp(t))}toString(){return JSON.stringify(this.expression())}}function Jt(e,t){const r=new Map;for(const s of e){const e=t(s);let n=r.get(e);n||r.set(e,n=[]),n.push(s)}return r.entries()}!function(e){class t extends e{constructor(e){super(),this.operand=e}true(e){return this.operand.false(e)}false(e){return this.operand.true(e)}null(e){return this.operand.null(e)}}e.Not=t;class r extends e{constructor(e){super(),this.operands=e}true(e){const t=[];for(const r of this.operands){const s=r.true(e);if(1===s.length&&!s[0].length)return[[]];t.push(...s)}return t}false(e){const t=[],s=[...this.operands];for(const n of s){if(n instanceof r){s.push(...n.operands);continue}const i=n.false(e);if(!i.length)return[];t.push(i)}return t.length?1===t.length?t[0]:_.complement(t.map((e=>_.complement(e))).flat()):[[]]}null(e){const t=[],s=[...this.operands];for(const n of s){if(n instanceof r){s.push(...n.operands);continue}const i=n.true(e);if(1===i.length&&!i[0].length)return[];t.push(...i)}const n=[];for(const r of s){const s=r.null(e);if(1===s.length&&!s[0].length&&!t.length)return[[]];n.push(...s)}return t.length?_.complement([..._.complement(n),...t]):n}}e.Or=r;class s extends e{constructor(e){super(),this.operands=e}true(e){const t=[],r=[...this.operands];for(const n of r){if(n instanceof s){r.push(...n.operands);continue}const i=n.true(e);if(!i.length)return[];(1!==i.length||i[0].length)&&t.push(i)}return t.length?1===t.length?t[0]:_.complement(t.map((e=>_.complement(e))).flat()):[[]]}false(e){const t=[];for(const r of this.operands){const s=r.false(e);if(1===s.length&&!s[0].length)return[[]];t.push(...s)}return t}null(e){const t=[],r=[...this.operands];for(const n of r){if(n instanceof s){r.push(...n.operands);continue}const i=n.false(e);if(1===i.length&&!i[0].length)return[];t.push(...i)}const n=[];for(const s of r){const r=s.null(e);if(1===r.length&&!r[0].length&&!t.length)return[[]];n.push(...r)}return t.length?_.complement([..._.complement(n),...t]):n}}e.And=s;e.Case=class extends e{constructor(e){super(),this.clauses=e}true(e){const t=[],r=[];for(let s=0;s<this.clauses.length;s+=2){const n=this.clauses[s].true(e),i=this.clauses[s+1].true(e);t.push(..._.complement([...r,..._.complement(n),..._.complement(i)])),s<this.clauses.length-2&&r.push(..._.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t}false(e){const t=[],r=[];for(let s=0;s<this.clauses.length;s+=2){const n=this.clauses[s].true(e),i=this.clauses[s+1].false(e);t.push(..._.complement([...r,..._.complement(n),..._.complement(i)])),s<this.clauses.length-2&&r.push(..._.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t}null(e){const t=[],r=[];for(let s=0;s<this.clauses.length;s+=2){const n=this.clauses[s].true(e),i=this.clauses[s+1].null(e);t.push(..._.complement([...r,..._.complement(n),..._.complement(i)])),r.push(..._.complement([...this.clauses[s].false(e),...this.clauses[s].null(e)]))}return t.push(..._.complement([...r])),t}expression(){if(null!=this._expression)return this._expression;if(this.isBoolean())return this._expression=new e.Not(new e.Not(this)).expression(),this._expression;const t=zt(),r=[];for(let e=0;e<this.clauses.length;e+=2){let s=this.clauses[e].true(t);const n=this.clauses[e+1].expression();if(r.length&&JSON.stringify(n)===JSON.stringify(r[r.length-1].then)&&s.push(...r.pop().when),s=t.minimize(s,r.flatMap((e=>e.when))),s.length&&(r.push({when:s,then:n}),1===s.length&&!s[0].length))break}for(;null==r[r.length-1].then;)r.pop();return r.length?(this._expression=["CASE",...r.flatMap((e=>[t.toExpression(e.when),e.then]))],this._expression):null}isBoolean(){for(let e=1;e<this.clauses.length;e+=2)if(!this.clauses[e].isBoolean())return!1;return!0}};e.IsNull=class extends e{constructor(e){super(),this.operand=e,this._boolean=new t(new t(this))}true(e){return this.operand.null(e)}false(e){return _.complement(this.true(e))}null(){return[]}isBoolean(){return!0}*getNullables(){}expression(){const e=[...this.operand.getNullables()];return 1===e.length&&e[0].operand===this.operand?["IS NULL",this.operand.expression()]:super.expression()}};class n extends e{constructor(e){super(),this.exp=e}true(e){return Array.isArray(this.exp)?e.getMinterms(this,!0):this.exp?[[]]:[]}false(e){return Array.isArray(this.exp)?e.getMinterms(this,!1):this.exp||null==this.exp?[]:[[]]}null(e){return Array.isArray(this.exp)?e.getMinterms(this,null):null==this.exp?[[]]:[]}expression(){return this.exp}isBoolean(){return!0===this.exp||!1===this.exp||null==this.exp}}e.Exp=n;e.Compare=class extends e{constructor(e,t,r){super(),this.lhs=e,this.op=t,this.rhs=r}true(e){return e.getMinterms(this,!0)}false(e){return e.getMinterms(this,!1)}null(e){return this.lhs.null(e)}*getNullables(){yield*this.lhs.getNullables()}isBoolean(){return!0}expression(){return[this.op,this.lhs.expression(),this.rhs]}};e.Like=class extends e{constructor(e,t,r){super(),this.rhs=t,this.esc=r;const s=e.expression();let i=!0,a=!1;if(Array.isArray(s)&&"FUNC"===s[0]){const r=s[1];if("UPPER"===r||"LOWER"===r){("UPPER"===r?t.toUpperCase():t.toLowerCase())===t?i=!1:a=!0,e=new n(s[2])}}this.lhs=e,this.pattern=st(t,r),this.caseSensitive=i,this.contradiction=a}true(e){return e.getMinterms(this,!0)}false(e){return e.getMinterms(this,!1)}null(e){return this.lhs.null(e)}isBoolean(){return!0}isNullable(e){return this.lhs.isNullable(e)}getNullables(){return this.lhs.getNullables()}expression(){let e=this.lhs.expression();return this.contradiction?e=this.rhs===this.rhs.toLocaleUpperCase()?["FUNC","LOWER",e]:["FUNC","UPPER",e]:this.caseSensitive||(e=this.rhs===this.rhs.toLocaleUpperCase()?["FUNC","UPPER",e]:["FUNC","LOWER",e]),["LIKE",e,this.rhs,...this.esc?[this.esc]:[]]}},e.fromExpression=function(t){return Xe(t,(t=>{if(!Array.isArray(t))return new e.Exp(t);let r,s=t[0],i=!0;if("NOT LIKE"===s?s="LIKE":"IS NOT NULL"===s?s="IS NULL":"<>"===s?s="=":">="===s?s="<":"<="===s?s=">":i=!1,"IS NULL"===s)r=new e.IsNull(t[1]);else if("NOT"===s)r=new e.Not(t[1]);else if("OR"===s)r=new e.Or(t.slice(1));else if("AND"===s)r=new e.And(t.slice(1));else if("CASE"===s)r=new e.Case(t.slice(1));else if("LIKE"===s){const s=t[2]instanceof n?t[2].expression():null,i=t[3]instanceof n?t[3].expression():null;"string"==typeof s&&"string"==typeof i?r=new e.Like(t[1],s,i):"string"==typeof s&&null==i&&(r=new e.Like(t[1],s))}else if(">"===s||"<"===s||"="===s){const i=t[2]instanceof n?t[2].expression():null;["boolean","number","string"].includes(typeof i)&&(r=new e.Compare(t[1],s,i))}if(!r){const n=t.slice(1).map((e=>e.expression()));r=new e.Exp([s,...n])}return i&&(r=new e.Not(r)),r}))}}(Bt||(Bt={}));class Ht extends Vt{constructor(){super()}getMinterms(e,t){const r=this.getVar(e);return!0===t?[[r<<2^3]]:!1===t?[[r<<2^1]]:[[r<<2,r<<2^2]]}getDcSet(e){const t=[],r=new Set([...e.flat()].map((e=>e>>2))),s=[...r].map((e=>this.getClause(e))),n=s.filter((e=>e instanceof Bt.Compare));for(const[,e]of Jt(n,(e=>JSON.stringify(e.lhs)))){const s=e[0].lhs,n=[...new Set(e.map((e=>e.rhs)))].sort(((e,t)=>{const r=typeof e,s=typeof t;return r===s?e>t?1:-1:"string"===r?1:"string"===s?-1:+e-+t}));for(const[e,i]of n.entries()){const a=this.getVar(new Bt.Compare(s,"=",i)),o=this.getVar(new Bt.Compare(s,">",i)),l=this.getVar(new Bt.Compare(s,"<",i));t.push([a<<2^3,o<<2^3]),t.push([l<<2^3,o<<2^3]),t.push([l<<2^3,a<<2^3]),t.push([l<<2^1,a<<2^1,o<<2^1]);const u=[l,a,o].filter((e=>!r.has(e)));1===u.length&&r.add(u[0]);for(let r=0;r<e;r++){const e=this.getVar(new Bt.Compare(s,"=",n[r])),i=this.getVar(new Bt.Compare(s,">",n[r])),u=this.getVar(new Bt.Compare(s,"<",n[r]));t.push([i<<2^1,l<<2^1]),t.push([e<<2^3,l<<2^1]),t.push([u<<2^3,l<<2^1]),t.push([i<<2^1,o<<2^3]),t.push([i<<2^1,a<<2^3]),t.push([e<<2^3,o<<2^3]),t.push([e<<2^3,a<<2^3]),t.push([u<<2^3,o<<2^3]),t.push([u<<2^3,a<<2^3])}}}const i=s.filter((e=>e instanceof Bt.Like));for(const[,e]of Jt(i,(e=>JSON.stringify(e.lhs))))for(let r=0;r<e.length;++r){const s=e[r];if(s.contradiction)t.push([this.getVar(s)<<2^3]);else for(let n=r+1;n<e.length;++n){const r=e[n];if(r.contradiction)continue;let i=s.pattern,a=r.pattern;s.caseSensitive&&r.caseSensitive||(i=i.map((e=>e.toLowerCase())),a=a.map((e=>e.toLowerCase()))),Zt(i,a)?t.push([this.getVar(s)<<2^3,this.getVar(r)<<2^3]):s.caseSensitive&&!r.caseSensitive||!Kt(i,a)?r.caseSensitive&&!s.caseSensitive||!Kt(a,i)||(t.push([this.getVar(s)<<2^3,this.getVar(r)<<2^2]),t.push([this.getVar(s)<<2^0,this.getVar(r)<<2^1])):(t.push([this.getVar(s)<<2^2,this.getVar(r)<<2^3]),t.push([this.getVar(s)<<2^1,this.getVar(r)<<2^0]))}}for(const e of r){const s=this.getClause(e),n=[...s.getNullables()].map((e=>this.getVar(e)));if(n.length){t.push([...n.map((e=>e<<2^2)),e<<2^0,e<<2^2]);for(const s of n)t.push([s<<2^3,e<<2^1]),t.push([s<<2^3,e<<2^3]),r.add(s)}if(s instanceof Bt.IsNull){const r=s.operand.toString();'["PARAM","DeviceID.ID"]'!==r&&'["PARAM","_id"]'!==r||t.push([e<<2^3])}}return t.filter((e=>e.every((e=>r.has(e>>2)))))}canRaise(e,t){const r=this.getClause(e>>2);if(r instanceof Bt.IsNull){for(const s of t){if(s===e||1&s)continue;if(this.getClause(s>>2).isNullable(r))return!1}return!0}return!(1&e&&t.has(3^e))}sanitizeMinterms(e){const t=[];e:for(const r of e){const e=new Map;for(const t of r)e.set(t>>2,(e.get(t>>2)||0)|1<<(3&t));const s=[],n=[];for(const[t,r]of e){if(10===r)continue e;const e=[...this.clauses.get(t).getNullables()].map((e=>this.getVar(e))),i=t<<2;5===r?1===e.length?s.push(e[0]<<2^3):n.push(e.map((e=>e<<2^3))):1===r?n.push([...e.map((e=>e<<2^3)),3^i]):4===r?n.push([...e.map((e=>e<<2^3)),1^i]):8&r?s.push(3^i):2&r&&s.push(1^i)}let i=[s];for(;n.length;){const e=[],t=n.pop();for(const r of t)e.push(...i.map((e=>[...e,r])));i=e}t.push(...i)}return t}toExpression(e){if(!e.length)return!1;const t=[];for(const r of e){if(!r.length)return!0;const e=[];for(const t of r){let r=this.getClause(t>>>2).expression();if(!(1&t)!=!(2&t)&&(r=["NOT",r]),Array.isArray(r)&&"NOT"===r[0]&&Array.isArray(r[1])){const e=r[1];"IS NULL"===e[0]?r=["IS NOT NULL",...e.slice(1)]:"LIKE"===e[0]?r=["NOT LIKE",...e.slice(1)]:"="===e[0]?r=["<>",...e.slice(1)]:"<>"===e[0]?r=["=",...e.slice(1)]:">"===e[0]?r=["<=",...e.slice(1)]:">="===e[0]?r=["<",...e.slice(1)]:"<"===e[0]?r=[">=",...e.slice(1)]:"<="===e[0]?r=[">",...e.slice(1)]:"NOT"===e[0]&&(r=e[1])}e.push(r)}e.length>1?t.push(["AND",...e]):t.push(e[0])}return t.length>1?["OR",...t]:t[0]}}function zt(){return new Ht}function Kt(e,t){let r=null;for(let s=0,n=0;;++s,++n){for(;s<e.length&&"\\%"===e[s];)r=[s++,n];if(n>=t.length)return s>=e.length;const i=s<e.length?e[s]:null;if(i!==t[n]&&"\\_"!==i){if(!r)return!1;[s,n]=r,++r[1]}}}function Zt(e,t){const r=e.indexOf("\\%"),s=t.indexOf("\\%"),n=e.lastIndexOf("\\%"),i=t.lastIndexOf("\\%"),a=e.slice(0,-1!==r?r:e.length),o=t.slice(0,-1!==s?s:t.length),l=e.slice(-1!==n?n+1:0).reverse(),u=t.slice(-1!==i?i+1:0).reverse();for(let e=0;e<Math.min(a.length,o.length);++e)if(a[e]!==o[e]&&"\\_"!==a[e]&&"\\_"!==o[e])return!0;for(let e=0;e<Math.min(l.length,u.length);++e)if(l[e]!==u[e]&&"\\_"!==l[e]&&"\\_"!==u[e])return!0;return e.length===a.length?t.filter((e=>"\\%"!==e)).length>e.length:t.length===o.length&&e.filter((e=>"\\%"!==e)).length>t.length}function Xt(e){const t=+e;return isNaN(t)?""+e:t}function Qt(e){const t={};return function e(t,r,s,n){for(const[i,a]of Object.entries(t)){if(!r)if("_lastInform"===i)s["Events.Inform"]={value:[Xt(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_registered"===i)s["Events.Registered"]={value:[Xt(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBoot"===i)s["Events.1_BOOT"]={value:[Xt(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_lastBootstrap"===i)s["Events.0_BOOTSTRAP"]={value:[Xt(a),"xsd:dateTime"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_id"===i)s["DeviceID.ID"]={value:[a,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_deviceId"===i)s["DeviceID.Manufacturer"]={value:[a._Manufacturer,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.OUI"]={value:[a._OUI,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.ProductClass"]={value:[a._ProductClass,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n},s["DeviceID.SerialNumber"]={value:[a._SerialNumber,"xsd:string"],valueTimestamp:n,writable:!1,writableTimestamp:n,object:!1,objectTimestamp:n};else if("_tags"===i){s.Tags={writable:!1,writableTimestamp:n,object:!0,objectTimestamp:n};for(const e of a)s[`Tags.${ze(e)}`]={value:[!0,"xsd:boolean"],valueTimestamp:n,writable:!0,writableTimestamp:n,object:!1,objectTimestamp:n}}if(i.startsWith("_"))continue;let o=n;r?+t._timestamp>n&&(o=+t._timestamp):o=+(t._timestamp||1);const l={};null!=a._value?(l.value=[a._value instanceof Date?+a._value:a._value,a._type],l.valueTimestamp=+(a._timestamp||o),l.object=!1,l.objectTimestamp=o):null!=a._object&&(l.object=a._object,l.objectTimestamp=o),null!=a._writable&&(l.writable=a._writable,l.writableTimestamp=o),null!=a._notification&&(l.notification=a._notification,l.notificationTimestamp=+a._attributesTimestamp||1),null!=a._accessList&&(l.accessList=a._accessList,l.accessListTimestamp=+a._attributesTimestamp||1);const u=r?`${r}.${i}`:i;s[u]=l,(l.object||null==a.object)&&e(a,u,s,o)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}function Yt(e){const t=Object.assign({},e);return t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function er(e){const t=Object.assign({},e);return t._id=""+t._id,t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function tr(e){return!Object.keys(e).length||function e(t){const r=[];for(const[s,n]of Object.entries(t))if("$"===s[0])if("$and"===s){const t=["AND"];for(const r of Object.values(n))t.push(e(r));r.push(t)}else{if("$or"!==s)throw new Error(`Operator ${s} not supported`);{const t=["OR"];for(const r of Object.values(n))t.push(e(r));r.push(t)}}else if("_tags"===s)if("object"==typeof n){if(Array.isArray(n))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(n))if("$ne"===t){if("string"!=typeof n.$ne)throw new Error("Only string values are allowed for _tags");e.push(["IS NULL",["PARAM",`Tags.${ze(r)}`]])}else{if("$eq"!==t)throw new Error("Invalid tag query");if("string"!=typeof n.$eq)throw new Error("Only string values are allowed for _tags");e.push(["IS NOT NULL",["PARAM",`Tags.${ze(r)}`]])}1===e.length?r.push(e[0]):e.length>1&&r.push(["AND",...e])}else r.push(["IS NOT NULL",["PARAM",`Tags.${ze(n)}`]]);else if(s.startsWith("Tags.")){let e;if("boolean"==typeof n)e=n;else if(n.hasOwnProperty("$eq"))e=!!n.$eq;else if(n.hasOwnProperty("$ne"))e=!n.$ne;else{if(!n.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!n.$exists}r.push([e?"IS NOT NULL":"IS NULL",["PARAM",s]])}else if("object"==typeof n){if(Array.isArray(n))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(n)){if("$eq"===t)e.push(["=",["PARAM",s],r]);else if("$ne"===t)e.push(["OR",["<>",["PARAM",s],r],["IS NULL",["PARAM",s]]]);else if("$lt"===t)e.push(["<",["PARAM",s],r]);else if("$lte"===t)e.push(["<=",["PARAM",s],r]);else if("$gt"===t)e.push([">",["PARAM",s],r]);else{if("$gte"!==t)throw new Error(`Operator ${t} not supported`);e.push([">=",["PARAM",s],r])}if(!["string","number","boolean"].includes(typeof r))throw new Error(`Invalid value for ${t} operator`)}if(1===e.length)r.push(e[0]);else if(e.length>1){const t=["AND"];r.push(t.concat(e))}}else r.push(["=",["PARAM",s],n]);return 1===r.length?r[0]:0===r.length||["AND",...r]}(e)}function rr(e){const t=Object.assign({},e);if(t.precondition)try{tt(t.precondition)}catch(e){t.precondition=tr(JSON.parse(t.precondition)),t.precondition=t.precondition.length?rt(t.precondition):""}if(t.events){const e=[];for(const[r,s]of Object.entries(t.events))e.push(s?r:`-${r}`);t.events=e.join(", ")}const r=t.configurations[0];return 1===t.configurations.length&&"provision"===r.type&&r.name&&r.name.length&&(t.provision=r.name,t.provisionArgs=r.args?r.args.map((e=>rt(e))).join(", "):""),delete t.configurations,t}function sr(e){const t={};return t._id=e._id,e.metadata&&(t["metadata.fileType"]=e.metadata.fileType||"",t["metadata.oui"]=e.metadata.oui||"",t["metadata.productClass"]=e.metadata.productClass||"",t["metadata.version"]=e.metadata.version||""),t}function nr(e){const t=Object.assign({},e);t.precondition||(t.precondition=""),tt(t.precondition),t.weight=parseInt(t.weight)||0;const r={};if(t.events)for(let e of t.events.split(",")){let t=!0;e=e.trim(),e.startsWith("-")&&(t=!1,e=e.slice(1).trim()),e&&(r[e]=t)}if(t.events=r,!t.provision)throw new Error("Invalid preset provision");const s={type:"provision",name:t.provision,args:null};var n;return t.provisionArgs&&(s.args=(n=t.provisionArgs)?et.ExpressionList.tryParse(n):[]),delete t.provision,delete t.provisionArgs,t.configurations=[s],t}function ir(e,t){if(!Array.isArray(e))throw new Error("Left-hand operand must be a parameter");if("PARAM"!==e[0])throw new Error("Left-hand operand must be a parameter");if("string"!=typeof e[1])throw new Error("Left-hand operand must be a parameter");const r=e[1];if("devices"===t){if("DeviceID.ID"===r)return"_id";if("DeviceID"===r)return"_deviceId";if(r.startsWith("DeviceID."))return"_deviceId._"+r.slice(9);if("Events.Inform"===r)return"_lastInform";if("Events.Registered"===r)return"_registered";if("Events.0_BOOTSTRAP"===r)return"_lastBootstrap";if("Events.1_BOOT"===r)return"_lastBoot";if(!r.endsWith("._value")&&!r.startsWith("Tags."))return`${r}._value`}return r}function ar(e,t){if("devices"===t){if("_id"===e)return["string"];if("_lastInform"===e)return["date"];if("_registered"===e)return["date"];if("_lastBootstrap"===e)return["date"];if("_lastBoot"===e)return["date"];if(e.startsWith("_deviceId."))return["string"];if("Reboot._value"===e)return["date"];if("FactoryReset._value"===e)return["date"];if(e.endsWith("_timestamp"))return["date"];if(e.startsWith("Downloads.")){if(e.endsWith("Download._value"))return["date"];if(e.endsWith("Time._value"))return["date"];if(e.endsWith("Name._value"))return["string"];if(e.endsWith("Type._value"))return["string"]}if(e.endsWith("_value"))return["bool","number","date","string"]}else if("tasks"===t){if("_id"===e)return["oid"];if("timestamp"===e)return["date"];if("expiry"===e)return["date"];if("name"===e)return["string"];if("device"===e)return["string"]}else if("faults"===t){if("_id"===e)return["string"];if("timestamp"===e)return["date"];if("expiry"===e)return["date"];if("code"===e)return["string"];if("retries"===e)return["number"];if("channel"===e)return["string"];if("device"===e)return["string"];if("message"===e)return["string"]}else if("users"===t){if("_id"===e)return["string"];if("roles"===e)return["string"];if("password"===e)throw new Error("Cannot query restricted parameters");if("salt"===e)throw new Error("Cannot query restricted parameters")}else if("config"===t){if("_id"===e)return["string"];if("value"===e)return["string"]}else if("files"===t){if("_id"===e)return["string"];if("metadata.fileType"===e)return["string"];if("metadata.oui"===e)return["string"];if("metadata.productClass"===e)return["string"];if("metadata.version"===e)return["string"]}else if("permissions"===t){if("_id"===e)return["string"];if("role"===e)return["string"];if("resource"===e)return["devices"];if("access"===e)return["number"];if("filter"===e)return["string"];if("validate"===e)return["string"]}else if("presets"===t){if("_id"===e)return["string"];if("weight"===e)return["number"];if("channel"===e)return["string"];if("precondition"===e)return["string"];if(e.startsWith("events."))return["bool"]}else if("provisions"===t){if("_id"===e)return["string"];if("script"===e)return["string"]}else if("virtualParameters"===t){if("_id"===e)return["string"];if("script"===e)return["string"]}return"_id"===e?["oid","string"]:["bool","number","date","string"]}function or(e,t){const r=new Map;for(const s of e){const e=t(s);let n=r.get(e);n||r.set(e,n=[]),n.push(s)}return r.entries()}class lr{toString(){return JSON.stringify(this.toQuery(!0))}}class ur extends lr{constructor(e,t){super(),this.parameter=e,this.value=t}toQuery(e){return e?{[this.parameter]:{$eq:this.value}}:{[this.parameter]:{$ne:this.value}}}}class cr extends lr{constructor(e,t,r,s){super(),this.parameter=e,this.op=t,this.value=r,this.type=s}toQuery(e){let t=this.value;return"date"===this.type&&"number"==typeof t&&(t={$date:new Date(t).toISOString()}),"oid"===this.type&&"string"==typeof t&&(t={$oid:t}),e?{[this.parameter]:{[this.op]:t}}:"$eq"===this.op?{[this.parameter]:{$ne:t}}:{[this.parameter]:{$not:{[this.op]:t}}}}}class fr extends lr{constructor(e,t){super(),this.parameter=e,this.type=t}toQuery(e){return e?{[this.parameter]:{$type:this.type}}:{[this.parameter]:{$not:{$type:this.type}}}}}class pr extends lr{constructor(e,t,r,s){super(),this.parameter=e,this.caseSensitive=s,this.pattern=st(t,r)}toQuery(e){const t={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."},r=this.pattern.map((e=>{var r;return null!==(r=t[e])&&void 0!==r?r:e}));r[0]=".*"===r[0]?"":"^"+r[0];const s=r.length-1;r[s]=[".*",""].includes(r[s])?"":r[s]+"$";const n=r.join(""),i=this.caseSensitive?"s":"is";return e?{[this.parameter]:{$regularExpression:{options:i,pattern:n}}}:{[this.parameter]:{$not:{$regularExpression:{options:i,pattern:n}}}}}}class dr extends Vt{constructor(e){super(),this.collection=e}getMinterms(e,t){const r=e.expression();if(!Array.isArray(r))throw new Error("Invalid query expression");if(null===t){const t=[];for(const r of e.getNullables()){const e=ir(r.operand.expression(),this.collection);if(e.startsWith("Tags.")&&"devices"===this.collection){const r=Ke(e.slice(5)),s=new ur("_tags",r);t.push([this.getVar(s)<<1]);continue}const s=new cr(e,"$eq",null,"");t.push([this.getVar(s)<<1^1])}return t}if([">","<","="].includes(r[0])){const e=ir(r[1],this.collection);let s,n=r[2];if("boolean"==typeof n)n=+n;else if("string"!=typeof n&&"number"!=typeof n)throw new Error("Right-hand operand must be a literal value");if(e.startsWith("Tags.")&&"devices"===this.collection&&"="===r[0]){const s=Ke(e.slice(5)),i=new ur("_tags",s);if("string"==typeof n&&(n=2),"="===r[0]){if(1===n!==t)return[]}else if(">"===r[0]){if(t&&n>=1||!t&&n<1)return[]}else if("<"===r[0]&&(t&&n<=1||!t&&n>1))return[];return[[this.getVar(i)<<1^1]]}"="===r[0]?s="$eq":">"===r[0]?s=t?"$gt":"$lte":"<"===r[0]&&(s=t?"$lt":"$gte");const i=new Set(ar(e,this.collection)),a=[];if("number"==typeof n)i.has("number")&&a.push(new cr(e,s,n,"number")),i.has("date")&&a.push(new cr(e,s,n,"date")),!i.has("bool")||0!==n&&1!==n||a.push(new cr(e,s,!!n,"bool"));else if("string"==typeof n&&(i.has("string")&&a.push(new cr(e,s,n,"string")),i.has("oid"))){const t=function(e,t){var r,s;const n=(null!==(s=null===(r=e.match(/^[0-9a-f]*/))||void 0===r?void 0:r[0])&&void 0!==s?s:"").slice(0,24);let i=gt("0x0"+n),a=0;e.length>n.length&&(a+=e.charCodeAt(n.length)),n.length<24&&(a-=48),a>0&&t&&i++,i<<=gt(4*(24-n.length)),a<0&&!t&&--i;const o=i.toString(16);return o.length>24||o.startsWith("-")?null:o.padStart(24,"0")}(n,"$lt"===s||"$lte"===s);!t||"$eq"===s&&t!==n||a.push(new cr(e,s,t,"oid"))}return"$eq"!==s||t?("number"==typeof n?(i.has("bool")&&(n>1&&("$lt"===s||"$lte"===s)||n<0&&("$gt"===s||"$gte"===s))&&a.push(new cr(e,"$gte",!1,"bool")),"$gt"!==s&&"$gte"!==s||(i.has("string")&&a.push(new cr(e,"$gte","","string")),i.has("oid")&&a.push(new cr(e,"$gte","000000000000000000000000","oid")))):"string"==typeof n&&("$lt"!==s&&"$lte"!==s||(i.has("bool")&&a.push(new cr(e,"$gte",!1,"bool")),i.has("number")&&(a.push(new cr(e,"$gte",0,"number")),a.push(new cr(e,"$lt",0,"number"))),i.has("date")&&(a.push(new cr(e,"$gte",0,"date")),a.push(new cr(e,"$lt",0,"date"))))),a.map((e=>[this.getVar(e)<<1^1]))):(a.push(new cr(e,"$eq",null,"")),[a.map((e=>this.getVar(e)<<1))])}if("LIKE"===r[0]){const e=r[2];if("string"!=typeof e)throw new Error("Right-hand operand of 'LIKE' must be a string");let s=r[1],n=!0;if(Array.isArray(s)&&"FUNC"===s[0]&&["UPPER","LOWER"].includes(s[1])){if("UPPER"===s[1]&&e!==e.toUpperCase())return t?[]:[[]];if("LOWER"===s[1]&&e!==e.toLowerCase())return t?[]:[[]];n=!1,s=s[2]}const i=ir(s,this.collection),a=new pr(i,e,r[3],n);if(t)return[[this.getVar(a)<<1^1]];const o=new fr(i,"string");return[[this.getVar(a)<<1,this.getVar(o)<<1^1]]}throw new Error("Invalid query expression")}getDcSet(e){const t=[],r=new Set(e.flat().map((e=>e>>1))),s=Array.from(r).map((e=>this.getClause(e)));for(const[e,r]of or(s,(e=>e.parameter))){const s=r.filter((e=>e instanceof cr&&null!==e.value));for(const[r,n]of or(s,(e=>e.type))){const s=this.getVar(new fr(e,r)),i=new Set(n.map((e=>e.value))),a=Array.from(i).sort(((e,t)=>e>t?1:-1));for(const[n,i]of a.entries()){const o=this.getVar(new cr(e,"$eq",i,r)),l=this.getVar(new cr(e,"$gt",i,r)),u=this.getVar(new cr(e,"$lt",i,r)),c=this.getVar(new cr(e,"$gte",i,r)),f=this.getVar(new cr(e,"$lte",i,r));if("bool"===r?!1===i?t.push([u<<1^1]):!0===i&&t.push([l<<1^1]):"string"===r?""===i&&t.push([u<<1^1]):"oid"===r&&(i<"000000000000000000000000"?t.push([f<<1^1]):"000000000000000000000000"===i?t.push([u<<1^1]):i>"ffffffffffffffffffffffff"?t.push([c<<1^1]):"ffffffffffffffffffffffff"===i&&t.push([l<<1^1])),t.push([u<<1^1,c<<1^1]),t.push([l<<1^1,c<<1^0]),t.push([o<<1^0,u<<1^0,f<<1^1]),t.push([o<<1^1,c<<1^0]),t.push([o<<1^1,l<<1^1]),0===n)t.push([s<<1^0,c<<1^1]),t.push([s<<1^0,u<<1^1]);else{const s=this.getVar(new cr(e,"$gt",a[n-1],r)),i=this.getVar(new cr(e,"$lte",a[n-1],r));t.push([s<<1^0,c<<1^1]),t.push([s<<1^0,i<<1^0,u<<1^1])}n===a.length-1&&t.push([s<<1^1,l<<1^0,f<<1^0])}}const n=r.filter((e=>e instanceof pr));if(n.length){const r=this.getVar(new fr(e,"string"));for(let e=0;e<n.length;++e){const s=n[e];let i=s.pattern;t.push([this.getVar(s)<<1^1,r<<1^0]);for(let r=e+1;r<n.length;++r){const e=n[r];let a=e.pattern;s.caseSensitive&&e.caseSensitive||(i=i.map((e=>e.toLowerCase())),a=a.map((e=>e.toLowerCase()))),Zt(i,a)?t.push([this.getVar(s)<<1^1,this.getVar(e)<<1^1]):s.caseSensitive&&!e.caseSensitive||!Kt(i,a)?e.caseSensitive&&!s.caseSensitive||!Kt(a,i)||t.push([this.getVar(s)<<1^1,this.getVar(e)<<1^0]):t.push([this.getVar(s)<<1^0,this.getVar(e)<<1^1])}}}const i=this.getVar(new cr(e,"$eq",null,"")),a=ar(e,this.collection).map((t=>this.getVar(new fr(e,t))));t.push([i<<1^0,...a.map((e=>e<<1^0))]);for(let e=0;e<a.length;++e){const r=a[e];t.push([r<<1^1,i<<1^1]);for(let s=e+1;s<a.length;++s){const e=a[s];t.push([r<<1^1,e<<1^1])}}"_id"===e&&t.push([i<<1^1])}return t}canRaise(e,t){if(!(1&e))return!0;const r=this.getClause(e>>1);if(r instanceof cr)for(const s of t){if(s===e)continue;const t=this.getClause(s>>1);if(t.parameter===r.parameter){if(!(1&s))return!1;if(t instanceof fr)return!1}}return!0}toQuery(e){var t,r;const s=[];for(const n of e){const e={};e:for(const s of n){if(!n.length)return{};const i=!!(1&s),a=this.getClause(s>>1).toQuery(i);if(1!==Object.keys(a).length)throw new Error("Invalid query expression");const[o,l]=Object.entries(a)[0];if(Object.getPrototypeOf(l).constructor!==Object)throw new Error("Invalid query expression");const u=[e,...null!==(t=e.$and)&&void 0!==t?t:[]];for(const e of u){if(!(o in e)){e[o]=l;continue e}let t=l,r=e[o];if(t.$not&&r.$not&&(t=t.$not,r=r.$not),!Object.keys(t).some((e=>e in r))){Object.assign(r,t);continue e}}null!==(r=e.$and)&&void 0!==r||(e.$and=[]),e.$and.push({[o]:l})}s.push(e)}return 1===s.length?s[0]:{$or:s}}}function hr(e,t){e=Ft(e);const r=Bt.fromExpression(Ft(e)),s=new dr(t),n=r.true(s),i=s.minimize(n);return!!i.length&&w.EJSON.deserialize(s.toQuery(i))}let mr;async function*gr(e,t,r){r=r||{};const s=hr(t=Nt(t,null,Date.now()),e);if(!s)return;const n=nt[e].find(s);if(r.projection){let t=r.projection;"devices"===e&&(t=function(e){if(!e)return e;const t={};for(const[r,s]of Object.entries(e))"DeviceID.ID"===r?t._id=1:r.startsWith("DeviceID")?(t["_deviceId._SerialNumber"]=s,t["_deviceId._OUI"]=s,t["_deviceId._ProductClass"]=s,t["_deviceId._Manufacturer"]=s):r.startsWith("Tags")?t._tags=s:r.startsWith("Events")?(t._lastInform=s,t._registered=s,t._lastBoot=s,t._lastBootstrap=s):t[r]=s;return t}(r.projection)),"presets"===e&&(t.configurations=1),t=function(e){if(e[""])return{"":e[""]};const t=Object.keys(e).sort();if(t.length<=1)return e;for(let r=1;r<t.length;++r){const s=t[r-1],n=t[r];n.startsWith(s)&&("."!==n.charAt(s.length)&&"."!==n.charAt(s.length-1)||(delete e[n],t.splice(r--,1)))}return e}(t),n.project(t)}if("users"===e&&n.project({password:0,salt:0}),r.skip&&n.skip(r.skip),r.limit&&n.limit(r.limit),r.sort){let t=Object.entries(r.sort).sort(((e,t)=>Math.abs(t[1])-Math.abs(e[1]))).reduce(((e,[t,r])=>Object.assign(e,{[t]:Math.min(Math.max(r,-1),1)})),{});"devices"===e&&(t=function(e){if(!e)return e;const t={};for(const[r,s]of Object.entries(e))"DeviceID.ID"===r?t._id=s:r.startsWith("DeviceID.")?t[`_deviceId._${r.slice(9)}`]=s:"Events.Inform"===r?t._lastInform=s:"Events.Registered"===r?t._registered=s:"Events.1_BOOT"===r?t._lastBoot=s:"Events.0_BOOTSTRAP"===r?t._lastBootstrap=s:t[`${r}._value`]=s;return t}(t)),n.sort(t)}for await(let t of n)"devices"===e?t=Qt(t):"faults"===e?t=Yt(t):"tasks"===e?t=er(t):"presets"===e?t=rr(t):"files"===e&&(t=sr(t)),yield t}function vr(e,t){const r=nt[e],s=hr(t=Nt(t,null,Date.now()),e);return s?r.countDocuments(s):Promise.resolve(0)}async function yr(e,t,r){const s=nt[e];await s.replaceOne({_id:t},r,{upsert:!0})}async function wr(e,t){const r=nt[e];await r.deleteOne({_id:t})}function _r(e,t){return yr("presets",e,t=nr(t))}function Ar(e,t){var r;t.script||(t.script="");try{new v.Script(`"use strict";(function(){\n${t.script}\n})();`,{filename:e,lineOffset:-1})}catch(t){return(null===(r=t.stack)||void 0===r?void 0:r.startsWith(`${e}:`))?Promise.reject(new Error(`${t.name} at ${t.stack.split("\n",1)[0]}`)):Promise.reject(t)}return yr("provisions",e,t)}function Sr(e,t){return yr("config",e,t)}function br(e,t){return yr("permissions",e,t)}async function Er(e,t){await nt.users.updateOne({_id:e},{$set:t},{upsert:!0})}async function Or(e){await mr.delete(e)}function Nr(e){return wr("faults",e)}function Ir(e){return wr("tasks",e)}ot((async e=>{mr=new g.GridFSBucket(e)}));const Cr=+le("MAX_CACHE_TTL");let Tr;async function Dr(e){const t=await Tr.findOne({_id:e});return null==t?void 0:t.value}async function $r(e){await Tr.deleteOne({_id:e})}async function xr(e,t,r=0,s=Math.random().toString(36).slice(2)){try{const r=Date.now(),n=await Tr.findOneAndUpdate({_id:e,value:s},{$set:{expire:new Date(r+t+3e4)},$currentDate:{timestamp:!0}},{upsert:!0,returnDocument:"after"});if(Math.abs(n.value.timestamp.getTime()-r)>3e4)throw new Error("Database clock skew too great")}catch(n){if(11e3!==n.code)throw n;if(!(r>0))return null;const i=50+50*Math.random();return await new Promise((e=>setTimeout(e,i))),xr(e,t,r-i,s)}return s}function Rr(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),J.schedule(J.parse.cron(t.join(" "),!0))}ot((async e=>{Tr=e.collection("cache"),await Tr.createIndex({expire:1},{expireAfterSeconds:0})}));const Pr=new Map;let Lr=null,kr=1;function Mr(e,t="",r={}){for(const s of Object.keys(e)){const n=e[s];"object"!=typeof n||Array.isArray(n)?r[`${t}${s}`]=n:Mr(n,`${t}${s}.`,r)}return r}async function qr(){const e=await async function(){return nt.presets.find().toArray()}();let t=await async function(){return nt.objects.find().toArray()}();t=t.map((e=>{var t;return(null===(t=(e=Mr(e))._keys)||void 0===t?void 0:t.length)||(e._keys=Object.keys(e).filter((e=>!e.startsWith("_")))),e})),e.sort(((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight));const r=[];for(const s of e){let e=null;if(s.schedule){const t=s.schedule.trim().split(/\s+/);e={md5:B.createHash("md5").update(s.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=Rr(t.join(" "))}catch(t){ke({message:"Invalid preset schedule",preset:s._id,schedule:s.schedule}),e.schedule=!1}}const n=s.events||{};let i=!0;if(s.precondition){try{i=tt(s.precondition)}catch(e){i=tr(JSON.parse(s.precondition))}i=Nt(i)}const a=s.provisions||[];for(const e of s.configurations)switch(e.type){case"age":a.push(["refresh",e.name,+e.age]);break;case"value":a.push(["value",e.name,e.value]);break;case"add_tag":a.push(["tag",e.tag,!0]);break;case"delete_tag":a.push(["tag",e.tag,!1]);break;case"provision":a.push([e.name].concat(e.args||[]));break;case"add_object":for(const r of t)if(r._id===e.object){const t=r._keys.map((e=>`${e}:${JSON.stringify(r[e])}`)).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,1]);for(const e in r)e.startsWith("_")||-1!==r._keys.indexOf(e)||a.push(["value",`${s}.${e}`,r[e]])}break;case"delete_object":for(const r of t)if(r._id===e.object){const t=r._keys.map((e=>`${e}:${JSON.stringify(r[e])}`)).join(","),s=`${e.name}.[${t}]`;a.push(["instances",s,0])}break;default:throw new Error(`Unknown configuration type ${e.type}`)}r.push({name:s._id,channel:s.channel||"default",schedule:e,events:n,precondition:i,provisions:a})}return r}async function jr(){const e=await async function(){return nt.provisions.find().toArray()}(),t={};for(const r of e)t[r._id]={},t[r._id].md5=B.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new V.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function Ur(){const e=await async function(){return nt.virtualParameters.find().toArray()}(),t={};for(const r of e)t[r._id]={},t[r._id].md5=B.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new V.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function Wr(){const e=await async function(){return nt.permissions.find().toArray()}(),t={};for(const r of e)t[r.role]||(t[r.role]={}),t[r.role][r.access]||(t[r.role][r.access]={}),t[r.role][r.access][r.resource]={access:r.access,filter:tt(r.filter||"true")},r.validate&&(t[r.role][r.access][r.resource].validate=tt(r.validate));return t}async function Fr(){const e=await nt.files.find().toArray(),t={};for(const r of e){const e=r.filename||r._id.toString();t[e]={},t[e].length=r.length}return t}async function Vr(){const e=await async function(){return nt.users.find().toArray()}(),t={};for(const r of e)t[r._id]={password:r.password,salt:r.salt,roles:r.roles.split(",").map((e=>e.trim()))};return t}async function Gr(){const e=await async function(){return(await nt.config.find().toArray()).map((e=>({id:e._id,value:tt(e.value)})))}();e.sort(((e,t)=>e.id>t.id?1:e.id<t.id?-1:0));const t={filters:{},device:{},index:{},overview:{},pageSize:null},r={};for(const s of e){const e=Nt(s.value);if(r[s.id]=e,s.id.startsWith("ui.")){const r=s.id.split(".");if(!(r[1]in t))continue;r.shift();let n=t;for(;r.length>1;){const e=r.shift();null!=n[e]&&"object"==typeof n[e]||(n[e]={}),n=n[e]}n[r[0]]=e}}return[r,t]}async function Br(){if(!kr)return await new Promise((e=>setTimeout(e,20))),Br();const e=Date.now();if(e<kr)return;kr=0;const t=await Dr("presets_hash");if(Lr&&t===Lr)return void(kr=e+(5e3-e%5e3));const r=await xr("presets_hash_lock",5e3),s=await Promise.all([qr(),jr(),Ur(),Fr(),Wr(),Vr(),Gr()]),n={presets:s[0],provisions:s[1],virtualParameters:s[2],files:s[3],permissions:s[4],users:s[5],config:s[6][0],ui:s[6][1]};if(Lr){const e=Lr,t=Pr.get(e);setTimeout((()=>{Pr.get(e)===t&&Pr.delete(e)}),12e4).unref()}Lr=function(e){const t=B.createHash("md5");for(const r of e.presets)t.update(JSON.stringify(r.name)),t.update(JSON.stringify(r.channel)),t.update(JSON.stringify(r.schedule)),t.update(JSON.stringify(r.events)),t.update(JSON.stringify(r.precondition)),t.update(JSON.stringify(r.provisions));let r;r=Object.keys(e.provisions).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.provisions[s].md5);r=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(e.virtualParameters[s].md5);r=Object.keys(e.config).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.config[s]));r=Object.keys(e.files).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.files[s]));r=Object.keys(e.users).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.users[s]));const s=Object.keys(e.permissions).sort();t.update(JSON.stringify(s));for(const n of s){const s=Object.keys(e.permissions[n]).sort();t.update(JSON.stringify(s));for(const i of s){r=Object.keys(e.permissions[n][i]).sort(),t.update(JSON.stringify(r));for(const s of r)t.update(JSON.stringify(e.permissions[n][i][s]))}}return t.digest("hex")}(n),Pr.set(Lr,n),r&&(Lr!==t&&await async function(e,t,r=Cr){const s=new Date,n=new Date(s.getTime()+3e4+1e3*r);await Tr.replaceOne({_id:e},{value:t,expire:n,timestamp:s},{upsert:!0})}("presets_hash",Lr,300),await async function(e,t){if(1!==(await Tr.deleteOne({_id:e,value:t})).deletedCount)throw new Error("Lock expired")}("presets_hash_lock",r)),kr=e+(5e3-e%5e3)}async function Jr(){return Date.now()>kr&&await Br(),Lr}function Hr(e,t,r,s,n){const i=Pr.get(e);if(!i)throw new Error("Cache snapshot does not exist");const a={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in a){let e;return(null==r?void 0:r.id)?e=r.id:n&&(e=n(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),le(a[t],e)}return null}const o=Nt(i.config[t],r,s,n);return Array.isArray(o)?null:o}function zr(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.users}function Kr(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.ui}function Zr(e){const t=(e=e.trim()).split(" ",1)[0],r={method:t};return Object.assign(r,function(e){const t={},r=e.split(",");let s;for(;null!=(s=r.shift());){const e=s.split("=",1)[0];if(e.length===s.length){if(!s.trim())continue;throw new Error("Unable to parse auth header")}let n=s.slice(e.length+1);if(/^\s*"/.test(n)){for(;!/[^\\]"\s*$/.test(n);){const e=r.shift();if(null==e)throw new Error("Unable to parse auth header");n+=","+e}try{n=JSON.parse(n)}catch(e){throw new Error("Unable to parse auth header")}}else n=n.trim();t[e.trim()]=n}return t}(e.slice(t.length+1))),r}function Xr(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function Qr(e,t,r,s,n,i){const a=A.randomBytes(8).toString("hex"),o="00000001";let l;i.qop&&(l=-1!==i.qop.indexOf(",")?"auth":i.qop);const u=function(e,t,r,s,n,i,a,o,l,u){const c=A.createHash("md5");c.update(e).update(":").update(t).update(":").update(r);const f=c.digest("hex"),p=A.createHash("md5");if(p.update(n).update(":").update(i),"auth-int"===a){const e=A.createHash("md5").update(o||"").digest("hex");p.update(":").update(e)}const d=p.digest("hex"),h=A.createHash("md5");return h.update(f).update(":").update(s),a&&h.update(":").update(u).update(":").update(l).update(":").update(a),h.update(":").update(d),h.digest("hex")}(e,i.realm,t,i.nonce,s,r,l,n,a,o);let c=`Digest username="${e}"`;return c+=`,realm="${i.realm}"`,c+=`,nonce="${i.nonce}"`,c+=`,uri="${r}"`,i.algorithm&&(c+=`,algorithm=${i.algorithm}`),l&&(c+=`,qop=${l},nc=${o},cnonce="${a}"`),c+=`,response="${u}"`,i.opaque&&(c+=`,opaque="${i.opaque}"`),c}function Yr(e){return new Promise(((t,r)=>{A.randomBytes(e,((e,s)=>{e?r(e):t(s.toString("hex"))}))}))}function es(e,t){return new Promise(((r,s)=>{A.pbkdf2(e,t,1e4,128,"sha512",((e,t)=>{e?s(e):r(t.toString("hex"))}))}))}const ts=+le("EXT_TIMEOUT"),rs={},ss=new Map;function ns(e){return new Promise((t=>{const r=Date.now()+5e3;e.kill();const s=setInterval((()=>{e.connected?Date.now()>r&&(e.kill("SIGKILL"),clearInterval(s),t()):(clearInterval(s),t())}),100)}))}async function is(){await Promise.all(Object.entries(rs).map((([e,t])=>(delete rs[e],ns(t)))))}const as=new Set(["true","True","TRUE","false","False","FALSE","null","Null","NULL"]);function os(e){return!/[^\t\n\x20-\x7e\x85\u{a0}-\u{d7ff}\u{e000}-\u{fffd}\u{10000}-\u{10ffff}]/u.test(e)}function ls(e){return e&&os(e)?/^[\s-?:,[\]{}#&$!|>'"%@`]|: | #|[\n,[\]{}]|\s$/.test(e)?JSON.stringify(e):e:JSON.stringify(e)}function us(e,t,r="",s=""){if(null==e)return void t.push(`${r}null`);if("number"==typeof e||"boolean"==typeof e)return void t.push(`${r}${JSON.stringify(e)}`);if(e instanceof Date)return void t.push(`${r}${e.toJSON()}`);if("string"==typeof e)return void function(e,t,r,s){if(/^\s*$/.test(e)||as.has(e)||!os(e))return void t.push(r+JSON.stringify(e));s||(s="  ");const n=e.split("\n");if(n.length>1){let i="",a="-";if((n.find((e=>e))||"").startsWith(" ")&&(i=`${"  ".length}`),n[n.length-1]||(n.pop(),a=n[n.length-1]?"":"+"),/^\s+$/.test(n[n.length-1]))return void t.push(r+JSON.stringify(e));let o=!1;const l=n.map((e=>{const t=function(e){if(e.length<=80)return[e];if(e.startsWith(" "))return[e];const t=[];let r=0,s=0;for(let n=1;n<e.length-1;++n){if(" "!==e[n])continue;if(" "===e[n+1]){for(n+=2;" "===e[n];)++n;continue}if(n<=r+80){s=n;continue}const i=s>r?s:n;t.push(e.slice(r,i)),r=i+1,s=n}return s>r&&e.length>r+80&&(t.push(e.slice(r,s)),r=s+1),t.push(e.slice(r)),t}(e);return t.length>1&&(o=!0),t}));if(!o)return void t.push(`${r}|${i}${a}`,...n.map((e=>e?s+e:e)));t.push(`${r}>${i}${a}`),t.push(...l[0].map((e=>s+e)));for(let e=1;e<l.length;++e)l[e-1][0]&&!l[e-1][0].startsWith(" ")&&t.push(""),t.push(...l[e].map((e=>s+e)))}else/^[\s-?:,[\]{}#&$!|>'"%@`]|: | #|\s$/.test(e)||parseFloat(e)===+e?t.push(r+JSON.stringify(e)):t.push(r+e)}(e,t,r,s);if(Array.isArray(e)){if(!e.length)return void t.push(r+"[]");if(!r||r.endsWith("- ")){us(e[0],t,r+"- ",s+"  "),r=s+"- ",s+="  ";for(let n=1;n<e.length;++n)us(e[n],t,r,s)}else{t.push(r),r=s+"- ",s+="  ";for(let n=0;n<e.length;++n)us(e[n],t,r,s)}return}const n=Object.entries(e).filter((e=>void 0!==e[1]));if(n.length)if(!r||r.endsWith("- ")){us(n[0][1],t,r+`${ls(n[0][0])}: `,s+"  "),r=s,s+="  ";for(let e=1;e<n.length;++e)us(n[e][1],t,r+`${ls(n[e][0])}: `,s)}else{t.push(r),r=s,s+="  ";for(let e=0;e<n.length;++e)us(n[e][1],t,r+`${ls(n[e][0])}: `,s)}else t.push(r+"{}")}function cs(e){if(void 0===e)return;const t=[];return us(e,t),t.join("\n")+"\n"}const fs=""+le("DEBUG_FILE"),ps=""+le("DEBUG_FORMAT"),ds=new WeakMap;function hs(e){let t=ds.get(e);return t||(t=new Date,ds.set(e,t)),t}function ms(e,r,s,n){if(!fs)return;const i={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:r,remotePort:s,body:n};if("yaml"===ps)t.appendFileSync(fs,"---\n"+cs(i));else{if("json"!==ps)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(fs,JSON.stringify(i)+"\n")}}async function gs(e,t){let r,s;const n=await It(e,{},0,(async e=>{if(!r&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:r}=await(n=e.slice(2),new Promise((e=>{const t=n[0],r=B.randomBytes(8).toString("hex");if(ss.set(r,e),!rs[t]){const s=O.spawn(re+"/bin/genieacs-ext",[t],{stdio:["ignore","pipe","pipe","ipc"]});rs[t]=s,s.on("error",(n=>{rs[t]===s&&(ss.delete(r)&&e({fault:{code:n.name,message:n.message},value:null}),ns(rs[t]),delete rs[t])})),s.on("disconnect",(()=>{rs[t]===s&&delete rs[t]})),s.on("message",(e=>{const t=ss.get(e[0]);t&&(ss.delete(e[0]),setTimeout((()=>{t({fault:e[1],value:e[2]})})))})),z.default.createInterface(s.stdout).on("line",(e=>{Le({message:`Ext ${t}(${s.pid}): ${e}`})})),z.default.createInterface(s.stderr).on("line",(e=>{ke({message:`Ext ${t}(${s.pid}): ${e}`})}))}return setTimeout((()=>{ss.delete(r)&&e({fault:{code:"timeout",message:"Extension timed out"},value:null})}),ts),!!rs[t].connected&&rs[t].send([r,n.slice(1)])})));return t?null:r}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(r=e[2]||"",s=e[3]||""),t}var n;return e}));return[r,s,n]}function vs(e,r,s,n){return new Promise(((i,a)=>{const o=R.get(e,r,(r=>{r.resume(),i({statusCode:r.statusCode,headers:r.headers}),s&&(function(e,r,s,n,i){if(!fs)return;const a=new Date,o=e.socket,l={event:"outgoing HTTP request",timestamp:a,remoteAddress:o.remoteAddress,deviceId:r,connection:hs(o),remotePort:n.port,method:s,url:n.pathname+n.search,headers:e.getHeaders(),body:i};if("yaml"===ps)t.appendFileSync(fs,"---\n"+cs(l));else{if("json"!==ps)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(fs,JSON.stringify(l)+"\n")}}(o,n,"GET",e,null),function(e,r,s){if(!fs)return;const n={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.socket.remoteAddress,deviceId:r,connection:hs(e.socket),statusCode:e.statusCode,headers:e.headers,body:s};if("yaml"===ps)t.appendFileSync(fs,"---\n"+cs(n));else{if("json"!==ps)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(fs,JSON.stringify(n)+"\n")}}(r,n,null))})).on("error",(r=>{o.destroy(),a(r),s&&function(e,r,s,n,i){if(!fs)return;const a={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:n.hostname,deviceId:r,connection:null,remotePort:n.port,method:s,url:n.pathname+n.search,headers:e.getHeaders(),error:i.message};if("yaml"===ps)t.appendFileSync(fs,"---\n"+cs(a));else{if("json"!==ps)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(fs,JSON.stringify(a)+"\n")}}(o,n,"GET",e,r)})).on("timeout",(()=>{o.destroy()}))}))}async function ys(e,t){if(!t){const r=await nt.devices.findOne({_id:e});if(!r)throw new Error("No such device");t=Qt(r)}let r,s,n,i;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(r=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(r=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],n=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],i=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const a=new URL(r).hostname,o=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]&&"string"==typeof e[1]){let r=e[1];if("id"===r)r="DeviceID.ID";else if("serialNumber"===r)r="DeviceID.SerialNumber";else if("productClass"===r)r="DeviceID.ProductClass";else if("oui"===r)r="DeviceID.OUI";else{if("remoteAddress"===r)return a;if("username"===r)return n;if("password"===r)return i}const s=t[r];if(null==s?void 0:s.value)return s.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return a;if("USERNAME"===e[1])return n;if("PASSWORD"===e[1])return i}return e},l=await Jr(),u=Date.now(),c=+Hr(l,"cwmp.udpConnectionRequestPort",{},u,o),f=+Hr(l,"cwmp.connectionRequestTimeout",{},u,o),p=!!Hr(l,"cwmp.connectionRequestAllowBasicAuth",{},u,o);let d=function(e,t){const r=Pr.get(e);if(!r)throw new Error("Cache snapshot does not exist");return r.config[t]}(l,"cwmp.connectionRequestAuth");void 0===d&&(d=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),d=Nt(d,{},u,o);const h=!!Hr(l,"cwmp.debug",{},u,o);let m=Promise.resolve(!1);if(s)try{const t=new URL("udp://"+s);m=async function(e,t,r,s=0,n,i){const a=Date.now(),o=H.createSocket({type:"udp4",reuseAddr:!0});let l,u;for(s&&o.bind({port:s,exclusive:!0}),[l,u,r]=await gs(r,null),null==l&&(l=""),null==u&&(u="");null!=l&&null!=u;){const s=Math.trunc(a/1e3),c=Math.trunc(4294967295*Math.random()),f=B.randomBytes(8).toString("hex"),p=B.createHmac("sha1",u).update(`${s}${c}${l}${f}`).digest("hex"),d=`GET http://${e}:${t}?ts=${s}&id=${c}&un=${l}&cn=${f}&sig=${p} HTTP/1.1\r\nHost: ${e}:${t}\r\n\r\n`,h=Buffer.from(d);for(let r=0;r<3;++r)await new Promise(((r,s)=>{o.send(h,0,h.length,t,e,(a=>{a?s(a):r(),n&&ms(e,i,t,d)}))}));[l,u,r]=await gs(r,null)}o.close()}(t.hostname,parseInt(t.port||"80"),d,c,h,e).then((()=>!0),(()=>!1))}catch(e){}const g=await async function(e,t,r,s,n,i){const a=new E.URL(e);if("http:"!==a.protocol)return"Invalid connection request URL or protocol";const o={agent:new R.Agent({maxSockets:1,keepAlive:!0,timeout:s})};let l,u,c;for(;!l||null!=u&&null!=c;){let e,s=o;if(l)if("Basic"===l.method){if(!r)return"Basic HTTP authentication not allowed";s=Object.assign({headers:{Authorization:Xr(u||"",c||"")}},o)}else{if("Digest"!==l.method)return"Unrecognized auth method";s=Object.assign({headers:{Authorization:Qr(u,c,a.pathname+a.search,"GET",null,l)}},o)}try{e=await vs(a,s,n,i)}catch(t){if(l)try{e=await vs(a,s,n,i)}catch(e){return`Connection request error: ${e.message}`}return"ECONNRESET"===t.code||"ECONNREFUSED"===t.code?"Device is offline":`Connection request error: ${t.message}`}if(200===e.statusCode||204===e.statusCode)return"";if(503===e.statusCode)return"Device is offline";if(401!==e.statusCode||!e.headers["www-authenticate"])return`Connection request error: Unexpected status code ${e.statusCode}`;try{l=Zr(e.headers["www-authenticate"])}catch(e){return"Connection request error: Error parsing www-authenticate header"}[u,c,t]=await gs(t,!1)}return"Connection request error: Incorrect connection request credentials"}(r,d,p,f,h,e);return await m?"":g}async function ws(e,t,r){const s=Date.now();if((await nt.devices.findOne({_id:e},{projection:{_lastInform:1}}))._lastInform.getTime()>t)return!0;return!!await Dr(`cwmp_session_${e}`)||!(r<500)&&(await new Promise((e=>setTimeout(e,500))),ws(e,t,r-=Date.now()-s))}async function _s(e,t){const r=Date.now();return!await Dr(`cwmp_session_${e}`)||!(t<500)&&(await new Promise((e=>setTimeout(e,500))),_s(e,t-=Date.now()-r))}function As(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(e.expiry instanceof Date||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`);break;case"refreshObject":if("string"!=typeof e.objectName)throw new Error("Missing 'objectName' property");break;case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property");break;case"provisions":if(!Array.isArray(e.provisions)||!e.provisions.every((e=>e.every((e=>null==e||["boolean","number","string"].includes(typeof e))))))throw new Error("Invalid 'provisions' property");break;case"reboot":case"factoryReset":break;default:throw new Error("Invalid task name")}return e}async function Ss(e,t){switch(e){case"devices":await async function(e){await Promise.all([nt.tasks.deleteMany({device:e}),nt.devices.deleteOne({_id:e}),nt.faults.deleteMany({_id:{$regex:`^${He(e)}\\:`}}),nt.operations.deleteMany({_id:{$regex:`^${He(e)}\\:`}}),$r(`${e}_tasks_faults_operations`)])}(t);break;case"files":await Or(t);break;case"faults":await async function(e){const t=e.split(":",1)[0],r=e.slice(t.length+1);await Promise.all([Nr(e),r.startsWith("task_")?Ir(new g.ObjectId(r.slice(5))):null]),await $r(`${t}_tasks_faults_operations`)}(t);break;case"provisions":await function(e){return wr("provisions",e)}(t);break;case"presets":await function(e){return wr("presets",e)}(t);break;case"virtualParameters":await function(e){return wr("virtualParameters",e)}(t);break;case"config":await function(e){return wr("config",e)}(t);break;case"permissions":await function(e){return wr("permissions",e)}(t);break;case"users":await function(e){return wr("users",e)}(t)}await $r("presets_hash")}async function bs(e,t,r,s){for(const r of t)delete r._id,r.device=e;const n=(t=await async function(e){if(e&&!Array.isArray(e))e=[e];else if(!(null==e?void 0:e.length))return e||[];for(const t of e)As(t),t.uniqueKey&&await nt.tasks.deleteOne({device:t.device,uniqueKey:t.uniqueKey});await nt.tasks.insertMany(e);for(const t of e)t._id=t._id.toString();return e}(t)).map((e=>({_id:e._id,status:"pending"}))),i=Date.now();if(!await _s(e,3e4))return await Promise.all(n.map((e=>Ir(new g.ObjectId(e._id))))),{connectionRequest:"Session took too long to complete",tasks:n};await $r(`${e}_tasks_faults_operations`);const a=await ys(e,s);if(a)return await Promise.all(n.map((e=>Ir(new g.ObjectId(e._id))))),{connectionRequest:a,tasks:n};if(!await ws(e,i,r))return await Promise.all(n.map((e=>Ir(new g.ObjectId(e._id))))),{connectionRequest:"No contact from CPE",tasks:n};if(!await _s(e,12e4))return await Promise.all(n.map((e=>Ir(new g.ObjectId(e._id))))),{connectionRequest:"Session took too long to complete",tasks:n};const o=[];for(const t of n)o.push(vr("tasks",["=",["PARAM","_id"],t._id])),o.push(vr("faults",["=",["PARAM","_id"],`${e}:task_${t._id}`]));const l=await Promise.all(o);for(const[e,t]of n.entries())l[2*e]?l[2*e+1]&&(t.status="fault",t.fault=l[2*e+1][0]):t.status="done";return await Promise.all(n.map((e=>Ir(new g.ObjectId(e._id))))),{connectionRequest:"OK",tasks:n}}async function Es(e,t,r){"presets"===e?await _r(t,r):"provisions"===e?await Ar(t,r):"virtualParameters"===e?await function(e,t){var r;t.script||(t.script="");try{new v.Script(`"use strict";(function(){\n${t.script}\n})();`,{filename:e,lineOffset:-1})}catch(t){return(null===(r=t.stack)||void 0===r?void 0:r.startsWith(`${e}:`))?Promise.reject(new Error(`${t.name} at ${t.stack.split("\n",1)[0]}`)):Promise.reject(t)}return yr("virtualParameters",e,t)}(t,r):"config"===e?await Sr(t,r):"permissions"===e?await br(t,r):"users"===e&&(delete r.password,delete r.salt,await Er(t,r)),await $r("presets_hash")}function Os(e,t,r){return new Promise(((s,n)=>{const i=zr(e)[t];(null==i?void 0:i.password)?es(r,i.salt).then((e=>{e===i.password?s(!0):s(!1)})).catch(n):s(null)}))}function Ns(e,t){if(!function(e){return!!/^[a-zA-Z0-9\-.:[\]-]+$/.test(e)||/^[a-zA-Z0-9\-.:[\]-]+$/.test(E.domainToASCII(e))}(e))return t(new Error("Invalid host"));let s;switch(e=e.replace("[","").replace("]",""),r.platform()){case"linux":s=`ping -w 1 -i 0.2 -c 3 ${e}`;break;case"freebsd":s=`ping -t 1 -c 3 ${e}`;break;default:return t(new Error("Platform not supported"))}O.exec(s,((e,s)=>{if(e)return t(e);const n=function(e,t){let r,s,n;switch(e){case"linux":r=/(\d+) packets transmitted, (\d+) .*received, ([\d.]+)% .*loss[^]*= ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,s=/(\d+) packets transmitted, (\d+) .*received, ([\d.]+)% .*loss/;break;case"freebsd":r=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/}const i=t.match(r);if(i)n={packetsTransmitted:+i[1],packetsReceived:+i[2],packetLoss:+i[3],min:+i[4],avg:+i[5],max:+i[6],mdev:+i[7]};else{const e=t.match(s);e&&(n={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}return n}(r.platform(),s);return t(e,n,s)}))}const Is=new M.default,Cs=Is;function Ts(e){e.message+=" not authorized",Ue(e)}const Ds={devices:"DeviceID.ID",presets:"_id",provisions:"_id",files:"_id",virtualParameters:"_id",config:"_id",permissions:"_id",users:"_id",faults:"_id",tasks:"_id"},$s={devices:1,presets:3,provisions:3,files:1,virtualParameters:3,config:3,permissions:3,users:3,faults:1,tasks:0};function xs(e){return Array.isArray(e)?e[e.length-1]:e}Is.get("/devices/:id.csv",(async e=>{const t=e.state.authorizer,r={message:"Query device (CSV)",context:e,id:e.params.id},s=Ct(t.getFilter("devices",2),["=",["PARAM",Ds.devices],e.params.id]);if(!t.hasAccess("devices",2))return Ts(r),void(e.status=403);const n=await gr("devices",s);if(n[0]){e.type="text/csv",e.attachment(`device-${e.params.id}-${(new Date).toISOString().replace(/[:.]/g,"")}.csv`),e.body=new m.PassThrough,e.body.write("Parameter,Object,Object timestamp,Writable,Writable timestamp,Value,Value type,Value timestamp,Notification,Notification timestamp,Access list,Access list timestamp\n");for(const t of Object.keys(n[0]).sort()){const r=n[0][t];let s="",i="";r.value&&(s=r.value[0],i=r.value[1],"xsd:dateTime"===i&&"number"==typeof s&&(s=new Date(s).toJSON()));const a=[t,r.object,new Date(r.objectTimestamp).toJSON(),r.writable,new Date(r.writableTimestamp).toJSON(),`"${String(s).replace(/"/g,'""')}"`,i,new Date(r.valueTimestamp).toJSON(),r.notification,new Date(r.notificationTimestamp).toJSON(),r.accessList?r.accessList.join(", "):"",new Date(r.accessListTimestamp).toJSON()];e.body.write(a.map((e=>null!=e?e:"")).join(",")+"\n")}e.body.end(),je(r)}else e.status=404}));for(const[e,t]of Object.entries($s))Is.head(`/${e}`,(async t=>{const r=t.state.authorizer;let s=r.getFilter(e,1);t.request.query.filter&&(s=Ct(s,tt(xs(t.request.query.filter))));const n={message:`Count ${e}`,context:t,filter:t.request.query.filter,count:null};if(!r.hasAccess(e,1))return Ts(n),void(t.status=403);"tasks"!==e&&"faults"!==e||(s=Ct(s,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]]));const i=await vr(e,s);t.set("X-Total-Count",`${i}`),t.body="",n.count=i,je(n)})),Is.get(`/${e}`,(async t=>{const r=t.state.authorizer,s={};let n=r.getFilter(e,2);t.request.query.filter&&(n=Ct(n,tt(xs(t.request.query.filter)))),t.request.query.limit&&(s.limit=+t.request.query.limit),t.request.query.skip&&(s.skip=+t.request.query.skip),t.request.query.sort&&(s.sort=JSON.parse(xs(t.request.query.sort))),t.request.query.projection&&(s.projection=xs(t.request.query.projection).split(",").reduce(((e,t)=>Object.assign(e,{[t]:1})),{}));const i={message:`Query ${e}`,context:t,filter:t.request.query.filter,limit:s.limit,skip:s.skip,sort:s.sort,projection:s.projection};if(!r.hasAccess(e,2))return Ts(i),void(t.status=403);"tasks"!==e&&"faults"!==e||(n=Ct(n,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]])),t.body=new m.PassThrough,t.type="application/json";let a=0;t.body.write("[\n");for await(const r of gr(e,n,s))t.body.write((a++?",":"")+JSON.stringify(r)+"\n");t.body.end("]"),je(i)})),Is.get(`/${e}.csv`,(async t=>{const r=t.state.authorizer,s={projection:{}};let n=r.getFilter(e,2);t.request.query.filter&&(n=Ct(n,tt(xs(t.request.query.filter)))),t.request.query.limit&&(s.limit=+t.request.query.limit),t.request.query.skip&&(s.skip=+t.request.query.skip),t.request.query.sort&&(s.sort=JSON.parse(xs(t.request.query.sort)));const i={message:`Query ${e} (CSV)`,context:t,filter:t.request.query.filter,limit:s.limit,skip:s.skip,sort:s.sort};if(!r.hasAccess(e,2))return Ts(i),void(t.status=403);const a=JSON.parse(xs(t.request.query.columns)),o=Date.now();for(const[e,t]of Object.entries(a)){const r=Nt(tt(t),null,o);a[e]=r;for(const e of Dt(r))"string"==typeof e&&(s.projection[e]=1)}"tasks"!==e&&"faults"!==e||(n=Ct(n,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]])),t.body=new m.PassThrough,t.type="text/csv",t.attachment(`${e}-${new Date(o).toISOString().replace(/[:.]/g,"")}.csv`),t.body.write(Object.keys(a).map((e=>`"${e.replace(/"/,'""')}"`))+"\n");for await(const r of gr(e,n,s)){const s=Object.values(a).map((t=>{const s=Nt(t,r,null,(s=>{if(Array.isArray(s))if("PARAM"===s[0]){if("devices"===e){if("Tags"===s[1]){const e=[];for(const t in r)t.startsWith("Tags.")&&e.push(Ke(t.slice(5)));return e.join(", ")}if(s===t){const e=r[s[1]];if(e&&e.value&&"xsd:dateTime"===e.value[1]&&"number"==typeof e.value[0])return new Date(e.value[0]).toJSON()}}else if("faults"===e&&"detail"===s[1])return cs(r.detail)}else if("FUNC"===s[0]&&"DATE_STRING"===s[1]&&s[2]&&!Array.isArray(s[2]))return new Date(s[2]).toJSON();return s}));return Array.isArray(s)||null==s?"":"string"==typeof s?`"${s.replace(/"/g,'""')}"`:s}));t.body.write(s.join(",")+"\n")}t.body.end(),je(i)})),Is.head(`/${e}/:id`,(async t=>{const r=t.state.authorizer,s={message:`Count ${e}`,context:t,filter:`${Ds[e]} = "${t.params.id}"`},n=Ct(r.getFilter(e,2),["=",["PARAM",Ds[e]],t.params.id]);if(!r.hasAccess(e,2))return Ts(s),void(t.status=403);await vr(e,n)?(je(s),t.body=""):t.status=404})),Is.get(`/${e}/:id`,(async t=>{const r=t.state.authorizer,s={message:`Query ${e}`,context:t,filter:`${Ds[e]} = "${t.params.id}"`},n=Ct(r.getFilter(e,2),["=",["PARAM",Ds[e]],t.params.id]);if(!r.hasAccess(e,2))return Ts(s),void(t.status=403);const{value:i}=await gr(e,n).next();i?(je(s),t.body=i):t.status=404})),1&t&&Is.delete(`/${e}/:id`,(async t=>{const r=t.state.authorizer,s={message:`Delete ${e}`,context:t,id:t.params.id},n=Ct(r.getFilter(e,3),["=",["PARAM",Ds[e]],t.params.id]);if(!r.hasAccess(e,3))return Ts(s),void(t.status=403);const{value:i}=await gr(e,n).next();if(!i)return void(t.status=404);if(!r.getValidator(e,i)("delete"))return Ts(s),void(t.status=403);await Ss(e,t.params.id),je(s),t.body=""})),2&t&&Is.put(`/${e}/:id`,(async t=>{const r=t.state.authorizer,s=t.params.id,n={message:`Put ${e}`,context:t,id:s};if(!r.hasAccess(e,3))return Ts(n),void(t.status=403);const i=t.request.body;if(!r.getValidator(e,i)("put"))return Ts(n),void(t.status=403);try{await Es(e,s,i)}catch(e){return n.message+=" failed",Ue(n),t.body=`${e.name}: ${e.message}`,void(t.status=400)}je(n),t.body=""}));Is.get("/blob/files/:id",(async e=>{const t=e.state.authorizer,r="files",s=e.params.id,n={message:"Download files",context:e,id:s},i=Ct(t.getFilter(r,2),["=",["PARAM",Ds.files],e.params.id]);if(!t.hasAccess(r,2))return Ts(n),void(e.status=403);var a;await vr(r,i)?(je(n),e.body=(a=s,mr.openDownloadStreamByName(a)),e.attachment(s)):e.status=404})),Is.put("/files/:id",(async e=>{const t=e.state.authorizer,r="files",s=e.params.id,n={message:"Upload files",context:e,id:s,metadata:null};if(!t.hasAccess(r,3))return Ts(n),void(e.status=403);const i={fileType:xs(e.request.headers["metadata-filetype"])||"",oui:xs(e.request.headers["metadata-oui"])||"",productClass:xs(e.request.headers["metadata-productclass"])||"",version:xs(e.request.headers["metadata-version"])||""};if(!t.getValidator(r,i)("put"))return Ts(n),void(e.status=403);try{await Or(s)}catch(e){}await function(e,t,r){return new Promise(((s,n)=>{const i=mr.openUploadStreamWithId(e,e,{metadata:t});let a=!1;r.on("end",(()=>{a=!0})),r.on("close",(()=>{a||i.destroy(new Error("Stream closed prematurely"))})),r.on("error",(e=>{i.destroy(e)})),i.on("error",n),i.on("finish",s),r.pipe(i)}))}(s,i,e.req),n.metadata=i,je(n),e.body=""})),Is.post("/devices/:id/tasks",(async e=>{const t=e.state.authorizer,r={message:"Commit tasks",context:e,deviceId:e.params.id,tasks:null},s=Ct(t.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!t.hasAccess("devices",3))return Ts(r),void(e.status=403);const{value:n}=await gr("devices",s).next();if(!n)return void(e.status=404);const i=t.getValidator("devices",n);for(const t of e.request.body)if(!i("task",t))return Ts(r),void(e.status=403);const a=Hr(e.state.configSnapshot,"cwmp.deviceOnlineThreshold",{},Date.now(),(e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]){const t=n[e[1]];if(null==t?void 0:t.value)return t.value[0]}else if("FUNC"===e[0]&&"REMOTE_ADDRESS"===e[1]){for(const e of["InternetGatewayDevice","Device"]){const t=n[`${e}.ManagementServer.ConnectionRequestURL`];if(null==t?void 0:t.value)return new URL(t.value[0]).hostname}return null}return e})),o=e.socket.timeout;o&&e.socket.setTimeout(0);const l=await bs(e.params.id,e.request.body,a,n);o&&e.socket.setTimeout(o),r.tasks=l.tasks.map((e=>e._id)).join(","),je(r),e.set("Connection-Request",l.connectionRequest),e.body=l.tasks})),Is.post("/devices/:id/tags",(async e=>{const t=e.state.authorizer,r={message:"Update tags",context:e,deviceId:e.params.id,tags:e.request.body},s=Ct(t.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!t.hasAccess("devices",3))return Ts(r),void(e.status=403);const{value:n}=await gr("devices",s).next();if(!n)return void(e.status=404);if(!t.getValidator("devices",n)("tags",e.request.body))return Ts(r),void(e.status=403);try{await async function(e,t){const r=[],s=[];for(let[e,n]of Object.entries(t))e=e.trim(),n?r.push(e):s.push(e);const n={};(null==r?void 0:r.length)&&(n.$addToSet={_tags:{$each:r}}),(null==s?void 0:s.length)&&(n.$pullAll={_tags:s}),await nt.devices.updateOne({_id:e},n)}(e.params.id,e.request.body)}catch(t){return r.message+=" failed",Ue(r),e.body=t.message,void(e.status=400)}je(r),e.body=""})),Is.get("/ping/:host",(async e=>{if(e.state.user)return new Promise((t=>{Ns(e.params.host,((r,s)=>{s?e.body=s:(e.status=500,e.body=r?`${r.name}: ${r.message}`:"Unknown error"),t()}))}));e.status=401})),Is.put("/users/:id/password",(async e=>{const t=e.state.authorizer,r=e.params.id,s={message:"Change password",context:e,username:r};if(e.state.user){if(!t.hasAccess("users",3))return Ts(s),void(e.status=403)}else if(!await Os(e.state.configSnapshot,r,e.request.body.authPassword))return Ts(s),e.status=401,void(e.body="Authentication failed, check your username and password");const n=Ct(t.getFilter("users",3),["=",["PARAM",Ds.users],r]),{value:i}=await gr("users",n).next();if(!i)return void(e.status=404);const a=e.request.body.newPassword;if(e.state.user){if(!t.getValidator("users",i)("password",{password:a}))return Ts(s),void(e.status=403)}const o=await Yr(64),l=await es(a,o);await Er(r,{password:l,salt:o}),await $r("presets_hash"),je(s),e.body=""}));class Rs{constructor(e){this.permissionSets=e,this.validatorCache=new WeakMap,this.hasAccessCache=new Map,this.getFilterCache=new Map}hasAccess(e,t){const r=`${e}-${t}`;if(this.hasAccessCache.has(r))return this.hasAccessCache.get(r);let s=!1;for(const r of this.permissionSets)for(const n of r)if(n[e]&&n[e].access>=t){s=!0;break}return this.hasAccessCache.set(r,s),s}getFilter(e,t){const r=`${e}-${t}`;if(this.getFilterCache.has(r))return this.getFilterCache.get(r);let s=null;for(const r of this.permissionSets)for(const n of r)n[e]&&n[e].access>=t&&(s=Tt(s,n[e].filter));return this.getFilterCache.set(r,s),s}getValidator(e,t){if(this.validatorCache.has(t))return this.validatorCache.get(t);const r=[];for(const t of this.permissionSets)for(const s of t)s[e]&&s[e].access>=3&&s[e].validate&&r.push(s[e].validate);const s=(s,n,i)=>{if(!r.length)return!1;const a={mutationType:s,mutation:n,resourceType:e,object:t,options:i},o=Nt(r.length>1?["OR",r]:r[0],(e=>{const t=e.split(".",1)[0];e=e.slice(t.length+1);let r=null;if(["mutation","options"].includes(t)){r=a[t];for(const t of e.split("."))if(r=null!=r&&"object"!=typeof r?null:r[t],null==r)break}else a[t]&&(r=e?a[t][e]:a[t]);return r}),Date.now());return!Array.isArray(o)&&!!o};return this.validatorCache.set(t,s),s}getPermissionSets(){return this.permissionSets}}const Ps='\nconst now = Date.now();\n\n// Clear cached data model to force a refresh\nclear("Device", now);\nclear("InternetGatewayDevice", now);\n'.trim(),Ls='\nconst hourly = Date.now(3600000);\n\n// Refresh basic parameters hourly\ndeclare("InternetGatewayDevice.DeviceInfo.HardwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.DeviceInfo.SoftwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID", {path: hourly, value: hourly});\n// Don\'t refresh password field periodically because CPEs always report blank passowrds for security reasons\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase", {path: hourly, value: 1});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress", {path: hourly, value: hourly});\n'.trim(),ks='\n// Device ID as user name\nconst username = declare("DeviceID.ID", {value: 1}).value[0]\n\n// Password will be fixed for a given device because Math.random() is seeded with device ID by default.\nconst password = Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER).toString(36);\n\nconst informInterval = 300;\n\n// Refresh values daily\nconst daily = Date.now(86400000);\n\n// Unique inform offset per device for better load distribution\nconst informTime = daily % 86400000;\n\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n\ndeclare("Device.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("Device.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("Device.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("Device.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("Device.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n'.trim();async function Ms(){const e=await Jr(),t=zr(e),r=function(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.presets}(e),s=Kr(e);return{users:!Object.keys(t).length,presets:!r.length,filters:!Object.keys(s.filters).length,device:!Object.keys(s.device).length,index:!Object.keys(s.index).length,overview:!Object.keys(s.overview).length}}const qs="1.2.9+20240918074432";let js=new Map,Us=new Map;const Ws=new WeakMap;function Fs(e){if(null===e)return"null";if(void 0===e)return"undefined";const t=typeof e;if("number"===t||"boolean"===t||"string"===t)return`${t}:${e}`;if("function"!==t&&"object"!==t)throw new Error(`Cannot memoize ${t} arguments`);let r=Ws.get(e);if(!r){r=`${t}:${Math.trunc(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)}`,Ws.set(e,r)}return r}const Vs=setInterval((()=>{Us=js,js=new Map}),12e4);Vs.unref&&Vs.unref();const Gs=new k.default,Bs=new M.default,Js="coraltelecom.services.app-3be8dd5f-c66b-4b3c-88f5-b2d36c9238dd",Hs=function(e){const t=Fs(e);return(...r)=>{const s=JSON.stringify(r.map(Fs))+t;if(js.has(s))return js.get(s);let n;return Us.has(s)?js.set(s,n=Us.get(s)):(js.set(s,n=e(...r)),n instanceof Promise&&n.catch((()=>{js.delete(s),Us.delete(s)}))),n}}(((e,t)=>{const r=JSON.parse(t),s=function(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.permissions}(e),n=r.map((e=>Object.values(s[e]||{})));return new Rs(n)}));Gs.on("error",((e,t)=>{setTimeout((()=>{if(!(null==t?void 0:t.req.aborted))throw e}))})),Gs.use((async(e,t)=>{const r=await Jr();return e.state.configSnapshot=r,e.set("X-Config-Snapshot",r),e.set("GenieACS-Version",qs),t()})),Gs.use(K.default()),Gs.use(F.default({secret:Js,passthrough:!0,cookie:"session",getToken:function(e){if(e&&e.cookies&&e.cookies.get("session")){const t=e.cookies.get("session");try{const e=JSON.parse(t);if(e&&e.AuthToken)return e.AuthToken}catch(e){console.error("Error parsing session cookie:",e)}}return null},isRevoked:async(e,t)=>!t||"local"!==t.authMethod||!zr(e.state.configSnapshot)[t.username]})),Gs.use((async(e,t)=>{var r;let s=[];if(null===(r=e.state.user)||void 0===r?void 0:r.username){let t;if("local"!==e.state.user.authMethod)throw new Error("Invalid auth method");t=zr(e.state.configSnapshot)[e.state.user.username],s=t.roles||[]}return e.state.authorizer=Hs(e.state.configSnapshot,JSON.stringify(s)),t()})),Bs.post("/checkAuth",(async e=>{const t=e.request.headers.authorization;if(!t||!t.startsWith("Bearer "))return e.status=401,void(e.body={error:"Authorization header missing or invalid",status:0});const r=t.split(" ")[1];try{q.verify(r,Js);e.status=200,e.body={message:"Token verified successfully",status:1}}catch(t){e.status=401,e.body={error:"Invalid token",status:0,message:t.message}}})),Bs.post("/login",(async e=>{const t=e.request.body.username,r=e.request.body.password,s={message:"Log in",context:e,username:t,method:null};await Os(e.state.configSnapshot,t,r)?function(r){s.method=r;const n=q.sign({username:t,authMethod:r},Js,{expiresIn:"10h"}),i={AuthToken:JSON.stringify(n).slice(1,-1)};e.cookies.set("session",JSON.stringify(i),{sameSite:"lax"}),e.body=JSON.stringify(i)}("local"):(e.status=400,e.body="Incorrect Username or Password",s.message+=" failed",Ue(s))})),Bs.post("/logout",(async e=>{e.cookies.set("session"),e.body="",je({message:"Log out",context:e})})),Gs.use((async(e,t)=>("application/octet-stream"===e.request.type&&(e.disableBodyParser=!0),t()))),Gs.use(W.default()),Bs.use("/api",Cs.routes(),Cs.allowedMethods()),Bs.get("/status",(e=>{e.body="OK"})),Bs.get("/init",(async e=>{const t=await Ms();Object.keys(zr(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),e.body=t})),Bs.post("/init",(async e=>{const t=e.request.body;Object.keys(zr(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),await async function(e){const t={},r=[];if(e.users&&(t.permissions=[{role:"admin",resource:"devices",access:3,validate:"true"},{role:"admin",resource:"faults",access:3,validate:"true"},{role:"admin",resource:"files",access:3,validate:"true"},{role:"admin",resource:"presets",access:3,validate:"true"},{role:"admin",resource:"provisions",access:3,validate:"true"},{role:"admin",resource:"config",access:3,validate:"true"},{role:"admin",resource:"permissions",access:3,validate:"true"},{role:"admin",resource:"users",access:3,validate:"true"},{role:"admin",resource:"virtualParameters",access:3,validate:"true"}],t.users=[{username:"admin",password:"admin",roles:["admin"]}]),e.filters&&(t.config=(t.config||[]).concat([{_id:"ui.filters.0.label",value:"'Serial number'"},{_id:"ui.filters.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.filters.0.type",value:"'string'"},{_id:"ui.filters.1.label",value:"'Product class'"},{_id:"ui.filters.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.filters.1.type",value:"'string'"},{_id:"ui.filters.2.label",value:"'Tag'"},{_id:"ui.filters.2.type",value:"'tag'"}])),e.device&&(t.config=(t.config||[]).concat([{_id:"ui.device.0.type",value:"'tags'"},{_id:"ui.device.1.type",value:"'ping'"},{_id:"ui.device.2.type",value:"'parameter-list'"},{_id:"ui.device.2.parameters.0.type",value:"'container'"},{_id:"ui.device.2.parameters.0.element",value:"'span.inform'"},{_id:"ui.device.2.parameters.0.label",value:"'Last inform'"},{_id:"ui.device.2.parameters.0.components.0.type",value:"'parameter'"},{_id:"ui.device.2.parameters.0.components.1.chart",value:"'online'"},{_id:"ui.device.2.parameters.0.components.1.type",value:"'overview-dot'"},{_id:"ui.device.2.parameters.0.components.2.type",value:"'summon-button'"},{_id:"ui.device.2.parameters.0.components.2.parameters.0",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.1",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.2",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.3",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.4",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID"},{_id:"ui.device.2.parameters.0.components.2.parameters.5",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase"},{_id:"ui.device.2.parameters.0.components.2.parameters.6",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName"},{_id:"ui.device.2.parameters.0.components.2.parameters.7",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.8",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress"},{_id:"ui.device.2.parameters.0.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.device.2.parameters.1.label",value:"'Serial number'"},{_id:"ui.device.2.parameters.1.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.device.2.parameters.2.label",value:"'Product class'"},{_id:"ui.device.2.parameters.2.parameter",value:"DeviceID.ProductClass"},{_id:"ui.device.2.parameters.3.label",value:"'OUI'"},{_id:"ui.device.2.parameters.3.parameter",value:"DeviceID.OUI"},{_id:"ui.device.2.parameters.4.label",value:"'Manufacturer'"},{_id:"ui.device.2.parameters.4.parameter",value:"DeviceID.Manufacturer"},{_id:"ui.device.2.parameters.5.label",value:"'Hardware version'"},{_id:"ui.device.2.parameters.5.parameter",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.6.label",value:"'Software version'"},{_id:"ui.device.2.parameters.6.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.7.label",value:"'MAC'"},{_id:"ui.device.2.parameters.7.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.MACAddress"},{_id:"ui.device.2.parameters.8.label",value:"'IP'"},{_id:"ui.device.2.parameters.8.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.device.2.parameters.9.label",value:"'WLAN SSID'"},{_id:"ui.device.2.parameters.9.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.device.2.parameters.10.label",value:"'WLAN passphrase'"},{_id:"ui.device.2.parameters.10.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.KeyPassphrase"},{_id:"ui.device.3.type",value:"'parameter-table'"},{_id:"ui.device.3.label",value:"'LAN hosts'"},{_id:"ui.device.3.parameter",value:"InternetGatewayDevice.LANDevice.1.Hosts.Host"},{_id:"ui.device.3.childParameters.0.label",value:"'Host name'"},{_id:"ui.device.3.childParameters.0.parameter",value:"HostName"},{_id:"ui.device.3.childParameters.1.label",value:"'IP address'"},{_id:"ui.device.3.childParameters.1.parameter",value:"IPAddress"},{_id:"ui.device.3.childParameters.2.label",value:"'MAC address'"},{_id:"ui.device.3.childParameters.2.parameter",value:"MACAddress"},{_id:"ui.device.4.type",value:"'container'"},{_id:"ui.device.4.element",value:"'div'"},{_id:"ui.device.4.components.0.components.0",value:"'Faults'"},{_id:"ui.device.4.components.0.element",value:"'h3'"},{_id:"ui.device.4.components.0.type",value:"'container'"},{_id:"ui.device.4.components.1.type",value:"'device-faults'"},{_id:"ui.device.5.type",value:"'container'"},{_id:"ui.device.5.element",value:"'div.container-full-width'"},{_id:"ui.device.5.components.0.components.0",value:"'All parameters'"},{_id:"ui.device.5.components.0.element",value:"'h3'"},{_id:"ui.device.5.components.0.type",value:"'container'"},{_id:"ui.device.5.components.1.type",value:"'all-parameters'"},{_id:"ui.device.6.type",value:"'device-actions'"}])),e.index&&(t.config=(t.config||[]).concat([{_id:"ui.index.0.type",value:"'device-link'"},{_id:"ui.index.0.label",value:"'Serial number'"},{_id:"ui.index.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.index.0.components.0.type",value:"'parameter'"},{_id:"ui.index.1.label",value:"'Product class'"},{_id:"ui.index.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.index.2.label",value:"'Software version'"},{_id:"ui.index.2.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.index.3.label",value:"'IP'"},{_id:"ui.index.3.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.index.4.label",value:"'SSID'"},{_id:"ui.index.4.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.index.5.type",value:"'container'"},{_id:"ui.index.5.label",value:"'Last inform'"},{_id:"ui.index.5.element",value:"'span.inform'"},{_id:"ui.index.5.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.index.5.components.0.type",value:"'parameter'"},{_id:"ui.index.5.components.1.chart",value:"'online'"},{_id:"ui.index.5.components.1.type",value:"'overview-dot'"},{_id:"ui.index.6.type",value:"'tags'"},{_id:"ui.index.6.label",value:"'Tags'"},{_id:"ui.index.6.parameter",value:"Tags"},{_id:"ui.index.6.unsortable",value:"true"},{_id:"ui.index.6.writable",value:"false"}])),e.overview&&(t.config=(t.config||[]).concat([{_id:"ui.overview.charts.online.label",value:"'Online Status'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.color",value:"'#31a354'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.filter",value:"Events.Inform > NOW() - 5 * 60 * 1000"},{_id:"ui.overview.charts.online.slices.1_onlineNow.label",value:"'Online Now'"},{_id:"ui.overview.charts.online.slices.2_past24.color",value:"'#a1d99b'"},{_id:"ui.overview.charts.online.slices.2_past24.filter",value:"Events.Inform > (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000) AND Events.Inform < (NOW() - 5 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.2_past24.label",value:"'Past 24 hours'"},{_id:"ui.overview.charts.online.slices.3_others.color",value:"'#e5f5e0'"},{_id:"ui.overview.charts.online.slices.3_others.filter",value:"Events.Inform < (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.3_others.label",value:"'Others'"},{_id:"ui.overview.groups.online.label",value:"''"},{_id:"ui.overview.groups.online.charts.0",value:"'online'"}])),e.presets&&(t.presets=[{_id:"bootstrap",weight:0,channel:"bootstrap",events:"0 BOOTSTRAP",provision:"bootstrap"},{_id:"default",weight:0,channel:"default",provision:"default"},{_id:"inform",weight:0,channel:"inform",provision:"inform"}],t.provisions=[{_id:"bootstrap",script:Ps},{_id:"default",script:Ls},{_id:"inform",script:ks}]),t.permissions)for(const e of t.permissions)e._id=`${e.role}:${e.resource}:${e.access}`,r.push(br(e._id,e));if(t.users)for(const e of t.users)e.salt=await Yr(64),e.password=await es(e.password,e.salt),e.roles=(e.roles||[]).join(","),e._id=e.username,delete e.username,r.push(Er(e._id,e));if(t.provisions)for(const e of t.provisions)r.push(Ar(e._id,e));if(t.presets)for(const e of t.presets)r.push(_r(e._id,e));if(t.config)for(const e of t.config)r.push(Sr(e._id,e));return await r,$r("presets_hash")}(t),e.body=""})),Bs.get("/",(async e=>{const t=e.state.authorizer.getPermissionSets();let r="";Object.keys(zr(e.state.configSnapshot)).length||(r='<script>window.location.hash = "#!/wizard";<\/script>'),e.body=`<!DOCTYPE html>\n  <html>\n    <head>\n      <title>Auto Provisioning server</title>\n      <link rel="shortcut icon" type="image/png" href="favicon.png" />\n      <link rel="stylesheet" href="app.css">\n      <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">\n    </head>\n    <body>\n    <noscript>GenieACS UI requires JavaScript to work. Please enable JavaScript in your browser.</noscript>\n      <script>\n        window.clientConfig = ${JSON.stringify({ui:Kr(e.state.configSnapshot)})};\n        window.configSnapshot = ${JSON.stringify(e.state.configSnapshot)};\n        window.genieacsVersion = ${JSON.stringify(qs)};\n        window.username = ${JSON.stringify(e.state.user?e.state.user.username:"")};\n        window.permissionSets = ${JSON.stringify(t)};\n      <\/script>\n      <script type="module" src="app.js"><\/script>${r} \n    </body>\n  </html>\n  `})),Gs.use(U.default({gzip:{flush:o.constants.Z_SYNC_FLUSH},deflate:{flush:o.constants.Z_SYNC_FLUSH},br:{flush:o.constants.BROTLI_OPERATION_FLUSH,params:{[o.constants.BROTLI_PARAM_QUALITY]:5}}})),Gs.use(Bs.routes()),Gs.use(j.default(re+"/public"));const zs=Gs.callback();!function(e,t){Ae.hostname=x.hostname(),Ae.pid=process.pid,Ae.name=`genieacs-${e}`,Ae.version=t,Se=le(`${e.toUpperCase()}_LOG_FILE`),be=le(`${e.toUpperCase()}_ACCESS_LOG_FILE`),Se&&(Ne=$.createWriteStream(null,{fd:$.openSync(Se,"a")}),Ie=$.fstatSync(Ne.fd)),be&&(Ce=$.createWriteStream(null,{fd:$.openSync(be,"a")}),Te=$.fstatSync(Ce.fd));const r=process.env.JOURNAL_STREAM;if(r){const[e,t]=r.split(":").map(parseInt);Ee=Ie.dev===e&&Ie.ino===t,Oe=Te.dev===e&&Te.ino===t}(Se||be)&&setTimeout(De,6e4-Date.now()%6e4).unref()}("ui",qs);const Ks=le("UI_INTERFACE"),Zs=le("UI_PORT");function Xs(){setTimeout(Qs,5e3).unref(),Promise.all([lt(),is(),Je.disconnect()]).catch(Qs)}function Qs(){is().finally((()=>{process.exit(1)}))}if(Je){const e=le("UI_SSL_KEY"),t=le("UI_SSL_CERT"),r={port:Zs,host:Ks,ssl:e&&t?{key:e,cert:t}:null,timeout:3e4};process.on("unhandledRejection",(e=>{throw e})),process.on("uncaughtException",(e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(Me({message:"Uncaught exception",exception:e,pid:process.pid}),de().then(Xs).catch(Qs))}));const s=async function(){it=g.MongoClient.connect(""+le("MONGODB_CONNECTION_URL"));const e=(await it).db();await Promise.all(at.map((t=>t(e))))}().then((()=>{!function(e,t){if(ce=(e,r)=>{fe&&r.setHeader("Connection","close"),t(e,r).catch((e=>{try{r.socket.unref(),r.headersSent&&(r.writeHead(500,{Connection:"close"}),r.end(`${e.name}: ${e.message}`))}catch(e){}throw e}))},e.ssl){const t={key:e.ssl.key.split(":").map((e=>$.readFileSync(D.resolve(re,e.trim())))),cert:e.ssl.cert.split(":").map((e=>$.readFileSync(D.resolve(re,e.trim()))))};ue=P.createServer(t,ce),e.onConnection&&ue.on("secureConnection",e.onConnection)}else ue=R.createServer(ce),e.onConnection&&ue.on("connection",e.onConnection);ue.on("connection",(e=>{pe.set(e,{localAddress:e.localAddress,localPort:e.localPort,remoteAddress:e.remoteAddress,remotePort:e.remotePort,remoteFamily:e.remoteFamily})})),e.onClientError&&ue.on("clientError",((t,r)=>{"ECONNRESET"!==t.code&&r.writable&&r.end("HTTP/1.1 400 Bad Request\r\nConnection: close\r\n\r\n"),e.onClientError(t,r)})),ue.timeout=e.timeout||0,null!=e.keepAliveTimeout&&(ue.keepAliveTimeout=e.keepAliveTimeout),ue.listen({port:e.port,host:e.host})}(r,(async(e,t)=>zs(e,t)))})).catch((e=>{setTimeout((()=>{throw e}))}));process.on("SIGINT",(()=>{s.finally((()=>{de().then(Xs).catch(Qs)}))})),process.on("SIGTERM",(()=>{s.finally((()=>{de().then(Xs).catch(Qs)}))}))}else{const e=le("UI_WORKER_PROCESSES");Le({message:"genieacs-ui starting",pid:process.pid,version:qs}),function(e,t,s){L.default.on("listening",((e,r)=>{4!==r.addressType&&6!==r.addressType||r.address!==s||r.port!==t||Le({message:"Worker listening",pid:e.process.pid,address:r.address,port:r.port})})),L.default.on("exit",Ge),e||(e=Math.max(2,r.cpus().length));for(let t=0;t<e;++t)Ve()}(e,Zs,Ks),process.on("SIGINT",(()=>{Le({message:"Received signal SIGINT, exiting",pid:process.pid}),Be()})),process.on("SIGTERM",(()=>{Le({message:"Received signal SIGTERM, exiting",pid:process.pid}),Be()}))}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
